<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>FAQ-常见问题列表</title>
    <url>/pages/b2b1/</url>
    <content><![CDATA[<h2 id="FAQ-常见问题列表"><a href="#FAQ-常见问题列表" class="headerlink" title="FAQ-常见问题列表"></a>FAQ-常见问题列表</h2><p><code>以下是常见的问题列表，在配置过程中，有不明白的地方先看看下边有没有你碰到的问题，如果还是解决不了再来问店主，不要上来就问，请先按步骤操作一遍后再来问，我不是专业卖家，我要上班的，不一定能及时回复信息，请理解，谢谢！</code></p>
<blockquote>
<p><strong>问：微信扫码后，提示配网超时</strong></p>
<p>答：请确保手机连接的是2.4G WIFI，不支持5G 的WIFI 。</p>
</blockquote>
<blockquote>
<p><strong>问：在和风天气申请的key在验证时提示无效（invaild key）的key怎么办？</strong></p>
<p>答：请将输入框全部删除再粘贴即可</p>
</blockquote>
<blockquote>
<p><strong>问：在和风天气申请的key在验证时提示无权限（permission denied）怎么办？</strong></p>
<p>答：请实名认证为个人开发者即可</p>
</blockquote>
<blockquote>
<p><strong>问：在和风天气申请的key提示无权限怎么办？</strong></p>
<p>答：请实名认证为个人开发者即可</p>
</blockquote>
<blockquote>
<p><strong>问：温度显示偏高怎么办</strong></p>
<p>答：由于传感器装在壳子里，且里边芯片在工作时会发热等原因造成测的温度比实际值偏高，可以在设置里的其它页面里进行补偿</p>
</blockquote>
<blockquote>
<p><strong>问：为什么我在浏览器里无法打开<a href="http://weather.local/">http://weather.local</a> 这个参数配置界面</strong></p>
<p>答：此网址是mDNS解析，已经测试过谷歌Chrome，微软新版Edge，火狐Firefox,理论上其它基于chromium的浏览器也是没问题的</p>
</blockquote>
<blockquote>
<p><strong>问：我不想装上边的推荐的主流浏览器怎么办？</strong></p>
<p>答：那你可以查看设备最后一个关于图标，点进行，可以查看到IP地址，在浏览器里直接输入IP也可以打开参数设置界面</p>
</blockquote>
<blockquote>
<p><strong>问：为什么我打开了参数配置界面后，点击按钮都没反应呢？</strong></p>
<p>答：还是那句话，浏览器兼容性问题，请安装主流浏览器</p>
</blockquote>
<blockquote>
<p><strong>问：为什么无法收到测试邮件？</strong></p>
<p>答：邮箱设置如果你不是太清楚，可以使用里边默认的邮箱参数，只需要把下边的接收邮箱修改成你自己的即可，点击测试能收到邮件即可。需要注意的是接收邮箱前边的昵称和中间的冒号，昵称可以随便填，但是那个冒号必须是<strong>英文冒号</strong>不能是<strong>中文的冒号</strong></p>
</blockquote>
<blockquote>
<p><strong>问：为什么参数设置好后，重启就没有了？</strong></p>
<p>答：参数测试完毕，需要点击一下下边的提交按钮，然后再点击重启即可生效</p>
</blockquote>
<blockquote>
<p><strong>问：为什么我下载的更新软件(flasher-esp32-T4-x-x-x.exe)提示有病毒？</strong></p>
<p>答：这个程序是用pyinstaller 把python程序打包成Windows可执行程序exe，可能是因为调用了系统进程，被杀毒软件拦截报毒，实际是没有问题，请放心使用</p>
</blockquote>
<blockquote>
<p><strong>问：为什么我下载的更新软件（flasher-esp32-T4-x-x-x.exe）一闪而过？</strong></p>
<p>答：请安装python3运行环境，记得把添加到环境变量打上勾   <a href="https://www.python.org/ftp/python/3.9.1/python-3.9.1-embed-amd64.zip">python3.91 x64 官方下载</a></p>
</blockquote>
]]></content>
      <categories>
        <category>ESP32桌面气象站-LCD触控版</category>
      </categories>
      <tags>
        <tag>ESP32</tag>
      </tags>
  </entry>
  <entry>
    <title>支持的功能列表</title>
    <url>/pages/67cf/</url>
    <content><![CDATA[<h3 id="4-0触屏版-支持的功能列表"><a href="#4-0触屏版-支持的功能列表" class="headerlink" title="4.0触屏版 支持的功能列表"></a>4.0触屏版 支持的功能列表</h3><hr>
<ul>
<li>支持未来6天及实况天气预报，更新频率参数可以配置</li>
<li>支持硬件时钟，断电或没网络 走时也准确</li>
<li>支持GPS对时及速度仪表盘</li>
<li>支持实时温湿度传感器</li>
<li>支持模拟时钟，数字时钟</li>
<li>支持6组闹钟,可以设置单次与重复</li>
<li>支持cron表达式 (非常强大灵活的定时功能)</li>
<li>支持温湿度报警 可选蜂鸣器，语音，邮件通知</li>
<li>支持万年历,倒计时</li>
<li>支持节日提醒 </li>
<li>支持十二生肖 天干地支 24节气 时辰</li>
<li>支持语音报时，可自己修改语音</li>
<li>支持触摸功能</li>
<li>配网支持热点配网和扫码配网</li>
</ul>
<h3 id="视频展示"><a href="#视频展示" class="headerlink" title="视频展示"></a>视频展示</h3><iframe src="最新实物更新/video.mp4"></iframe>]]></content>
      <categories>
        <category>ESP32桌面气象站-LCD触控版</category>
      </categories>
      <tags>
        <tag>ESP32</tag>
      </tags>
  </entry>
  <entry>
    <title>桌面气象站使用手册</title>
    <url>/pages/66cd/</url>
    <content><![CDATA[<h2 id="设备上电"><a href="#设备上电" class="headerlink" title="设备上电"></a>设备上电</h2><hr>
<figure class="highlight ada"><table><tr><td class="code"><pre><span class="line">//设备使用<span class="number">5</span>V供电，使用 Micro USB 或<span class="keyword">Type</span> <span class="type">C </span>接口的数据线连接手机充电器或者电脑USB接口</span><br></pre></td></tr></table></figure>
<h2 id="设备配网"><a href="#设备配网" class="headerlink" title="设备配网"></a>设备配网</h2><hr>
<p>设备在上电时在20秒内未连接到网络上，<del>会自动进入AP模式</del>，会显示两个按钮，一个热点配网，一个是二维码配网，可自由选择配网方式。</p>
<ul>
<li>热点配网<blockquote>
<p>用手机或者电脑 连接一个叫<code>ESP-Weather-Station</code>的热点，密码是<code>12345678</code> 连接上后 在浏览器地址栏里输入<code>192.168.4.1</code> 会打开一个配网页面 如下图所示 </p>
</blockquote>
<img src="/pages/66cd/image5.png" class="" title="配网"></li>
<li>扫码配网<blockquote>
<p>打开微信扫一扫，扫描屏幕显示的二维码，按照提示输入wifi密码进行配网，设备接收到密码后会自动重启 使用新的WiFi名称和密码连接网络<br> <img src="/pages/66cd/image6.png" class="" title="配网"></p>
</blockquote>
</li>
<li>APP配网<blockquote>
<p>安装官方ESPTOUCH 配网工具进行配网 <a href="https://www.espressif.com/zh-hans/products/software/esp-touch/resources">乐鑫官方连接</a></p>
</blockquote>
</li>
</ul>
 <img src="/pages/66cd/esptouch.png" class="" title="配网">

<p>可以点击扫描网络，选择一个网络输入密码，点击提交后，机器会重启，然后开始连接网络</p>
<h2 id="天气key申请"><a href="#天气key申请" class="headerlink" title="天气key申请"></a>天气key申请</h2><hr>
<p> <code>注意：如果不想申请KEY，也可以使用系统内置的KEY，最好还是自己申请一个，申请是免费的</code><br>到<a href="https://id.qweather.com/#/register?redirect=https%3A%2F%2Fconsole.qweather.com">和风天气官网</a>申请帐号，注册成功后，登录进后台，点击<code>和风天气开发者控制台</code>进入</p>
<img src="/pages/66cd/image1.png" class="" title="img">

<p>在左侧找到 <code>应用管理</code> 点击右侧<code>创建应用</code> 名称随意填，选择<code>免费开发版</code> 😊 点击保存后，会得到下图所示的KEY</p>
<img src="/pages/66cd/image2.png" class="" title="KEY">
<p>将这个KEY保存下来，后边获取设置天气参数需要用到</p>
<p>目前申请的key 根据大家反应，得需要实名谁才能正常获取天气，请大家注意</p>
<h2 id="参数设置"><a href="#参数设置" class="headerlink" title="参数设置"></a>参数设置</h2><hr>
<p>在浏览器里输入<a href="http://weather.local/">http://weather.local</a> 注意要完整输入 不是https  用户名和密码都是admin  会打开如下 所示的页面</p>
<img src="/pages/66cd/image3.png" class="" title="主页">

<p>这里的参数根据需要进行填写即可</p>
<h3 id="闹钟使用说明"><a href="#闹钟使用说明" class="headerlink" title="闹钟使用说明"></a>闹钟使用说明</h3><hr>
<ul>
<li>闹钟支持单次和重复功能<ol>
<li>单次指支指定时间只响一次，一次响5分钟，在闹钟响时可以点击一次触摸屏停止报警</li>
<li>重复指每天到达指定时间都会响起，要关闭报警可以触摸一次屏幕关闭，如果不关闭，5分钟后自动关闭  <img src="/pages/66cd/image8.png" class="" title="闹钟"></li>
</ol>
</li>
</ul>
<h3 id="天气功能使用说明"><a href="#天气功能使用说明" class="headerlink" title="天气功能使用说明"></a>天气功能使用说明</h3><hr>
<p>将前边获取到的KEY填进APP key 里，然后可以点击验证看是否正确，如果能返回经纬度坐标，说明网络没有问题，下边的坐标名称可以修改成你想显示的内容，这个坐标名称就是显示在气象站屏幕右上角的内容，更新频率可以自由修改</p>
<img src="/pages/66cd/image9.png" class="" title="天气">

<h3 id="温湿度报警说明"><a href="#温湿度报警说明" class="headerlink" title="温湿度报警说明"></a>温湿度报警说明</h3><hr>
<ul>
<li>温度报警选择蜂鸣器报警，在达到指定条件时，会触发蜂鸣器间隔0.35S声音，此时点击屏幕可以关掉，如果不关，在5分钟后自动关闭</li>
<li>温度报警选择语音播报，在达到指定条件时，会触发一次语音报时，从喇叭里发出，播放完毕即结束</li>
<li>温度报警选择邮件通知时，在达到指定条件时，会自动发出一封邮件到指定邮箱，如果想在微信里收到，可以使用qq邮箱，其它的邮箱请使用客户端进行收取<img src="/pages/66cd/image10.png" class="" title="天气"></li>
</ul>
<h3 id="常用邮箱参数"><a href="#常用邮箱参数" class="headerlink" title="常用邮箱参数"></a>常用邮箱参数</h3><td class="d-block comment-body markdown-body  js-comment-body">
          <p>网易系邮件配置如下：<br>
<a rel="nofollow" href="http://help.163.com/10/0731/11/6CTUBPT300753VB8.html">http://help.163.com/10/0731/11/6CTUBPT300753VB8.html</a></p>
<blockquote>
<p>163邮箱的收取邮件支持POP/IMAP两种协议，发送邮件采用SMTP协议<br>
收件和发件均使用SSL协议来进行加密传输，采用SSL协议需要单独对帐户进行设置<br>
采用SSL协议和非SSL协议时端口号有所区别，参照下表的一些常见配置组合:</p>
</blockquote>
<table>
    <thead>
        <tr>
            <th>类型</th>
            <th>服务器名称</th>
            <th>服务器地址</th>
            <th>SSL协议端口号</th>
            <th>非SSL协议端口号</th>
        </tr>
    </thead>
    <tbody>
    <tr>
        <td>收件服务器</td>
        <td>POP</td>
        <td>pop.163.com</td>
        <td>995</td>
        <td>110</td>
    </tr>
    <tr>
        <td>收件服务器</td>
        <td>IMAP</td>
        <td>imap.163.com</td>
        <td>993</td>
        <td>143</td>
    </tr>
    <tr>
        <td>发件服务器</td>
        <td>SMTP</td>
        <td>smtp.163.com</td>
        <td>465/994</td>
        <td>25</td>
    </tr>
    </tbody>
</table>
]]></content>
      <categories>
        <category>ESP32桌面气象站-LCD触控版</category>
      </categories>
      <tags>
        <tag>ESP32</tag>
      </tags>
  </entry>
  <entry>
    <title>程序更新步骤</title>
    <url>/pages/dd3/</url>
    <content><![CDATA[<h2 id="更新步骤"><a href="#更新步骤" class="headerlink" title="更新步骤"></a>更新步骤</h2><hr>
<h3 id="更新主程序"><a href="#更新主程序" class="headerlink" title="更新主程序"></a>更新主程序</h3><ul>
<li><p>1.先从官网下载ESP Flash Down Tool <a href="%E6%9B%B4%E6%96%B0%E7%A8%8B%E5%BA%8F/https://www.espressif.com/sites/default/files/tools/flash_download_tool_v3.8.5.zip">下载地址</a></p>
</li>
<li><p>2.打开上一步下载的软件 ，选择 Developer Mode</p>
</li>
<li><p>3.选择ESP32 DownloadTool</p>
</li>
<li><p>4.加载firemware.bin 地址0x10000</p>
</li>
<li><p>5.按下图参数设置   </p>
<img src="/pages/dd3/esp_firmware.png" class="" title="img"></li>
<li><p>6.按下图操作 <strong>非常关键的一步</strong>   </p>
<img src="/pages/dd3/enter_down.jpg" class="" title="img">
</li>
<li><p>firmware.bin <a href="./firmware.bin" target="_blank">下载链接</a></p>
</li>
</ul>
<h3 id="更新Flash内容"><a href="#更新Flash内容" class="headerlink" title="更新Flash内容"></a>更新Flash内容</h3><hr>
<ul>
<li><p>1.先从官网下载ESP Flash Down Tool <a href="%E6%9B%B4%E6%96%B0%E7%A8%8B%E5%BA%8F/https://www.espressif.com/sites/default/files/tools/flash_download_tool_v3.8.5.zip">下载地址</a></p>
</li>
<li><p>2.打开上一步下载的软件 ，选择 Developer Mode</p>
</li>
<li><p>3.选择ESP32 DownloadTool</p>
</li>
<li><p>4.加载spiffs.bin 地址0x250000</p>
</li>
<li><p>5.按下图参数设   </p>
 <img src="/pages/dd3/flashtool.png" class="" title="img"></li>
<li><p>6.按下图操作 <strong>非常关键的一步</strong>   </p>
 <img src="/pages/dd3/enter_down.jpg" class="" title="img">
</li>
<li><p>spiffs.bin <a href="./spiffs.bin" target="_blank">下载链接</a></p>
</li>
</ul>
<h3 id="更新全部"><a href="#更新全部" class="headerlink" title="更新全部"></a>更新全部</h3><p><code>如果烧写地址填错，分区会被破坏，必须重新烧录分区及引导程序，可以按以下设置重新烧录即可</code></p>
<ul>
<li><p>1.加载partition.bin  地址:0x8000</p>
</li>
<li><p>2.加载BootLoader_DIO_80m_bin 地址:0x1000</p>
</li>
<li><p>3.按下图设置好   </p>
 <img src="/pages/dd3/flash_partion.png" class="" title="img">
</li>
<li><p>bootloader_dio_80m.bin <a href="./bootloader_dio_80m.bin" target="_blank">下载链接</a></p>
</li>
<li><p>partitions.bin <a href="./partitions.bin" target="_blank">下载链接</a></p>
</li>
</ul>
]]></content>
      <categories>
        <category>ESP32桌面气象站-LCD触控版</category>
      </categories>
      <tags>
        <tag>ESP32</tag>
      </tags>
  </entry>
  <entry>
    <title>设备界面预览</title>
    <url>/pages/99a5/</url>
    <content><![CDATA[<h3 id="设备界面"><a href="#设备界面" class="headerlink" title="设备界面"></a>设备界面</h3><hr>
<p>下边是设备界面展示，具体以收到的实物为准  </p>
<img src="/pages/99a5/image7.png" class="" title="image1">
<img src="/pages/99a5/image6.png" class="" title="image1">
<img src="/pages/99a5/image1.png" class="" title="image1">
<img src="/pages/99a5/image2.png" class="" title="image1">
<img src="/pages/99a5/image5.png" class="" title="image1">
<img src="/pages/99a5/image3.png" class="" title="image1">
<img src="/pages/99a5/image4.png" class="" title="image1">

<p><code>程序随时可能会升级，界面会稍有变化，具体以实物为准</code></p>
<h3 id="语音播报素材"><a href="#语音播报素材" class="headerlink" title="语音播报素材"></a>语音播报素材</h3><hr>
<ul>
<li>甜美语音包<a href="./voice.rar" target="_blank">下载链接</a></li>
<li><del>语音更新工具</del><a href="./语音合成工具.rar" target="_blank"><del>下载链接</del></a></li>
</ul>
<p><code>以上素材来源于网络，如果大家有更好有素材，可以发送到xfdr0805@126.com 邮箱，测试OK我会更新到设备里</code></p>
<h3 id="设备外观"><a href="#设备外观" class="headerlink" title="设备外观"></a>设备外观</h3><hr>
<img src="/pages/99a5/front.jpg" class="" title="front">
<img src="/pages/99a5/back.jpg" class="" title="back">

<p><code>外壳为3D打印，材料为树脂或PLA，由于是3D打印，所以无法与使用模具做出来的产品相比较，难免会有瑕疵</code></p>
<h3 id="设备尺寸"><a href="#设备尺寸" class="headerlink" title="设备尺寸"></a>设备尺寸</h3><hr>
<ul>
<li>PCB尺寸<img src="/pages/99a5/pcb_skill.png" class="" title="pcb_skill">
<img src="/pages/99a5/pcb_3d.png" class="" title="pcb_3d"></li>
<li>外壳尺寸<img src="/pages/99a5/box_size.png" class="" title="box_size">
<img src="/pages/99a5/box.png" class="" title="box"></li>
<li>3D打印文件<a href="./3D打印文件.rar" target="_blank">下载链接</a></li>
</ul>
]]></content>
      <categories>
        <category>ESP32桌面气象站-LCD触控版</category>
      </categories>
      <tags>
        <tag>ESP32</tag>
      </tags>
  </entry>
  <entry>
    <title>墨水屏气象站</title>
    <url>/pages/2676/</url>
    <content><![CDATA[<h3 id="ESP32桌面气象站-墨水屏版-正在开发中"><a href="#ESP32桌面气象站-墨水屏版-正在开发中" class="headerlink" title="ESP32桌面气象站-墨水屏版  正在开发中"></a>ESP32桌面气象站-墨水屏版  正在开发中</h3>]]></content>
      <categories>
        <category>ESP32桌面气象站-墨水屏版</category>
      </categories>
      <tags>
        <tag>ESP32</tag>
        <tag>epaper</tag>
      </tags>
  </entry>
  <entry>
    <title>软件配合实现的一键开关机电路</title>
    <url>/pages/26b6/</url>
    <content><![CDATA[<blockquote>
<p>一键开关机电路仅使用一个按键，就可以实现开机和关机的功能。这个电路可以令产品更加简洁<br>注: 文章为转载  <a href="http://dianlua.com/011">电路网</a></p>
</blockquote>
<img src="/pages/26b6/4.png" class="" title="软件配合实现的一键开关机电路">
<h3 id="一、原理分析"><a href="#一、原理分析" class="headerlink" title="一、原理分析"></a>一、原理分析</h3><p>整个电路以+5V供电举例。</p>
<p>1.在关机状态时：电路中各位置的电压大小如下。</p>
<img src="/pages/26b6/5.png" class="" title="软件配合实现的一键开关机电路">

<p>可以看出，关机状态下，电路没有形成任何回路，没有产生电流，关机功耗为0。</p>
<p>2.按键被按下并且保持按下时：</p>
<p>a. Q1的G极电压通过二极管D1和按键SW1，被拉低到约0.3V。0.3V是二极管D1的导通压降。</p>
<img src="/pages/26b6/6.png" class="" title="软件配合实现的一键开关机电路">

<p>b. 于是MOS管Q1的Vgs &#x3D; 0.3 - 5 &#x3D; -4.7V，MOS管Q1被打开，VCC电压变为5V，并对MCU供电。</p>
<img src="/pages/26b6/7.png" class="" title="软件配合实现的一键开关机电路">

<p>c. MCU迅速跑起来后，软件令GPIO-Out输出高电平5V，打开三极管Q2，饱和导通的三极管Q2将MOS管Q1的g极拉到0V，Vgs变为0 - 5 &#x3D; -5V。</p>
<img src="/pages/26b6/8.png" class="" title="软件配合实现的一键开关机电路">

<p>3.按键松开后：</p>
<p>①MCU的GPIO-Out维持输出高电平5V。</p>
<p>②三极管Q2继续饱和导通，将MOS管Q1的g极拉到0V，维持其Vgs &#x3D; 0 - 5 &#x3D; -5V。</p>
<p>③MOS管Q1维持打开，令VCC电压维持为5V。</p>
<img src="/pages/26b6/9.png" class="" title="软件配合实现的一键开关机电路">

<p>4.此时短按按键：</p>
<p>①MCU上电启动后要马上将GPIO-In设为输入，打开内部上拉电阻，此时GPIO-In对外表现为5V。</p>
<p>②按键SW1被按下后，GPIO-In由5V被拉到0.3V。</p>
<img src="/pages/26b6/10-1.png" class="" title="软件配合实现的一键开关机电路">

<p>③MCU侦测到按键被短按，可以根据软件的设定对此作出各种响应。</p>
<p>5.长按按键关机：</p>
<p>①如果MCU侦测到按键是长按，则执行关机动作。</p>
<p>②MCU执行完关机动作，最后将GPIO-Out输出低电平0V，关闭三极管Q2。</p>
<p>③按键SW1松开后，MOS管Q1的g极变为5V，MOS管Q1被关闭。</p>
<p>④Vcc的电压变为0V，MCU断电，此时整个电路的功耗变为0。</p>
<img src="/pages/26b6/11.png" class="" title="软件配合实现的一键开关机电路">

<p>关机后各点的电压又恢复为：</p>
<img src="/pages/26b6/12-2.png" class="" title="软件配合实现的一键开关机电路">

<h3 id="二、引申电路"><a href="#二、引申电路" class="headerlink" title="二、引申电路"></a>二、引申电路</h3><p>以上分析所用的例子，MCU是直接用电压值为5V的Vcc供电，并且GPIO带内置上拉电阻。</p>
<p>如果MCU不是用Vcc直接供电，而是：</p>
<p>①用由Vcc产生的+3.3V供电（意思是Vcc电压为0时，+3.3V电压也为0）。</p>
<p>②并且GPIO没有内部上拉电阻，则要加外部上拉电阻。</p>
<p>则电路变成这样：</p>
<img src="/pages/26b6/13-1.png" class="" title="软件配合实现的一键开关机电路">

<h3 id="三、MCU死机了怎么办"><a href="#三、MCU死机了怎么办" class="headerlink" title="三、MCU死机了怎么办"></a>三、MCU死机了怎么办</h3><p>这种经典的一键开关机电路需要软件配合，如果MCU死机了，或者程序跑飞了，不就关不了机了吗，怎么办？</p>
<p>1.那就让MCU异常了就赶紧重启：启用MCU内部的看门狗（Watch Dog）功能，或者加入外部看门狗。</p>
<p>2.产品设计成电源可插拔，即死机了就人工重新插拔电源，或拔出电池重新装上。</p>
<p>3.增加一个按键SW2：</p>
<img src="/pages/26b6/14-1.png" class="" title="软件配合实现的一键开关机电路">

<p>这个按键SW2要隐藏在产品内部，用户无感知。产品外壳留一个小孔，死机后让用户用细铁丝通过小孔顶一下按键SW2，令三极管Q2的Vbe &#x3D; 0，将三极管Q2关闭，从而令MOS管Q1关闭，达到对电压Vcc断电的目的。</p>
<p>这种做法，很多产品都有，下图是某产品的复位孔：</p>
<img src="/pages/26b6/15.jpg" class="" title="软件配合实现的一键开关机电路">

<h3 id="四、能坚持看到这里真不错呢"><a href="#四、能坚持看到这里真不错呢" class="headerlink" title="四、能坚持看到这里真不错呢"></a>四、能坚持看到这里真不错呢</h3><p>最后，关于电路的学习，希望大家，enjoy！ 转了2个妹子过来 ^_^</p>
<img src="/pages/26b6/11.jpg" class="" title="软件配合实现的一键开关机电路">
<img src="/pages/26b6/10.jpg" class="" title="软件配合实现的一键开关机电路">]]></content>
      <tags>
        <tag>HardWare</tag>
        <tag>一键开关机</tag>
      </tags>
  </entry>
  <entry>
    <title>Sonoff-1CH</title>
    <url>/pages/756a/</url>
    <content><![CDATA[<hr>
<h3 id="待续…"><a href="#待续…" class="headerlink" title="待续…"></a>待续…</h3>]]></content>
      <categories>
        <category>homekit</category>
      </categories>
      <tags>
        <tag>sonoff</tag>
        <tag>1ch</tag>
      </tags>
  </entry>
  <entry>
    <title>Sonoff-2CH</title>
    <url>/pages/759a/</url>
    <content><![CDATA[<hr>
<h3 id="待续…"><a href="#待续…" class="headerlink" title="待续…"></a>待续…</h3>]]></content>
      <categories>
        <category>homekit</category>
      </categories>
      <tags>
        <tag>sonoff</tag>
        <tag>2ch</tag>
      </tags>
  </entry>
  <entry>
    <title>Sonoff-4CH</title>
    <url>/pages/747a/</url>
    <content><![CDATA[<h3 id=""><a href="#" class="headerlink" title=""></a></h3><img src="/pages/747a/2023-01-01_17-41-16.png" class="" title="img">
<img src="/pages/747a/2023-01-01_17-42-37.png" class="" title="img">
<img src="/pages/747a/2023-01-01_17-43-15.png" class="" title="img">

<p>4路homekit继电器,带外部4路按键开关，可以接墙壁开关，功能可通过webpage进行设置，3（按键，家庭APP，webpage）端状态同步,运行稳定可靠</p>
]]></content>
      <categories>
        <category>homekit</category>
      </categories>
      <tags>
        <tag>sonoff</tag>
        <tag>4ch</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux应用层SPI驱动WS2812_RGB灯</title>
    <url>/pages/20e3/</url>
    <content><![CDATA[<blockquote>
<p>在F1C100S上调试的，原本打算用GPIO来驱动RGB灯的，使用GPIOD这个库来操作GPIO，实测下来翻转速度还到不了1MHZ，这肯定是不行。于是就用SPI来驱动了</p>
</blockquote>
<ol>
<li><p>首先是在设备树添加SPI1，这样系统启动后应用层才可以操作SPI设备，注意这里并没有匹配“spi-dev”，因为启动时会有错误提示，但是spi是可以用的，这里为了去除那个错误就匹配的下边这个，用起来是一样的。</p>
  <figure class="highlight c"><table><tr><td class="code"><pre><span class="line">    &amp;spi1&#123;</span><br><span class="line">    status = <span class="string">&quot;okay&quot;</span>;</span><br><span class="line">    spidev@<span class="number">0</span>&#123;</span><br><span class="line">        compatible = <span class="string">&quot;rohm,dh2228fv&quot;</span>;</span><br><span class="line">        spi-max-frequency = &lt;<span class="number">50000000</span>&gt;;</span><br><span class="line">        reg = &lt;<span class="number">0</span>&gt;;</span><br><span class="line">        status = <span class="string">&quot;okay&quot;</span>;</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></li>
<li><p>系统启动后，查看&#x2F;dev是否有spidev1.0。<code>另外虽然SPI初始化后有4个脚，但是实际测试依然可以做为普通GPIO使用，也即只使用MOSI这一个引脚即可</code></p>
 <img src="/pages/20e3/2022-12-30_141541.png" class="" title="img">
</li>
<li><p>一切做准备就绪，首先就是要初始化SPI,这里的mode并无多大关系，任意一种都可以的</p>
 <figure class="highlight c"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">spi_init</span><span class="params">(<span class="type">char</span> *spi_dev, <span class="type">int</span> mode, <span class="type">int</span> bits, <span class="type">int</span> speed)</span></span><br><span class="line">&#123;</span><br><span class="line">    fd = open(spi_dev, O_RDWR);</span><br><span class="line">    <span class="keyword">if</span> (fd &lt; <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;[%s]:[%d] open spi file error\r\n&quot;</span>, __FUNCTION__, __LINE__);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//设置模式</span></span><br><span class="line">    ret = ioctl(fd, SPI_IOC_WR_MODE, &amp;mode);</span><br><span class="line">    <span class="keyword">if</span> (ret == <span class="number">-1</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;can&#x27;t set spi mode&quot;</span>);</span><br><span class="line"></span><br><span class="line">    ret = ioctl(fd, SPI_IOC_RD_MODE, &amp;mode);</span><br><span class="line">    <span class="keyword">if</span> (ret == <span class="number">-1</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;can&#x27;t get spi mode&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//设置一次多少位</span></span><br><span class="line">    ret = ioctl(fd, SPI_IOC_WR_BITS_PER_WORD, &amp;bits);</span><br><span class="line">    <span class="keyword">if</span> (ret == <span class="number">-1</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;can&#x27;t set bits per word&quot;</span>);</span><br><span class="line"></span><br><span class="line">    ret = ioctl(fd, SPI_IOC_RD_BITS_PER_WORD, &amp;bits);</span><br><span class="line">    <span class="keyword">if</span> (ret == <span class="number">-1</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;can&#x27;t get bits per word&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//设置最大速度</span></span><br><span class="line">    ret = ioctl(fd, SPI_IOC_WR_MAX_SPEED_HZ, &amp;speed);</span><br><span class="line">    <span class="keyword">if</span> (ret == <span class="number">-1</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;can&#x27;t set max speed hz&quot;</span>);</span><br><span class="line"></span><br><span class="line">    ret = ioctl(fd, SPI_IOC_RD_MAX_SPEED_HZ, &amp;speed);</span><br><span class="line">    <span class="keyword">if</span> (ret == <span class="number">-1</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;can&#x27;t get max speed hz&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;spi mode: %d\n&quot;</span>, mode);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;bits per word: %d\n&quot;</span>, bits);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;max speed: %d Hz (%d KHz)\n&quot;</span>, speed, speed / <span class="number">1000</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li>
<li><p>我用的灯的时序如下图所示，数据格式为RGB888</p>
<p> <code>a.从下图可以看到是通过高电平和低电平时间来确认发送的是0还是1</code></p>
<p> <code>b.高0.3us低0.9us代表0，高0.9us低0.3us代表1</code></p>
<p> <code>c.总时间约1.2us士0.16us 1.04us-1.36us 这里按1Mhz进行计算，F1C100S 可以设置的时钟 1M 2M 4M 8M .......</code></p>
<p> <code>d. 这里采取8个时钟输出1位灯的数据，经过计算可知0xf8（1111 1100=0.125us*7=750us）就可代表1，0xc0（1100 0000=0.125us*2=250us）就代表0.</code></p>
<p> <code>e. 由以上可知，一个RGB灯是由24Bit组成，SPI一次需要发送24个字节才能控制一个灯</code></p>
 <figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="type">uint8_t</span> j = <span class="number">0</span>; j &lt; <span class="number">3</span>; j++)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">uint8_t</span> i = <span class="number">0</span>; i &lt; <span class="number">8</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> ((data &amp; <span class="number">0x80</span>) &gt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            temp-&gt;data[i + j * <span class="number">8</span>] = <span class="number">0xfc</span>; <span class="comment">// 1</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            temp-&gt;data[i + j * <span class="number">8</span> ] = <span class="number">0xc0</span>; <span class="comment">// 0</span></span><br><span class="line">        &#125;</span><br><span class="line">        data = data &lt;&lt; <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
</ol>
<img src="/pages/20e3/2022-12-30_142908.png" class="" title="img">

<ol start="5">
<li><p>最后就是关于亮度调整的问题，要想调整亮度需要把RGB数据转换到HSV姿色空间下才好调整亮度<br>以下是关于RGB&lt;—&gt;HSV互转的代码</p>
 <figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> max(a, b) ((a) &gt; (b) ? (a) : (b))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> min(a, b) ((a) &lt; (b) ? (a) : (b))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> max3(a, b, c) (((a) &gt; (b) ? (a) : (b)) &gt; (c) ? ((a) &gt; (b) ? (a) : (b)) : (c))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> min3(a, b, c) (((a) &lt; (b) ? (a) : (b)) &lt; (c) ? ((a) &lt; (b) ? (a) : (b)) : (c))</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">led_strip_rgb2hsv</span><span class="params">(<span class="type">color_rgb_t</span> *rgb,<span class="type">color_hsv_t</span> *hsv)</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="type">uint8_t</span> max, min, delta = <span class="number">0</span>;</span><br><span class="line">    rgb-&gt;b = (<span class="type">uint8_t</span>)(rgb-&gt;color);</span><br><span class="line">    rgb-&gt;g = (<span class="type">uint8_t</span>)((rgb-&gt;color)&gt;&gt;<span class="number">8</span>);</span><br><span class="line">    rgb-&gt;r = (<span class="type">uint8_t</span>)((rgb-&gt;color)&gt;&gt;<span class="number">16</span>);</span><br><span class="line">    max = max3(rgb-&gt;r, rgb-&gt;g, rgb-&gt;b);</span><br><span class="line">    min = min3(rgb-&gt;r, rgb-&gt;g, rgb-&gt;b);</span><br><span class="line">    delta = (max - min);</span><br><span class="line">    <span class="keyword">if</span> (delta == <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        hsv-&gt;h = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (rgb-&gt;r == max)</span><br><span class="line">        &#123;</span><br><span class="line">            hsv-&gt;h = ((rgb-&gt;g - rgb-&gt;b) * <span class="number">60</span> / delta);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (rgb-&gt;g == max)</span><br><span class="line">        &#123;</span><br><span class="line">            hsv-&gt;h = <span class="number">120</span> + (((rgb-&gt;b - rgb-&gt;r) * <span class="number">60</span> / delta));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (rgb-&gt;b == max)</span><br><span class="line">        &#123;</span><br><span class="line">            hsv-&gt;h = <span class="number">240</span> + (((rgb-&gt;r - rgb-&gt;g) * <span class="number">60</span> / delta));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (hsv-&gt;h &lt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            hsv-&gt;h += <span class="number">360</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (max == <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        hsv-&gt;s = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        hsv-&gt;s = (delta*<span class="number">100</span> / max);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    hsv-&gt;v = max;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">led_strip_hsv2rgb</span><span class="params">(<span class="type">color_hsv_t</span> *hsv,<span class="type">color_rgb_t</span> *rgb)</span></span><br><span class="line">&#123;</span><br><span class="line">    hsv-&gt;h %= <span class="number">360</span>; <span class="comment">// h -&gt; [0,360]</span></span><br><span class="line">    <span class="type">uint32_t</span> rgb_max = hsv-&gt;v * <span class="number">2.55f</span>;</span><br><span class="line">    <span class="type">uint32_t</span> rgb_min = rgb_max * (<span class="number">100</span> - hsv-&gt;s) / <span class="number">100.0f</span>;</span><br><span class="line"></span><br><span class="line">    <span class="type">uint32_t</span> i = hsv-&gt;h / <span class="number">60</span>;</span><br><span class="line">    <span class="type">uint32_t</span> diff = hsv-&gt;h % <span class="number">60</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// RGB adjustment amount by hue</span></span><br><span class="line">    <span class="type">uint32_t</span> rgb_adj = (rgb_max - rgb_min) * diff / <span class="number">60</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">switch</span> (i)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">        rgb-&gt;r = rgb_max;</span><br><span class="line">        rgb-&gt;g = rgb_min + rgb_adj;</span><br><span class="line">        rgb-&gt;b = rgb_min;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">        rgb-&gt;r = rgb_max - rgb_adj;</span><br><span class="line">        rgb-&gt;g = rgb_max;</span><br><span class="line">        rgb-&gt;b = rgb_min;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">        rgb-&gt;r = rgb_min;</span><br><span class="line">        rgb-&gt;g = rgb_max;</span><br><span class="line">        rgb-&gt;b = rgb_min + rgb_adj;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">        rgb-&gt;r = rgb_min;</span><br><span class="line">        rgb-&gt;g = rgb_max - rgb_adj;</span><br><span class="line">        rgb-&gt;b = rgb_max;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">        rgb-&gt;r = rgb_min + rgb_adj;</span><br><span class="line">        rgb-&gt;g = rgb_min;</span><br><span class="line">        rgb-&gt;b = rgb_max;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">        rgb-&gt;r = rgb_max;</span><br><span class="line">        rgb-&gt;g = rgb_min;</span><br><span class="line">        rgb-&gt;b = rgb_max - rgb_adj;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    rgb-&gt;color = rgb-&gt;r;</span><br><span class="line">    rgb-&gt;color = (rgb-&gt;color &lt;&lt; <span class="number">8</span>) | rgb-&gt;g;</span><br><span class="line">    rgb-&gt;color = (rgb-&gt;color &lt;&lt; <span class="number">8</span>) | rgb-&gt;b;</span><br><span class="line">    <span class="comment">//printf(&quot;color:%x %x %x %x\n&quot;, rgb-&gt;color,rgb-&gt;r, rgb-&gt;g, rgb-&gt;b);</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
</ol>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>SPI</tag>
        <tag>F1C100S</tag>
        <tag>F1C200S</tag>
        <tag>ARM9</tag>
        <tag>V3S</tag>
      </tags>
  </entry>
  <entry>
    <title>Naza-D1上使用I2S外接PCM512X声卡</title>
    <url>/pages/dd43/</url>
    <content><![CDATA[<pre><code>    问题
    [    9.475500]  2034000.daudio-pcm512x-hifi: pcm new capture failed with err=-14
    [    9.483492]  2034000.daudio-pcm512x-hifi: ASoC: pcm constructor failed: -14
    [    9.491279] sunxi-audio-card 20340a0.sounddaudio2: ASoC: can&#39;t create pcm 2034000.daudio-pcm512x-hifi :-14


    #aplay -D hw:3 cuanqi.wav 
    [ 1605.453045] pcm512x 2-004c: Need SCLK for master mode: -2
    [ 1605.459096] pcm512x 2-004c: ASoC: can&#39;t open codec pcm512x-hifi: -2

    pcm512x: pcm512x@4c &#123;
                compatible = &quot;ti,pcm5121&quot;;
                /*pcm512x,format = &quot;i2s&quot;;*/
                #sound-dai-cells = &lt;0&gt;;
                reg = &lt;0x4c&gt;;			
                AVDD-supply = &lt;&amp;reg_pio3_3&gt;;
                DVDD-supply = &lt;&amp;reg_pio3_3&gt;;
                CPVDD-supply = &lt;&amp;reg_pio3_3&gt;;
                status = &quot;okay&quot;;
        &#125;;


    &amp;daudio2 &#123;
        mclk_div 	= &lt;0x80&gt;;
        frametype 	= &lt;0x00&gt;;
        tdm_config 	= &lt;0x01&gt;;
        sign_extend 	= &lt;0x00&gt;;
        tx_data_mode 	= &lt;0x00&gt;;
        rx_data_mode 	= &lt;0x00&gt;;
        msb_lsb_first 	= &lt;0x00&gt;;
        pcm_lrck_period = &lt;0x80&gt;;
        slot_width_select = &lt;0x18&gt;;
        asrc_function_en  = &lt;0x00&gt;;
        pinctrl-names   = &quot;default&quot;, &quot;sleep&quot;;
        pinctrl-0       = &lt;&amp;daudio2_pins_a&gt;;
        pinctrl-1       = &lt;&amp;daudio2_pins_b&gt;;
        pinctrl_used	= &lt;0x1&gt;;
        daudio_type	= &lt;0x0&gt;;
        status = &quot;okay&quot;;
    &#125;;

    /* if HDMI audio is used, daudio2 should be enable. */
    &amp;hdmiaudio &#123;
        status = &quot;disabled&quot;;
    &#125;;

    &amp;sounddaudio2 &#123;
        status = &quot;okay&quot;;
        simple-audio-card,name = &quot;pcm512x&quot;;
        simple-audio-card,format = &quot;i2s&quot;;
        simple-audio-card,codec &#123;
            sound-dai = &lt;&amp;pcm512x&gt;;
        &#125;;
    &#125;;
</code></pre>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>D1</tag>
        <tag>Neza</tag>
        <tag>I2S</tag>
        <tag>PCM512X</tag>
      </tags>
  </entry>
  <entry>
    <title>Neza-D1开发板学习之I2C-OLED篇</title>
    <url>/pages/510b/</url>
    <content><![CDATA[<ol>
<li><p>Neza-D1开发板扩展IO上引出了I2C2，从原理图上看，已经接了PCF8574@38了，总线速度400K,我们的OLED也是接在这上边的,由于这屏幕比较小，显示不了多少东西，就不用FB方式了，直接在应用层操作OLED，所以设备树也不需要配置</p>
 </li>
<li><p>在应用层操作就跟单片机操作是一样的了，这里为了方便操作屏幕，我分辨率移植u8g2这个库，我手里的哦了的是1.3”的，驱动IC是SHT1106，用1306也可以，只能显示不满屏，可能是基地址定义的不一样</p>
</li>
<li><p>我们不需要从OLED读取数据，所以只需要实现I2C写函数就可以，注意OLED模块上标的地址是0x78，这个是8位地址，这里使用的是7位地址，右移一位所以是0x3C</p>
<pre><code> unsigned char i2c_init()
 &#123;
     const char *i2c_dev = &quot;/dev/i2c-2&quot;;
     fd = open(i2c_dev, O_RDWR);
     if (fd &lt; 0)
     &#123;
         printf(&quot;not have /dev/i2c-2 t\r\n&quot;);
         fflush(stdout);
         return -1;
     &#125;
     return 0;
 &#125;
 // I2C Addr 7bit
 unsigned char base_i2c_write(unsigned char device_addr, unsigned char *buff, int num)
 &#123;

     struct i2c_rdwr_ioctl_data data;
     struct i2c_msg msgs_str[1];
     data.msgs = msgs_str;
     data.nmsgs = 1;
     data.msgs[0].len = num;
     data.msgs[0].addr = device_addr;
     data.msgs[0].flags = 0;
     data.msgs[0].buf = buff;
     ioctl(fd, I2C_RDWR, (unsigned long)&amp;data);
 &#125;
</code></pre>
</li>
<li><p>移植u8g2 非常简单，只需修改这下边这个函数里初始化位置和写数据位置就行，另外一个是延时，可以不用修改<br> uint8_t u8x8_byte_hw_i2c(u8x8_t *u8x8, uint8_t msg, uint8_t arg_int, void <em>arg_ptr)<br> {<br>     &#x2F;</em> u8g2&#x2F;u8x8 will never send more than 32 bytes between START_TRANSFER and END_TRANSFER *&#x2F;<br>     static uint8_t buffer[128];<br>     static uint8_t buf_idx;<br>     uint8_t <em>data;<br><br>     switch (msg)<br>     {<br>     case U8X8_MSG_BYTE_INIT:<br>     {<br>         &#x2F;</em> add your custom code to init i2c subsystem *&#x2F;<br>        i2c_init; &#x2F;&#x2F; I2C初始化<br>     }<br>     break;<br><br>     case U8X8_MSG_BYTE_START_TRANSFER:<br>     {<br>         buf_idx &#x3D; 0;<br>     }<br>     break;<br><br>     case U8X8_MSG_BYTE_SEND:<br>     {<br>         data &#x3D; (uint8_t *)arg_ptr;<br><br>         while (arg_int &gt; 0)<br>         {<br>             buffer[buf_idx++] &#x3D; *data;<br>             data++;<br>             arg_int–;<br>         }<br>     }<br>     break;<br><br>     case U8X8_MSG_BYTE_END_TRANSFER:<br>     {<br>         &#x2F;&#x2F;i2c写函数<br>         if (base_i2c_write(OLED_ADDRESS, buffer, buf_idx) !&#x3D; 0)<br>             return 0;<br>     }<br>     break;<br><br>     case U8X8_MSG_BYTE_SET_DC:<br>         break;<br><br>     default:<br>         return 0;<br>     }<br><br>     return 1;<br> }<br><br> uint8_t u8x8_gpio_and_delay(u8x8_t *u8x8, uint8_t msg, uint8_t arg_int, void <em>arg_ptr)<br> {<br>     switch (msg)<br>     {<br>     case U8X8_MSG_DELAY_100NANO: &#x2F;&#x2F; delay arg_int * 100 nano seconds<br>         break;<br>     case U8X8_MSG_DELAY_10MICRO: &#x2F;&#x2F; delay arg_int * 10 micro seconds<br>         break;<br>     case U8X8_MSG_DELAY_MILLI: &#x2F;&#x2F; delay arg_int * 1 milli second<br>         break;<br>     case U8X8_MSG_DELAY_I2C:      &#x2F;&#x2F; arg_int is the I2C speed in 100KHz, e.g. 4 &#x3D; 400 KHz<br>         break;                    &#x2F;&#x2F; arg_int&#x3D;1: delay by 5us, arg_int &#x3D; 4: delay by 1.25us<br>     case U8X8_MSG_GPIO_I2C_CLOCK: &#x2F;&#x2F; arg_int&#x3D;0: Output low at I2C clock pin<br>         break;                    &#x2F;&#x2F; arg_int&#x3D;1: Input dir with pullup high for I2C clock pin<br>     case U8X8_MSG_GPIO_I2C_DATA:  &#x2F;&#x2F; arg_int&#x3D;0: Output low at I2C data pin<br>         break;                    &#x2F;&#x2F; arg_int&#x3D;1: Input dir with pullup high for I2C data pin<br>     case U8X8_MSG_GPIO_MENU_SELECT:<br>         u8x8_SetGPIOResult(u8x8, &#x2F;</em> get menu select pin state <em>&#x2F; 0);<br>         break;<br>     case U8X8_MSG_GPIO_MENU_NEXT:<br>         u8x8_SetGPIOResult(u8x8, &#x2F;</em> get menu next pin state <em>&#x2F; 0);<br>         break;<br>     case U8X8_MSG_GPIO_MENU_PREV:<br>         u8x8_SetGPIOResult(u8x8, &#x2F;</em> get menu prev pin state <em>&#x2F; 0);<br>         break;<br>     case U8X8_MSG_GPIO_MENU_HOME:<br>         u8x8_SetGPIOResult(u8x8, &#x2F;</em> get menu home pin state *&#x2F; 0);<br>         break;<br>     default:<br>         u8x8_SetGPIOResult(u8x8, 1); &#x2F;&#x2F; default return value<br>         break;<br>     }<br>     return 1;<br> }</p>
</li>
<li><p>这就移植完了，下边编译一下传到开发板里，可以看到显示成功</p>
</li>
<li><p>最后附上完整工程</p>
</li>
</ol>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>D1</tag>
        <tag>Neza</tag>
        <tag>I2C</tag>
        <tag>OLED</tag>
      </tags>
  </entry>
  <entry>
    <title>Neza-D1开发板学习之SPI-LCD灯篇</title>
    <url>/pages/aed1/</url>
    <content><![CDATA[<ol>
<li>Neza-D1开发板芯片很强，但是没有引出RGB接口，板上引出了HDMI与LVDS接口，没引出RGB接口，所以手里的RGB接口的屏用不上了，扩展IO上有引出SPI1接口，看了一下尺寸，刚好可以放的下2.8”的SPI屏幕，正好手里有以前剩下的屏幕，就画了一块扩展板(可惜芯片是BGA封装，即使我能画出来，也没本事焊上啊！)，驱动芯片是ili9341 4线SPI，又加了一个触摸芯片上去，如下图<img src="/pages/aed1/LCD.png" class="" title="LCD"></li>
<li>设备树配置<br> lcd_ili9341@0 {<br> #address-cells &#x3D; &lt;1&gt;;<br> #size-cells &#x3D; &lt;1&gt;;<br> compatible &#x3D; “ilitek,ili9341”;<br> reg &#x3D; &lt;0&gt;;<br> spi-max-frequency &#x3D; &lt;32000000&gt;;<br> rotation &#x3D; &lt;0&gt;;<br> spi-cpol;<br> spi-cpha;<br> rgb;<br> fps &#x3D; &lt;30&gt;;<br> buswidth &#x3D; &lt;8&gt;;<br> txbuflen &#x3D; &lt;32768&gt;;<br> reset-gpios &#x3D; &lt;&amp;pcf8574 6 GPIO_ACTIVE_LOW&gt;;<br> dc-gpios &#x3D; &lt;&amp;pcf8574 7 GPIO_ACTIVE_LOW&gt;;<br> &#x2F;<em>backlight &#x3D; &lt;&amp;backlight&gt;;</em>&#x2F;<br> led-gpios &#x3D; &lt;&amp;pcf8574 5 GPIO_ACTIVE_HIGH&gt;;<br> status &#x3D; “okay”;<br> };</li>
<li>在内核打开small lcd support选项<br> [*] Staging drivers  —&gt;<br>  &lt;*&gt;   Support for small TFT LCD display modules  —&gt;3<br>     &lt;*&gt;   FB driver for the ILI9341 LCD Controller </li>
<li>系统启动log<br> [    2.670067] fbtft_of_value: buswidth &#x3D; 8<br> [    2.674512] fbtft_of_value: backlight &#x3D; 39<br> [    2.679097] fbtft_of_value: fps &#x3D; 30<br> [    2.683098] fbtft_of_value: txbuflen &#x3D; 32768<br> [    2.691259] GPT:Primary header thinks Alt. header is not at the end of the disk.<br> [    2.699560] GPT:625184 !&#x3D; 7774207<br> [    2.703265] GPT:Alternate GPT header not at the end of the disk.<br> [    2.709981] GPT:625184 !&#x3D; 7774207<br> [    2.713688] GPT: Use GNU Parted to correct GPT errors.<br> [    2.719480]  mmcblk0: p1 p2 p3 p4<br> [    2.987837] random: fast init done<br> [    3.036258] graphics fb1: fb_ili9341 frame buffer, 240x320, 150 KiB video memory, 32 KiB buffer memory, fps&#x3D;31, spi1.0 at 32 MHz</li>
<li>这里有一点需要注意，我使用的GPIO是通过PCF8574扩展出来的，对IO读写操作时可能会导致休眠，因此不能在中断函数里使用<br> 因此我们需要简单的修改一下驱动文件，用一个宏定义即可,如果不修改操作一次IO，就会出现一堆警告<br> #define gpio_set_value gpio_set_value_cansleep</li>
<li>进系统里可以查看是否有对应设备<br> # ls &#x2F;dev&#x2F;fb*<br> &#x2F;dev&#x2F;fb0  &#x2F;dev&#x2F;fb1<br> 测试屏幕<br> # cat &#x2F;dev&#x2F;urandom &gt; &#x2F;dev&#x2F;fb1<br> cat: write error: No space left on device<br> 清屏<br> # cat &#x2F;dev&#x2F;zero &gt; &#x2F;dev&#x2F;fb1<br> cat: write error: No space left on device<br> 显示图片</li>
</ol>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>SPI</tag>
        <tag>D1</tag>
        <tag>Neza</tag>
        <tag>LCD</tag>
      </tags>
  </entry>
  <entry>
    <title>Neza-D1开发板学习之按键和旋转编码器篇</title>
    <url>/pages/55f5/</url>
    <content><![CDATA[<ol>
<li><p>Neza-D1开发板上只引出一个按键，是使用的LRADC检检测按键的，想使用更多按键，可以使用板子上通过PCF8574扩展出来的IO，我画的扩展板使用了四个按键，分别为PP0，PP1，PP2，PP4</p>
 <img src="/pages/55f5/KEY.png" class="" title="KEY"></li>
<li><p>设备树配置如下 内核需要勾选 Polled input device skeleton<br> gpio_keys {<br>     compatible &#x3D; “gpio-keys”;<br>     pinctrl-names &#x3D; “default”;<br>     &#x2F;<em>pinctrl-0 &#x3D; &lt;&amp;key_pins&gt;;</em>&#x2F;<br>     #address-cells &#x3D; &lt;1&gt;;<br>     #size-cells &#x3D; &lt;0&gt;;<br>     autorepeat;<br>     button@0 {<br>         label &#x3D; “Key volume up”;<br>         linux,code &#x3D; <KEY_VOLUMEUP>;<br>         gpios &#x3D; &lt;&amp;pcf8574 0 GPIO_ACTIVE_LOW&gt;; &#x2F;* PP0 <em>&#x2F;<br>     };<br><br>     button@1 {<br>         label &#x3D; “Key volume down”;<br>         linux,code &#x3D; <KEY_VOLUMEDOWN>;<br>         gpios &#x3D; &lt;&amp;pcf8574 1 GPIO_ACTIVE_LOW&gt;; &#x2F;</em> PP1 <em>&#x2F;<br>     };<br><br>     button@2 {<br>         label &#x3D; “Key back”;<br>         linux,code &#x3D; <KEY_BACK>;<br>         gpios &#x3D; &lt;&amp;pcf8574 2 GPIO_ACTIVE_LOW&gt;; &#x2F;</em> PP2 <em>&#x2F;<br>     };<br><br>     button@3 {<br>         label &#x3D; “Key enter”;<br>         linux,code &#x3D; <KEY_ENTER>;<br>         gpios &#x3D; &lt;&amp;pcf8574 4 GPIO_ACTIVE_LOW&gt;; &#x2F;</em> PP4 *&#x2F;<br>     };<br><br> };</p>
</li>
<li><p>编码器接在D1的PD14 PD15 设备树如下 注意需要内核勾选&lt;<em>&gt;   Polled GPIO Decoder Input driver<br> rotary {<br>     compatible &#x3D; “rotary-encoder”;<br>     pinctrl-names &#x3D; “default”;<br>     &#x2F;<em>pinctrl-0 &#x3D; &lt;&amp;rotary_pins&gt;;</em>&#x2F;<br>     gpios &#x3D; &lt;&amp;pio 3 14 GPIO_ACTIVE_LOW&gt;, &lt;&amp;pio 3 15 GPIO_ACTIVE_LOW&gt;; &#x2F;</em> PD14, PD15 <em>&#x2F;<br>     linux,axis &#x3D; &lt;0&gt;; &#x2F;</em> REL_X *&#x2F;<br>     rotary-encoder,encoding &#x3D; “gray”;<br>     rotary-encoder,relative-axis;<br> };<br> 然后在内核勾选</p>
</li>
<li><p>系统启动会有如下log</p>
<pre><code> [    0.111735] input: sunxi-keyboard as /devices/virtual/input/input0  这是板载的那个LRADC 按键
 [    1.668976] rotary-encoder soc@3000000:rotary: gray 这是旋转编码器
 [    1.675145] input: soc@3000000:rotary as /devices/platform/soc@3000000/soc@3000000:rotary/input/input1
 [    3.178668] input: soc@3000000:gpio_keys as /devices/platform/soc@3000000/soc@3000000:gpio_keys/input/input5 这是扩展出来的那4个按键
 
</code></pre>
</li>
<li><p>查看系统里已注册的输入设备，用这个比较清楚，ls &#x2F;dev&#x2F;input也可以<br> # evtest<br> No device specified, trying to scan all of &#x2F;dev&#x2F;input&#x2F;event*<br> Available devices:<br> &#x2F;dev&#x2F;input&#x2F;event0:      sunxi-keyboard<br> &#x2F;dev&#x2F;input&#x2F;event1:      soc@3000000:rotary<br> &#x2F;dev&#x2F;input&#x2F;event2:      sunxi-ir<br> &#x2F;dev&#x2F;input&#x2F;event3:      audiocodec sunxi Audio Jack<br> &#x2F;dev&#x2F;input&#x2F;event4:      soc@3000000:gpio_keys<br> &#x2F;dev&#x2F;input&#x2F;event5:      ns2009_ts</p>
</li>
<li><p>可以使用evtest或hexdump来测试按键是否正常了</p>
</li>
<li><p>在代码使用就比较简单了<br> #include &lt;errno.h&gt;<br> #include &lt;global.h&gt;<br> #include &lt;linux&#x2F;fcntl.h&gt;<br> #include &lt;linux&#x2F;input.h&gt;<br> #include &lt;signal.h&gt;<br> #include &lt;stdio.h&gt; &#x2F;&#x2F;-std&#x3D;c99  -std&#x3D;gnu99<br> #include &lt;stdlib.h&gt;<br> #include &lt;string.h&gt;<br> #include &lt;sys&#x2F;types.h&gt;<br> #include &lt;unistd.h&gt;<br><br> #define msleep(t) usleep((t)*1000)<br> FILE *fp;<br> int32_t fd_key;<br> int32_t fd_encoder;<br> struct input_event t;<br> int main(int argc, char const *argv[])<br> {<br><br>     fd_key &#x3D; open(“&#x2F;dev&#x2F;input&#x2F;event1”, O_RDONLY | O_NONBLOCK);<br>     if (fd_key &lt; 0)<br>     {<br>         fprintf(stderr, “error:can not open &#x2F;dev&#x2F;input&#x2F;event1\n”);<br>         return -1;<br>     }<br>     fd_encoder &#x3D; open(“&#x2F;dev&#x2F;input&#x2F;event4”, O_RDONLY | O_NONBLOCK);<br>     if (fd_encoder &lt; 0)<br>     {<br>         fprintf(stderr, “error:can not open &#x2F;dev&#x2F;input&#x2F;event4\n”);<br>         return -1;<br>     }<br><br>     while (1)<br>     {<br><br>         &#x2F;&#x2F; rotary encoder<br>         if (read(fd_encoder, &amp;t, sizeof(t)) &#x3D;&#x3D; sizeof(t))<br>         {<br><br>             if (t.type &#x3D;&#x3D; EV_REL)<br>             {<br>                 LOG_D(“ROTARY DIR: %d-&gt;%s\n”, t.value, t.value &#x3D;&#x3D; 1 ? “CC” : “CW”);<br>                 rotary_encoder_handler(&amp;u8g2, t.value);<br>             }<br>         }<br>         &#x2F;&#x2F; key<br>         if (read(fd_key, &amp;t, sizeof(t)) &#x3D;&#x3D; sizeof(t))<br>         {<br>             if (t.type &#x3D;&#x3D; EV_KEY)<br>             {<br>                 switch (t.code)<br>                 {<br>                 case KEY_OK:<br>                     LOG_D(“KEY_ENTER %s \n”, t.value ? “Pressed” : “Released”);<br>                     if (t.value &#x3D;&#x3D; 0)<br>                         rotary_encoder_button_handler(&amp;u8g2);<br>                     break;<br>                 case KEY_SELECT:<br>                     LOG_D(“KEY_SELECT %s \n”, t.value ? “Pressed” : “Released”);<br>                     break;<br>                 case KEY_VOLUMEUP:<br>                     LOG_D(“KEY_VOLUMEUP %s \n”, t.value ? “Pressed” : “Released”);<br>                     if (t.value &#x3D;&#x3D; 0)<br>                     {<br>                         rotary_encoder_handler(&amp;u8g2, -1);<br>                     }<br><br>                     break;<br>                 case KEY_VOLUMEDOWN:<br>                     LOG_D(“KEY_VOLUMEDOWN %s \n”, t.value ? “Pressed” : “Released”);<br>                     if (t.value &#x3D;&#x3D; 0)<br>                     {<br>                         rotary_encoder_handler(&amp;u8g2, 1);<br>                     }<br>                     break;<br>                 default:<br>                     break;<br>                 }<br>             }<br>         }<br>         usleep(1);<br>     }<br><br>     return 0;<br> }</p>
</li>
</ol>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>D1</tag>
        <tag>Neza</tag>
        <tag>KEY</tag>
        <tag>ROTARY ENCODER</tag>
      </tags>
  </entry>
  <entry>
    <title>Neza-D1开发板学习之点灯篇</title>
    <url>/pages/9c0e/</url>
    <content><![CDATA[<ol>
<li><p>板子到手先来点个灯那是少不了的，先确定LED接在哪个引脚上，查看原理图，发现LED的座位号是U13，原来不是普通的LED，是一颗单总线的WS2812灯珠，这颗LED是接在PC0引脚上的，引脚标有LEDC-DO，是接在了LED控制器上，驱动官方已经做好了，我们直接用就可以</p>
</li>
<li><p>下边废话不多说，来看一下系统启动过程，系统已经把驱动给加载好了<br> [    2.100847] sunxi_led_probe()1715 - start<br> [    2.105375] sunxi_get_str_of_property()1560 - failed to get the string of propname led_regulator!<br> [    2.115306] sunxi_register_led_classdev()1448 - led_classdev start<br> [    2.126681] sunxi_led_probe()1820 - finish</p>
</li>
<li><p>来查看一下LED子系统下的灯<br> # ls &#x2F;sys&#x2F;class&#x2F;leds&#x2F;<br> blink         sunxi_led11g  sunxi_led3b   sunxi_led5r   sunxi_led8g<br> sunxi_led0b   sunxi_led11r  sunxi_led3g   sunxi_led6b   sunxi_led8r<br> sunxi_led0g   sunxi_led1b   sunxi_led3r   sunxi_led6g   sunxi_led9b<br> sunxi_led0r   sunxi_led1g   sunxi_led4b   sunxi_led6r   sunxi_led9g<br> sunxi_led10b  sunxi_led1r   sunxi_led4g   sunxi_led7b   sunxi_led9r<br> sunxi_led10g  sunxi_led2b   sunxi_led4r   sunxi_led7g<br> sunxi_led10r  sunxi_led2g   sunxi_led5b   sunxi_led7r<br> sunxi_led11b  sunxi_led2r   sunxi_led5g   sunxi_led8b<br> 这里出现了很多LED，设备树默认是12个，这样子是不是很熟悉了，我们板子上的LED就是led0<br> # ls &#x2F;sys&#x2F;class&#x2F;leds&#x2F;sunxi_led0b&#x2F;<br> brightness            power                 uevent<br> device                subsystem             waiting_for_supplier<br> max_brightness        trigger<br> 先来个红色的呼吸灯<br> # echo heartbeat &gt; &#x2F;sys&#x2F;class&#x2F;leds&#x2F;sunxi_led0r&#x2F;trigger<br> 再来个蓝色1秒闪烁一次<br> # echo timer &gt; &#x2F;sys&#x2F;class&#x2F;leds&#x2F;sunxi_led0b&#x2F;trigger<br> 这灯真是亮瞎眼啊，查看亮度<br> # cat  &#x2F;sys&#x2F;class&#x2F;leds&#x2F;sunxi_led0b&#x2F;brightness<br> 255<br> 调到50,这下好了<br> # echo 50 &gt; &#x2F;sys&#x2F;class&#x2F;leds&#x2F;sunxi_led0b&#x2F;brightness<br> 把灯关掉<br>  # echo none &gt; &#x2F;sys&#x2F;class&#x2F;leds&#x2F;sunxi_led0b&#x2F;trigger<br> 查看支持哪些触发方式<br> # cat  &#x2F;sys&#x2F;class&#x2F;leds&#x2F;sunxi_led0b&#x2F;trigger<br> none rc-feedback rfkill-any rfkill-none kbd-scrolllock kbd-numlock kbd-capslock kbd-kanalock kbd-shiftlock kbd-altgrlock kbd-ctrllock kbd-altlock kbd-shiftllock kbd-shiftrlock kbd-ctrlllock kbd-ctrlrlock mmc0 mmc1 timer oneshot [mtd] nand-disk heartbeat backlight gpio cpu cpu0 activity default-on transient netdev pattern audio-mute audio-micmute</p>
</li>
<li><p>当然以上的操作不是操作的GPIO，而是使用的LED子系统，下边是用GPIO操作LED，这里的LED是在扩展板上引出的，引脚是通过PCF8574扩展出来的，具体可以看看D1原理图</p>
</li>
<li><p><code>使用SYSFS方式操作GPIO，在操作前先查看一下系统里未使用的GPIO，这里以PD18 BL—PWM为例</code><br># ls &#x2F;sys&#x2F;class&#x2F;gpio&#x2F;<br>export        gpiochip0     gpiochip2020  unexport<br># PD18 &#x3D; 32*3+18&#x3D;114<br># echo 114 &gt; export<br>执行成功 目录下会出现gpio114,查看一下内容，可以看到里边有direction，value<br># ls gpio114<br>active_low            edge                  uevent<br>device                power                 value<br>direction             subsystem             waiting_for_supplier<br>接下来设置方向<br># echo out &gt;gpio114&#x2F;direction<br>输出高电平<br># echo 1 &gt;gpio114&#x2F;value<br>输出低电平<br># echo 0 &gt;gpio114&#x2F;value<br>不用的话执行<br># echo 114 &gt; unexport<br>查看一下，已经没有那个引脚导出的目录了<br># ls<br>export        gpiochip0     gpiochip2020  unexport</p>
</li>
<li><p><code>使用GPIOD操作GPIO，先查询一下系统GPIO情况</code><br> # gpiodetect<br> gpiochip0 [2000000.pinctrl] (224 lines)<br> gpiochip1 [pcf8574] (8 lines)<br> # gpioinfo gpiochip0 | grep -v unused | grep -v kernel<br> gpiochip0 - 224 lines:<br>         line   0:      unnamed      “sysfs”   input  active-high [used]<br>         line   1:      unnamed      “sysfs”   input  active-high [used]<br>         line   5:      unnamed      “sysfs”   input  active-high [used]<br>         line  34:      unnamed  “interrupt”   input  active-high [used]<br>         line 110:      unnamed “soc@3000000:rotary” input active-low [used]<br>         line 111:      unnamed “soc@3000000:rotary” input active-low [used]<br>         line 115:      unnamed  “usb1-vbus”  output  active-high [used]<br>         line 116:      unnamed    “otg_det”   input  active-high [used]<br>         line 117:      unnamed     “otg_id”   input  active-high [used]<br>         line 118:      unnamed “soc@3000000:ir_send” output active-high [used]<br>         line 144:      unnamed    “phy-rst”  output  active-high [used]<br>         line 166:      unnamed         “cd”   input  active-high [used]<br> # gpioinfo gpiochip1<br> gpiochip1 - 8 lines:<br>         line   0:      unnamed “Key volume up” input active-low [used]<br>         line   1:      unnamed “Key volume down” input active-low [used]<br>         line   2:      unnamed   “Key back”   input   active-low [used]<br>         line   3:      unnamed      “blink”  output   active-low [used]<br>         line   4:      unnamed  “Key enter”   input   active-low [used]<br>         line   5:      unnamed        “led”  output  active-high [used]<br>         line   6:      unnamed      “reset”  output   active-low [used]<br>         line   7:      unnamed         “dc”  output   active-low [used]<br> 同样使用上边那个未使用的引脚为例 PD18 BL-PWM<br> 输出高电平<br> # gpioset gpiochip0 114&#x3D;1<br> 输出低电平<br> # gpioset gpiochip0 114&#x3D;0<br> 读取引脚电平<br> # gpioget gpiochip0 114<br> 1<br> 就这么简单</p>
</li>
<li><p>以上操作还都未涉及到代码，下边开始用代码操作GPIO,代码仅供参考<br> <code>SYSFS方式</code><br> #include &lt;stdio.h&gt;<br> #include &lt;stdlib.h&gt;<br> #include &lt;string.h&gt;<br> #include &lt;unistd.h&gt;<br> int main(void)<br> {<br>     FILE <em>p &#x3D; NULL;<br>     int i &#x3D; 0;<br>     p &#x3D; fopen(“&#x2F;sys&#x2F;class&#x2F;gpio&#x2F;export”, “w”);<br>     fprintf(p, “%d”, 38);<br>     fclose(p);<br>     p &#x3D; fopen(“&#x2F;sys&#x2F;class&#x2F;gpio&#x2F;gpio38&#x2F;direction”, “w”);<br>     fprintf(p, “out”);<br>     fclose(p);<br>     for (i &#x3D; 0; i &lt; 100; i++)<br>     {<br>         p &#x3D; fopen(“&#x2F;sys&#x2F;class&#x2F;gpio&#x2F;gpio38&#x2F;value”, “w”);<br>         fprintf(p, “%d”, 1);<br>         sleep(1);<br>         fclose(p);<br>         p &#x3D; fopen(“&#x2F;sys&#x2F;class&#x2F;gpio&#x2F;gpio38&#x2F;value”, “w”);<br>         fprintf(p, “%d”, 0);<br>         sleep(1);<br>         fclose(p);<br>     }<br>     p &#x3D; fopen(“&#x2F;sys&#x2F;class&#x2F;gpio&#x2F;unexport”, “w”);<br>     fprintf(p, “%d”, 38);<br>     fclose(p);<br>     return 0;<br> }<br> <code>GPIOD方式</code><br> #include “gpiod&#x2F;gpiod.h”<br> #include &lt;linux&#x2F;fcntl.h&gt;<br> #include &lt;signal.h&gt;<br> #include &lt;stdio.h&gt; -std&#x3D;c99  -std&#x3D;gnu99<br> #include &lt;stdlib.h&gt;<br> #include &lt;string.h&gt;<br> #include &lt;sys&#x2F;time.h&gt;<br> #include &lt;unistd.h&gt;<br> #define LED_PIN 148     PD8 32</em>3+18<br> #define msleep(t) usleep((t)*1000)<br><br> struct gpiod_chip *chip;<br> struct gpiod_line *line;<br><br> void _timer_handler(int n)<br> {<br>     num++;<br>     gpiod_line_set_value(line, num % 2);<br> }<br> int main(int argc, char const <em>argv[])<br> {<br>     struct gpiod_line_request_config config;<br>     int req;<br>     &#x2F;</em> 1.打开 GPIO 控制器 <em>&#x2F;<br>     chip &#x3D; gpiod_chip_open(“&#x2F;dev&#x2F;gpiochip0”);<br>     if (!chip)<br>         return -1;<br>     &#x2F;</em> 2.获取指定引脚 <em>&#x2F;<br>     line &#x3D; gpiod_chip_get_line(chip, LED_PIN);<br>     if (!line)<br>     {<br>         gpiod_chip_close(chip);<br>         return -1;<br>     }<br>     &#x2F;</em> 3.配置引脚输出  *&#x2F;<br>      req &#x3D; gpiod_line_request_output(line, “blink”, 0);<br>      if (req)<br>      {<br>          fprintf(stderr, “gpio line request error.\n”);<br>          return -1;<br>      }<br>     signal(SIGALRM, _timer_handler);<br>     struct itimerval itv;<br>     itv.it_value.tv_sec &#x3D; 1;<br>     itv.it_value.tv_usec &#x3D; 1000;<br>     itv.it_interval.tv_sec &#x3D; 1;<br>     itv.it_interval.tv_usec &#x3D; 0;<br>     setitimer(ITIMER_REAL, &amp;itv, NULL);<br>     while (1)<br>     {<br><br>     }<br><br>     return 0;<br> }</p>
</li>
<li><p>到此点灯结束，感谢观看！</p>
</li>
</ol>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>D1</tag>
        <tag>Neza</tag>
        <tag>GPIO</tag>
        <tag>LED</tag>
      </tags>
  </entry>
  <entry>
    <title>VSCode使用SSH登录无法格式化代码问题</title>
    <url>/pages/a5bf/</url>
    <content><![CDATA[<h2 id="现象"><a href="#现象" class="headerlink" title="现象"></a>现象</h2><p>在win10主机上使用VSCode远程登录到Ubuntu18.04主机上写代码，保存时无法自动格式化代码，相关的插件已经安装，本地可以正常格式化代码，但是远程无法格式化，也没有错误提示</p>
<img src="/pages/a5bf/2023-01-07_151816.png" class="" title="img">

<h2 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h2><p>搜索后，发现可以使用clang-format来格式化程序，由于本地主机无法联网，所以到vscode插件市场下载clang-format插件，通过离线方式安装，装好后，可以选择clang-format来格式化了，此时会提示错误，因为我们的远程Ubuntu主机还没有安装clang-format.</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>输入下边命令进行安装</p>
<p><em><strong>系统默认的版本太老，这里安装的是ubuntu18.04支持的最新clang-format-10</strong></em></p>
<figure class="highlight tap"><table><tr><td class="code"><pre><span class="line">sudo apt install clang-format-10</span><br><span class="line">正在读取软件包列表... 完成</span><br><span class="line">正在分析软件包的依赖关系树       </span><br><span class="line">正在读取状态信息... 完成       </span><br><span class="line">将会同时安装下列软件：</span><br><span class="line">  libclang-cpp10</span><br><span class="line">下列【新】软件包将被安装：</span><br><span class="line">  clang-format-10 libclang-cpp10</span><br><span class="line">升级了<span class="number"> 0 </span>个软件包，新安装了<span class="number"> 2 </span>个软件包，要卸载<span class="number"> 0 </span>个软件包，有<span class="number"> 18 </span>个软件包未被升级。</span><br><span class="line">需要下载 10.0 MB 的归档。</span><br><span class="line">解压缩后会消耗 45.3 MB 的额外空间。</span><br><span class="line">您希望继续执行吗？ [Y/n] y</span><br></pre></td></tr></table></figure>
<h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>安装完毕后，可执行文件位置在<code>/usr/bin/clang-format-10</code></p>
<img src="/pages/a5bf/2023-01-07_152906.png" class="" title="img">

<h2 id="结束"><a href="#结束" class="headerlink" title="结束"></a>结束</h2><p>经过测试，远程格式化代码正常，又可以愉快的玩耍了^_^ NICE！</p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>vscode</tag>
        <tag>ssh</tag>
        <tag>format</tag>
      </tags>
  </entry>
  <entry>
    <title>全志F1C上测试一下ADB功能</title>
    <url>/pages/81fc/</url>
    <content><![CDATA[<h2 id="配置buildroot"><a href="#配置buildroot" class="headerlink" title="配置buildroot"></a>配置buildroot</h2><ol>
<li>Target packages &gt; System tools  勾选android-tools adb adbd<br>这个程序需要openssl,所以会自动下载编译openssl</li>
</ol>
<h2 id="启动脚本"><a href="#启动脚本" class="headerlink" title="启动脚本"></a>启动脚本</h2><ol>
<li>#!&#x2F;bin&#x2F;sh</li>
</ol>
<p>  modprobe g_ffs idVendor&#x3D;0x18d1 idProduct&#x3D;0x4e42 iSerialNumber&#x3D;”f1c_adb”<br>  mkdir -p &#x2F;dev&#x2F;usb-ffs&#x2F;adb<br>  mount -t functionfs adb &#x2F;dev&#x2F;usb-ffs&#x2F;adb -o uid&#x3D;2000,gid&#x3D;2000<br>  adbd&amp;</p>
<ol start="2">
<li>下边是输出信息  <figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line">[ <span class="number">1015.671170</span>] <span class="attr">usb_phy_generic usb_phy_generic.0.auto:</span> <span class="string">usb_phy_generic.0.auto</span> <span class="string">supply</span> <span class="string">vcc</span> <span class="string">not</span> <span class="string">found,</span> <span class="string">using</span> <span class="string">dummy</span> <span class="string">regulator</span></span><br><span class="line">[ <span class="number">1015.683059</span>] <span class="attr">musb-hdrc musb-hdrc.1.auto:</span> <span class="string">MUSB</span> <span class="string">HDRC</span> <span class="string">host</span> <span class="string">driver</span></span><br><span class="line">[ <span class="number">1015.688989</span>] <span class="attr">musb-hdrc musb-hdrc.1.auto:</span> <span class="string">new</span> <span class="string">USB</span> <span class="string">bus</span> <span class="string">registered,</span> <span class="string">assigned</span> <span class="string">bus</span> <span class="string">number</span> <span class="number">1</span></span><br><span class="line">[ <span class="number">1015.704830</span>] <span class="attr">usb usb1:</span> <span class="string">New</span> <span class="string">USB</span> <span class="string">device</span> <span class="string">found,</span> <span class="string">idVendor=1d6b,</span> <span class="string">idProduct=0002,</span> <span class="string">bcdDevice=</span> <span class="number">5.04</span></span><br><span class="line">[ <span class="number">1015.713091</span>] <span class="attr">usb usb1: New USB device strings:</span> <span class="string">Mfr=3,</span> <span class="string">Product=2,</span> <span class="string">SerialNumber=1</span></span><br><span class="line">[ <span class="number">1015.720406</span>] <span class="attr">usb usb1: Product:</span> <span class="string">MUSB</span> <span class="string">HDRC</span> <span class="string">host</span> <span class="string">driver</span></span><br><span class="line">[ <span class="number">1015.725414</span>] <span class="attr">usb usb1: Manufacturer:</span> <span class="string">Linux</span> <span class="number">5.4</span><span class="number">.99</span> <span class="string">musb-hcd</span></span><br><span class="line">[ <span class="number">1015.730799</span>] <span class="attr">usb usb1: SerialNumber:</span> <span class="string">musb-hdrc.1.auto</span></span><br><span class="line">[ <span class="number">1015.738779</span>] <span class="attr">hub 1-0:1.0:</span> <span class="string">USB</span> <span class="string">hub</span> <span class="string">found</span></span><br><span class="line">[ <span class="number">1015.742642</span>] <span class="attr">hub 1-0:1.0:</span> <span class="number">1</span> <span class="string">port</span> <span class="string">detected</span></span><br><span class="line">[ <span class="number">1015.768938</span>] <span class="string">using</span> <span class="string">random</span> <span class="string">self</span> <span class="string">ethernet</span> <span class="string">address</span></span><br><span class="line">[ <span class="number">1015.773397</span>] <span class="string">using</span> <span class="string">random</span> <span class="string">host</span> <span class="string">ethernet</span> <span class="string">address</span></span><br><span class="line">[ <span class="number">1015.778010</span>] <span class="string">using</span> <span class="string">random</span> <span class="string">self</span> <span class="string">ethernet</span> <span class="string">address</span></span><br><span class="line">[ <span class="number">1015.782453</span>] <span class="string">using</span> <span class="string">random</span> <span class="string">host</span> <span class="string">ethernet</span> <span class="string">address</span></span><br><span class="line">[ <span class="number">1015.787926</span>] <span class="attr">usb0:</span> <span class="string">HOST</span> <span class="string">MAC</span> <span class="string">8a:c5:4f:1e:6f:18</span></span><br><span class="line">[ <span class="number">1015.792298</span>] <span class="attr">usb0:</span> <span class="string">MAC</span> <span class="string">d2:d0:89:99:11:ec</span></span><br><span class="line">[ <span class="number">1015.796436</span>] <span class="attr">g_ffs gadget:</span> <span class="string">g_ffs</span> <span class="string">ready</span></span><br><span class="line"><span class="comment"># [ 1017.200076] g_ffs gadget: high-speed config #2: FunctionFS + ECM</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># adbd&amp;</span></span><br><span class="line"><span class="comment"># install_listener[ 1056.721906] read descriptors</span></span><br><span class="line"><span class="string">(&#x27;tcp:5037&#x27;,&#x27;*sm[</span> <span class="number">1056.725214</span><span class="string">]</span> <span class="string">read</span> <span class="string">strings</span></span><br><span class="line"><span class="string">artsocket*&#x27;)</span></span><br><span class="line">[ <span class="number">1056.729168</span>] <span class="string">using</span> <span class="string">random</span> <span class="string">self</span> <span class="string">ethernet</span> <span class="string">address</span></span><br><span class="line">[ <span class="number">1056.734713</span>] <span class="string">using</span> <span class="string">random</span> <span class="string">host</span> <span class="string">ethernet</span> <span class="string">address</span></span><br><span class="line">[ <span class="number">1056.739196</span>] <span class="string">using</span> <span class="string">random</span> <span class="string">self</span> <span class="string">ethernet</span> <span class="string">address</span></span><br><span class="line">[ <span class="number">1056.743630</span>] <span class="string">using</span> <span class="string">random</span> <span class="string">host</span> <span class="string">ethernet</span> <span class="string">address</span></span><br><span class="line">[ <span class="number">1056.749049</span>] <span class="attr">usb0:</span> <span class="string">HOST</span> <span class="string">MAC</span> <span class="string">b6:d2:0d:05:55:96</span></span><br><span class="line">[ <span class="number">1056.753421</span>] <span class="attr">usb0:</span> <span class="string">MAC</span> <span class="string">fa:a3:f6:8f:4d:72</span></span><br><span class="line">[ <span class="number">1056.757540</span>] <span class="attr">g_ffs gadget:</span> <span class="string">g_ffs</span> <span class="string">ready</span></span><br><span class="line">[ <span class="number">1057.234908</span>] <span class="attr">g_ffs gadget:</span> <span class="string">high-speed</span> <span class="string">config</span> <span class="comment">#2: FunctionFS + ECM</span></span><br></pre></td></tr></table></figure></li>
</ol>
<h2 id="ubuntu中安装adb工具"><a href="#ubuntu中安装adb工具" class="headerlink" title="ubuntu中安装adb工具"></a>ubuntu中安装adb工具</h2><ol>
<li><p>sudo apt install adb</p>
</li>
<li><p>adb devices 列出adb设备<br>  $ adb devices<br>  List of devices attached<br>  f1c_adb device</p>
</li>
<li><p>用lsusb可以看到是一个google Nexus 7 的android设备</p>
<ul>
<li>ubuntu上查看usb设备  <figure class="highlight mipsasm"><table><tr><td class="code"><pre><span class="line">$ lsusb</span><br><span class="line"><span class="keyword">Bus </span><span class="number">002</span> Device <span class="number">001</span>: ID <span class="number">1</span>d<span class="symbol">6b</span>:<span class="number">0003</span> Linux Foundation <span class="number">3</span>.<span class="number">0</span> root hub</span><br><span class="line"><span class="keyword">Bus </span><span class="number">001</span> Device <span class="number">002</span>: ID <span class="number">8087</span>:<span class="number">0</span>a<span class="symbol">2b</span> Intel Corp. </span><br><span class="line"><span class="keyword">Bus </span><span class="number">001</span> Device <span class="number">033</span>: ID <span class="number">18</span>d1:<span class="number">4</span>e42 Google Inc. Nexus <span class="number">7</span> (<span class="built_in">debug</span>)</span><br><span class="line"><span class="keyword">Bus </span><span class="number">001</span> Device <span class="number">001</span>: ID <span class="number">1</span>d<span class="symbol">6b</span>:<span class="number">0002</span> Linux Foundation <span class="number">2</span>.<span class="number">0</span> root hub</span><br></pre></td></tr></table></figure></li>
<li>在板子上查看usb设备会出现一个usb网卡  <figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="comment"># lsusb</span></span><br><span class="line"><span class="attribute">Bus</span> <span class="number">001</span> Device <span class="number">001</span>: ID <span class="number">1</span>d6b:<span class="number">0002</span></span><br><span class="line"><span class="comment"># ifconfig -a</span></span><br><span class="line"><span class="attribute">usb0</span>      Link encap:Ethernet  HWaddr <span class="number">9</span>A:A2:<span class="number">75</span>:F3:AD:<span class="number">7</span>F  </span><br><span class="line">        <span class="attribute">BROADCAST</span> MULTICAST  MTU:<span class="number">1500</span>  Metric:<span class="number">1</span></span><br><span class="line">        <span class="attribute">RX</span> packets:<span class="number">0</span> errors:<span class="number">0</span> dropped:<span class="number">0</span> overruns:<span class="number">0</span> frame:<span class="number">0</span></span><br><span class="line">        <span class="attribute">TX</span> packets:<span class="number">0</span> errors:<span class="number">0</span> dropped:<span class="number">0</span> overruns:<span class="number">0</span> carrier:<span class="number">0</span></span><br><span class="line">        <span class="attribute">collisions</span>:<span class="number">0</span> txqueuelen:<span class="number">1000</span> </span><br><span class="line">        <span class="attribute">RX</span> bytes:<span class="number">0</span> (<span class="number">0</span>.<span class="number">0</span> B)  TX bytes:<span class="number">0</span> (<span class="number">0</span>.<span class="number">0</span> B)</span><br></pre></td></tr></table></figure></li>
</ul>
</li>
<li><p>连接adb设备</p>
<ul>
<li><p>$ adb connect f1c_adb:5037<br>  unable to connect to f1c_adb:5555: Name or service not known<br>  [ cannot open &#x2F;dev&#x2F;ptmx - No such file or directory ]<br>  这是因为我把虚拟终端都给去掉了 只需要把下边一项勾上即可<br>  [*]   Unix98 PTY support</p>
</li>
<li><p>查看一下&#x2F;dev下的文件</p>
  <figure class="highlight livecodeserver"><table><tr><td class="code"><pre><span class="line"><span class="comment"># ls /dev</span></span><br><span class="line">audio            mtd0             pts              ttyS2</span><br><span class="line">bus              mtd0ro           <span class="built_in">random</span>           ttyS3</span><br><span class="line">console          mtd1             rfkill           ttyS4</span><br><span class="line">cpu_dma_latency  mtd1ro           rtc0             ttyS5</span><br><span class="line">dsp              mtd2             shm              ttyS6</span><br><span class="line">fd               mtd2ro           snd              ttyS7</span><br><span class="line">full             mtd3             spidev1<span class="number">.0</span>        urandom</span><br><span class="line">gpiochip0        mtd3ro           <span class="keyword">stderr</span>           usb-ffs</span><br><span class="line">i2c<span class="number">-0</span>            mtdblock0        <span class="keyword">stdin</span>            watchdog</span><br><span class="line">kmsg             mtdblock1        <span class="keyword">stdout</span>           watchdog0</span><br><span class="line"><span class="built_in">log</span>              mtdblock2        tty              <span class="literal">zero</span></span><br><span class="line">mem              mtdblock3        ttyS0</span><br><span class="line">mixer            <span class="literal">null</span>             ttyS1</span><br></pre></td></tr></table></figure></li>
</ul>
</li>
</ol>
<h2 id="使用adb上传下载文件"><a href="#使用adb上传下载文件" class="headerlink" title="使用adb上传下载文件"></a>使用adb上传下载文件</h2><ol>
<li>#adb shell 即可像普通终端那样操作了</li>
<li>adb push .&#x2F;test &#x2F;opt 上传文件到板子上&#x2F;opt文件夹</li>
<li>adb pull &#x2F;opt&#x2F;test ~ 下载文件到本地用户主目录</li>
</ol>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>F1C100S</tag>
        <tag>F1C200S</tag>
        <tag>Gadget</tag>
        <tag>USB</tag>
        <tag>ADB</tag>
      </tags>
  </entry>
  <entry>
    <title>全志F1C上测试一下USB-Gadget-Audio功能</title>
    <url>/pages/5a1/</url>
    <content><![CDATA[<blockquote>
<p>先上一张内核配置的图,图示是2.0配置，Audio_Gadget如果不选，手动配置也可以，只是比较麻烦一点，但是灵活。<code>以下测试平台是win10 build 1909</code></p>
</blockquote>
<img src="/pages/5a1/2023-02-17_162103.png" class="" title="img">

<h2 id="USB-Gadget-Audio-Class-1-0-Legacy测试"><a href="#USB-Gadget-Audio-Class-1-0-Legacy测试" class="headerlink" title="USB Gadget Audio Class 1.0 Legacy测试"></a>USB Gadget Audio Class 1.0 Legacy测试</h2><ol>
<li><p>这个得手动加载， 我测试modeprobe g_audio.ko会失败</p>
<figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line">#insmod <span class="regexp">/lib/m</span>odules<span class="regexp">/5.4.99/</span>kernel<span class="regexp">/drivers/u</span>sb<span class="regexp">/gadget/</span>libcomposite.ko</span><br><span class="line">#insmod <span class="regexp">/lib/m</span>odules<span class="regexp">/5.4.99/</span>kernel<span class="regexp">/drivers/u</span>sb<span class="regexp">/gadget/</span>function/u_audio.ko</span><br><span class="line">#insmod <span class="regexp">/lib/m</span>odules<span class="regexp">/5.4.99/</span>kernel<span class="regexp">/drivers/u</span>sb<span class="regexp">/gadget/</span>function/usb_f_uac1_legacy.ko </span><br><span class="line">#insmod <span class="regexp">/lib/m</span>odules<span class="regexp">/5.4.99/</span>kernel<span class="regexp">/drivers/u</span>sb<span class="regexp">/gadget/</span>legacy<span class="regexp">/g_audio.ko fn_play=/</span>dev<span class="regexp">/snd/</span>pcmC1D0p</span><br><span class="line"></span><br><span class="line">g_audio gadget: Linux USB Audio Gadget, version: Feb <span class="number">2</span>, <span class="number">2012</span></span><br><span class="line">g_audio gadget: g_audio ready</span><br><span class="line">g_audio gadget: high-speed config #<span class="number">1</span>: Linux USB Audio Gadget</span><br></pre></td></tr></table></figure></li>
<li><p>电脑上会出现一个叫 <em>AC INTERFACE</em> 的声卡，使用自带的MediaPlayer测试声音正常，这种方式需要有实体的声卡，就是加载驱动时指定那个放音设备&#x2F;dev&#x2F;snd&#x2F;pcmC1D0p,不指定的话，放音设备是&#x2F;dev&#x2F;snd&#x2F;pcmC0D0p 录音设备是&#x2F;dev&#x2F;snd&#x2F;pcmC0D0c,不需要其它操作，就可以直接使用了。</p>
</li>
<li><p>但是这种方式会独占那个声卡，其它程序是无法再访问那个设备了，而且我测试经过5个半小时，内核直接挂了，不知道什么原因，如下图所示，如果你想使用usb audio 其它程序也需要访问声卡，那么你可以使用下边第二种方式</p>
<img src="/pages/5a1/2023-02-15_160904.png" class="" title="img"></li>
</ol>
<h2 id="USB-Gadget-Audio-Class-1-0测试"><a href="#USB-Gadget-Audio-Class-1-0测试" class="headerlink" title="USB Gadget Audio Class 1.0测试"></a>USB Gadget Audio Class 1.0测试</h2><ol>
<li><p>这种方式在驱动加载后，系统会多出一张声卡，包含一个放音，一个录音设备，前边那种是不会出现任何设备的</p>
</li>
<li><p>modprobe g_audio.ko c_srate&#x3D;48000 c_ssize&#x3D;2 c_chmask&#x3D;3 #48k 16bit 2ch</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line">[   <span class="number">71.822514</span>] <span class="attr">g_audio gadget: Hardware params:</span> <span class="string">access</span> <span class="number">3</span><span class="string">,</span> <span class="string">format</span> <span class="number">2</span><span class="string">,</span> <span class="string">channels</span> <span class="number">2</span><span class="string">,</span> <span class="string">rate</span> <span class="number">48000</span></span><br><span class="line">[   <span class="number">71.830844</span>] <span class="attr">g_audio gadget:</span> <span class="string">Linux</span> <span class="string">USB</span> <span class="string">Audio</span> <span class="string">Gadget,</span> <span class="attr">version:</span> <span class="string">Feb</span> <span class="number">2</span><span class="string">,</span> <span class="number">2012</span></span><br><span class="line">[   <span class="number">71.837646</span>] <span class="attr">g_audio gadget:</span> <span class="string">g_audio</span> <span class="string">ready</span></span><br><span class="line">[   <span class="number">72.123305</span>] <span class="attr">g_audio gadget:</span> <span class="string">high-speed</span> <span class="string">config</span> <span class="comment">#1: Linux USB Audio Gadget</span></span><br></pre></td></tr></table></figure></li>
<li><p>名字也叫 <em>AC INTERFACE</em> ,如果需要改名字，是在uac1.c里边修改，电脑播放音乐</p>
</li>
<li><p>执行 arecord -D hw:2,0 -f dat -vv | aplay -D hw:1,0 -f dat 可以听到电脑播放的音乐</p>
</li>
<li><p>这里我碰到点问题，就是下图那样子，如果电脑一直在播放音乐，那么是没问题的，如果把音乐停掉，或者直接就没播放，那么几秒后，会出现 “input&#x2F;output error” , 然后 arecord就会退出，即使电脑端再播放也没用了，因为就没在录音乐，当然不会响了，不过出现这错误好像也合理的，因为电脑就没有发送数据，录的时候，缓冲区空了，自然就读取出错了，数据都没有当然也没法放了。那么问题来了，我怎么知道用户什么时候播放呢，只有播放时才能录音，其它时候就是I&#x2F;O错误，录音进程会退出啊，请路过的大神给支点招?</p>
<img src="/pages/5a1/2023-02-17_145650.png" class="" title="img"></li>
</ol>
<h2 id="USB-Gadget-Audio-Class-2-0测试"><a href="#USB-Gadget-Audio-Class-2-0测试" class="headerlink" title="USB Gadget Audio Class 2.0测试"></a>USB Gadget Audio Class 2.0测试</h2><ol>
<li><p>最后就是uac2.0了，这个兼容性没有uac1.0好，从WIN10的某个版本才开始自带驱动的</p>
</li>
<li><p>执行 modprobe g_audio.ko c_srate&#x3D;48000 c_ssize&#x3D;2 c_chmask&#x3D;3 #48k 16bit 2ch</p>
</li>
<li><p>模块能正常加载，设备管理器里会出现一个叫 <em>Source&#x2F;Sink</em>的设备 尴尬的是设备却无法启动</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># modprobe g_audio.ko c_srate=48000 c_ssize=2 c_chmask=3 #48k 16bit 2ch</span></span><br><span class="line">[<span class="number">11080.340854</span>] <span class="attr">g_audio gadget:</span> <span class="string">Linux</span> <span class="string">USB</span> <span class="string">Audio</span> <span class="string">Gadget,</span> <span class="attr">version:</span> <span class="string">Feb</span> <span class="number">2</span><span class="string">,</span> <span class="number">2012</span></span><br><span class="line">[<span class="number">11080.347699</span>] <span class="attr">g_audio gadget:</span> <span class="string">g_audio</span> <span class="string">ready</span></span><br><span class="line"><span class="comment"># [11080.625525] g_audio gadget: high-speed config #1: Linux USB Audio Gadget</span></span><br></pre></td></tr></table></figure>
<p><code>系统自带了usb audio 2.0 的驱动，还不清楚什么原因导致的,Android正常</code></p>
<img src="/pages/5a1/2023-02-18_112640.png" class="" title="img"></li>
</ol>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>F1C100S</tag>
        <tag>F1C200S</tag>
        <tag>Gadget</tag>
        <tag>USB</tag>
        <tag>Audio</tag>
        <tag>UAC</tag>
      </tags>
  </entry>
  <entry>
    <title>全志F1C上测试一下USB-Gadget-Ethernet功能</title>
    <url>/pages/1d2d/</url>
    <content><![CDATA[<h2 id="内核配置"><a href="#内核配置" class="headerlink" title="内核配置"></a>内核配置</h2><img src="/pages/1d2d/2023-02-18_124751.png" class="" title="img">
<h2 id="驱动加载"><a href="#驱动加载" class="headerlink" title="驱动加载"></a>驱动加载</h2><ol>
<li>此项功能依赖于 u_ether.ko usb_f_rndis.ko usb_f_fs.ko g_ether.ko，直接使用modprobe g_ether.ko即可</li>
<li>查看板子输出,会多出一个叫usb0的网卡<figure class="highlight vim"><table><tr><td class="code"><pre><span class="line">[ <span class="number">2734.604498</span>] using random self ethernet address</span><br><span class="line">[ <span class="number">2734.609106</span>] using random host ethernet address</span><br><span class="line">[ <span class="number">2734.614621</span>] usb0: HOST MAC <span class="number">06</span>:d6:<span class="number">3</span><span class="keyword">f</span>:f1:<span class="number">88</span>:<span class="keyword">be</span></span><br><span class="line">[ <span class="number">2734.619126</span>] usb0: MAC <span class="number">82</span>:<span class="number">5</span><span class="variable">a:d5</span>:<span class="number">83</span>:b9:da</span><br><span class="line">[ <span class="number">2734.623035</span>] using random self ethernet address</span><br><span class="line">[ <span class="number">2734.627555</span>] using random host ethernet address</span><br><span class="line">[ <span class="number">2734.632127</span>] g_ether gadget: Ethernet Gadget, <span class="keyword">version</span>: Memorial Day <span class="number">2008</span></span><br><span class="line">[ <span class="number">2734.638824</span>] g_ether gadget: g_ether ready</span><br><span class="line"># [ <span class="number">2735.352830</span>] g_ether gadget: high-speed config #<span class="number">2</span>: RNDIS</span><br><span class="line">ifconfig -<span class="keyword">a</span></span><br><span class="line"><span class="keyword">lo</span>        Link encap:Local Loopback  </span><br><span class="line">          inet addr:<span class="number">127.0</span>.<span class="number">0.1</span>  Mask:<span class="number">255.0</span>.<span class="number">0.0</span></span><br><span class="line">          UP LOOPBACK RUNNING  MTU:<span class="number">65536</span>  Metric:<span class="number">1</span></span><br><span class="line">          RX packet<span class="variable">s:0</span> error<span class="variable">s:0</span> dropped:<span class="number">0</span> overrun<span class="variable">s:0</span> frame:<span class="number">0</span></span><br><span class="line">          TX packet<span class="variable">s:0</span> error<span class="variable">s:0</span> dropped:<span class="number">0</span> overrun<span class="variable">s:0</span> carrier:<span class="number">0</span></span><br><span class="line">          collision<span class="variable">s:0</span> txqueuelen:<span class="number">1000</span> </span><br><span class="line">          RX byte<span class="variable">s:0</span> (<span class="number">0.0</span> B)  TX byte<span class="variable">s:0</span> (<span class="number">0.0</span> B)</span><br><span class="line"></span><br><span class="line">usb0      Link encap:Ethernet  HWaddr <span class="number">82</span>:<span class="number">5</span>A:D5:<span class="number">83</span>:B9:DA  </span><br><span class="line">          BROADCAST MULTICAST  MTU:<span class="number">1500</span>  Metric:<span class="number">1</span></span><br><span class="line">          RX packet<span class="variable">s:0</span> error<span class="variable">s:0</span> dropped:<span class="number">0</span> overrun<span class="variable">s:0</span> frame:<span class="number">0</span></span><br><span class="line">          TX packet<span class="variable">s:0</span> error<span class="variable">s:0</span> dropped:<span class="number">0</span> overrun<span class="variable">s:0</span> carrier:<span class="number">0</span></span><br><span class="line">          collision<span class="variable">s:0</span> txqueuelen:<span class="number">1000</span> </span><br><span class="line">          RX byte<span class="variable">s:0</span> (<span class="number">0.0</span> B)  TX byte<span class="variable">s:0</span> (<span class="number">0.0</span> B)</span><br><span class="line"></span><br><span class="line">wlan0     Link encap:Ethernet  HWaddr AC:<span class="number">35</span>:EE:BD:<span class="number">12</span>:FF  </span><br><span class="line">          inet addr:<span class="number">192.168</span>.<span class="number">43.136</span>  Bcas<span class="variable">t:192</span>.<span class="number">168.43</span>.<span class="number">255</span>  Mask:<span class="number">255.255</span>.<span class="number">255.0</span></span><br><span class="line">          UP BROADCAST RUNNING MULTICAST  MTU:<span class="number">1500</span>  Metric:<span class="number">1</span></span><br><span class="line">          RX packet<span class="variable">s:1162</span> error<span class="variable">s:0</span> dropped:<span class="number">366</span> overrun<span class="variable">s:0</span> frame:<span class="number">0</span></span><br><span class="line">          TX packet<span class="variable">s:148</span> error<span class="variable">s:0</span> dropped:<span class="number">0</span> overrun<span class="variable">s:0</span> carrier:<span class="number">0</span></span><br><span class="line">          collision<span class="variable">s:0</span> txqueuelen:<span class="number">1000</span> </span><br><span class="line">          RX byte<span class="variable">s:336477</span> (<span class="number">328.5</span> KiB)  TX byte<span class="variable">s:19524</span> (<span class="number">19.0</span> KiB)</span><br><span class="line"></span><br><span class="line">wlan1     Link encap:Ethernet  HWaddr AE:<span class="number">35</span>:EE:BD:<span class="number">12</span>:FF  </span><br><span class="line">          BROADCAST MULTICAST  MTU:<span class="number">1500</span>  Metric:<span class="number">1</span></span><br><span class="line">          RX packet<span class="variable">s:0</span> error<span class="variable">s:0</span> dropped:<span class="number">760</span> overrun<span class="variable">s:0</span> frame:<span class="number">0</span></span><br><span class="line">          TX packet<span class="variable">s:0</span> error<span class="variable">s:0</span> dropped:<span class="number">0</span> overrun<span class="variable">s:0</span> carrier:<span class="number">0</span></span><br><span class="line">          collision<span class="variable">s:0</span> txqueuelen:<span class="number">1000</span> </span><br><span class="line">          RX byte<span class="variable">s:0</span> (<span class="number">0.0</span> B)  TX byte<span class="variable">s:0</span> (<span class="number">0.0</span> B)</span><br></pre></td></tr></table></figure></li>
</ol>
<h2 id="脚本加载驱动"><a href="#脚本加载驱动" class="headerlink" title="脚本加载驱动"></a>脚本加载驱动</h2><ol>
<li>除了上边加载驱动外，还可以通过脚本来开机加载<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/bin/sh</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Start RNDIS....</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"></span><br><span class="line">start() &#123;</span><br><span class="line">    printf <span class="string">&quot;Starting RNDIS: \n&quot;</span></span><br><span class="line">	mount none <span class="regexp">/sys/</span>kernel/config -t configfs</span><br><span class="line">    modprobe libcomposite.ko</span><br><span class="line">	modprobe u_ether.ko</span><br><span class="line">	modprobe usb_f_rndis.ko</span><br><span class="line">	sleep <span class="number">1</span></span><br><span class="line">	cd <span class="regexp">/sys/</span>kernel<span class="regexp">/config/u</span>sb_gadget/</span><br><span class="line">	mkdir g1</span><br><span class="line">	cd g1</span><br><span class="line">	echo <span class="string">&quot;0x0502&quot;</span> &gt; idVendor </span><br><span class="line">	echo <span class="string">&quot;0x3235&quot;</span> &gt; idProduct  </span><br><span class="line">	mkdir functions/rndis.rn0</span><br><span class="line">	mkdir configs/c1.<span class="number">1</span></span><br><span class="line">	ln -s functions<span class="regexp">/rndis.rn0/</span> configs<span class="regexp">/c1.1/</span></span><br><span class="line">    sleep <span class="number">1</span></span><br><span class="line">    ls <span class="regexp">/sys/</span>class<span class="regexp">/udc/</span> &gt; <span class="regexp">/sys/</span>kernel<span class="regexp">/config/u</span>sb_gadget<span class="regexp">/g1/</span>UDC</span><br><span class="line">    [ $? = <span class="number">0</span> ] &amp;&amp; echo <span class="string">&quot;OK&quot;</span> || echo <span class="string">&quot;FAIL&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">stop() &#123;</span><br><span class="line">    printf <span class="string">&quot;Stopping RNDIS: \n&quot;</span></span><br><span class="line">    echo &gt; <span class="regexp">/sys/</span>kernel<span class="regexp">/config/u</span>sb_gadget<span class="regexp">/g1/</span>UDC</span><br><span class="line">    [ $? = <span class="number">0</span> ] &amp;&amp; echo <span class="string">&quot;OK&quot;</span> || echo <span class="string">&quot;FAIL&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">case <span class="string">&quot;$1&quot;</span> <span class="keyword">in</span></span><br><span class="line">    start)</span><br><span class="line">    start</span><br><span class="line">    ;;</span><br><span class="line">    stop)</span><br><span class="line">    stop</span><br><span class="line">    ;;</span><br><span class="line">    restart|reload)</span><br><span class="line">    stop</span><br><span class="line">    sleep <span class="number">1</span></span><br><span class="line">    start</span><br><span class="line">    ;;</span><br><span class="line">  *)</span><br><span class="line">    echo <span class="string">&quot;Usage: $0 &#123;start|stop|restart&#125;&quot;</span></span><br><span class="line">    <span class="keyword">exit</span> <span class="number">1</span></span><br><span class="line">esac</span><br><span class="line"></span><br><span class="line"><span class="keyword">exit</span> $?</span><br><span class="line"></span><br></pre></td></tr></table></figure></li>
<li>将文件保存到&#x2F;etc&#x2F;init.d&#x2F;S97rndis这里即可开机加载驱动，效果是一样的</li>
</ol>
<h2 id="配置网卡"><a href="#配置网卡" class="headerlink" title="配置网卡"></a>配置网卡</h2><ol>
<li>板子上执行</li>
</ol>
<p><code>#ifconfig usb0 192.168.8.190 netmask 255.255.255.0</code><br>2. Linux电脑此时也会多出一个类似这个名称<em>enp0s20f0u4</em>的网卡</p>
<figure class="highlight dns"><table><tr><td class="code"><pre><span class="line">sudo ifconfig enp<span class="number">0s20f0u4</span> <span class="number">192.168.8.195</span> netmask <span class="number">255.255.255.0</span></span><br></pre></td></tr></table></figure>
<ol start="3">
<li>板子上ping一下是否畅通，这里的ip可以随便配置，我只是为了挂载NFS目录</li>
<li>mount -t nfs -o nolock 192.168.8.195:&#x2F;home&#x2F;xfdr&#x2F;nfs &#x2F;mnt</li>
<li>这样就实现了通过USB来挂载NFS文件夹了，这样做比WIFI速度快不少，使用非常方便</li>
</ol>
<p><code>注意：在win10上（build 1909）会被识别为串口，需要使用另外的驱动才能成功识别</code><br><a href="kindle_rndis_inf_amd64-v1_0_0_1.zip">kindle_rndis_inf_amd64-v1_0_0_1.zip</a><br><a href="rndis.cab">rndis.cab</a></p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>F1C100S</tag>
        <tag>F1C200S</tag>
        <tag>Gadget</tag>
        <tag>USB</tag>
        <tag>ETHERNET</tag>
        <tag>RNDIS</tag>
      </tags>
  </entry>
  <entry>
    <title>全志F1C上测试一下USB-Gadget-Serial功能</title>
    <url>/pages/db27/</url>
    <content><![CDATA[<h2 id="驱动编译"><a href="#驱动编译" class="headerlink" title="驱动编译"></a>驱动编译</h2><ol>
<li>buildroot 勾选对应的模块<figure class="highlight elm"><table><tr><td class="code"><pre><span class="line">[*]   <span class="type">Serial</span> gadget console sup<span class="keyword">port</span>  </span><br><span class="line">&lt;<span class="type">M</span>&gt;     <span class="type">Serial</span> <span class="type">Gadget</span> (with <span class="type">CDC</span> <span class="type">ACM</span> and <span class="type">CDC</span> <span class="type">OBEX</span> sup<span class="keyword">port</span>) </span><br></pre></td></tr></table></figure></li>
</ol>
<h2 id="驱动加载"><a href="#驱动加载" class="headerlink" title="驱动加载"></a>驱动加载</h2><ol>
<li>编译完模块后，会生成u_serial.ko  usb_f_serial.ko   usb_f_acm.ko  g_serial.ko  ，复制到对应目录。</li>
<li>执行modprobe g_serial.ko，会生成&#x2F;dev&#x2F;ttyGS0<figure class="highlight tap"><table><tr><td class="code"><pre><span class="line">[  517.894143] g_serial gadget: Gadget Serial v2.4</span><br><span class="line">[  517.898825] g_serial gadget: g_serial ready</span><br><span class="line">[  518.661918] g_serial gadget: high-speed config <span class="comment">#2: CDC ACM config</span></span><br><span class="line">[  518.668090] gs_console_connect: port num [0] is not support console</span><br><span class="line"></span><br><span class="line">lsmod看看</span><br><span class="line">Module                  Size  Used by    Not tainted</span><br><span class="line">g_serial              <span class="number"> 16384 </span><span class="number"> 0 </span></span><br><span class="line">usb_f_acm             <span class="number"> 16384 </span><span class="number"> 1 </span></span><br><span class="line">usb_f_serial          <span class="number"> 16384 </span><span class="number"> 0 </span></span><br><span class="line">u_serial              <span class="number"> 20480 </span><span class="number"> 2 </span>usb_f_acm,usb_f_serial</span><br><span class="line">libcomposite          <span class="number"> 45056 </span><span class="number"> 3 </span>g_serial,usb_f_acm,usb_f_serial</span><br><span class="line"></span><br><span class="line">如果手动加载注意顺序</span><br><span class="line">insmod u_serial.ko -&gt; usb_f_serial.ko -&gt; usb_f_acm.ko -&gt;g_serial.ko</span><br></pre></td></tr></table></figure></li>
</ol>
<h2 id="驱动测试"><a href="#驱动测试" class="headerlink" title="驱动测试"></a>驱动测试</h2><ol>
<li><p>开发板执行cat &#x2F;dev&#x2F;ttyGS0 开发板可以接收到串口调试助手发来的数据</p>
</li>
<li><p>开发板执行echo “hello” &gt; &#x2F;dev&#x2F;ttyGS0 电脑可以接收到开发板发来的数据</p>
</li>
</ol>
<h2 id="作为控制终端使用"><a href="#作为控制终端使用" class="headerlink" title="作为控制终端使用"></a>作为控制终端使用</h2><ol>
<li><p>&#x2F;etc&#x2F;inittab 加上 下面的配置，可以做为控制终端来使用</p>
<figure class="highlight asciidoc"><table><tr><td class="code"><pre><span class="line"><span class="meta">::respawn:/sbin/getty</span> -L ttyAM0 115200 vt100</span><br><span class="line"><span class="meta">::respawn:/sbin/getty</span> -L ttyGS0 115200 vt100</span><br><span class="line">console::respawn:/sbin/getty -L  console 0 vt100 # GENERIC_SERIAL</span><br><span class="line"></span><br><span class="line">上面记得放这个前面才行:</span><br><span class="line">console::respawn:/sbin/getty -L  console 0 vt100 # GENERIC_SERIAL</span><br><span class="line">否则串口终端貌似有点问题.</span><br><span class="line"></span><br></pre></td></tr></table></figure>
</li>
<li><p>下是板子默认配置</p>
<figure class="highlight asciidoc"><table><tr><td class="code"><pre><span class="line"># cat /etc/inittab </span><br><span class="line"># /etc/inittab</span><br><span class="line"></span><br><span class="line"># Startup the system</span><br><span class="line"><span class="meta">::sysinit:/bin/mount</span> -t proc proc /proc</span><br><span class="line"><span class="meta">::sysinit:/bin/mount</span> -o remount,rw /</span><br><span class="line"><span class="meta">::sysinit:/bin/mkdir</span> -p /dev/pts /dev/shm</span><br><span class="line"><span class="meta">::sysinit:/bin/mount</span> -a</span><br><span class="line"><span class="meta">::sysinit:/sbin/swapon</span> -a</span><br><span class="line">null::sysinit:/bin/ln -sf /proc/self/fd /dev/fd</span><br><span class="line">null::sysinit:/bin/ln -sf /proc/self/fd/0 /dev/stdin</span><br><span class="line">null::sysinit:/bin/ln -sf /proc/self/fd/1 /dev/stdout</span><br><span class="line">null::sysinit:/bin/ln -sf /proc/self/fd/2 /dev/stderr</span><br><span class="line"><span class="meta">::sysinit:/bin/hostname</span> -F /etc/hostname</span><br><span class="line"># now run any rc scripts</span><br><span class="line"><span class="meta">::sysinit:/etc/init.d/rcS</span></span><br><span class="line"></span><br><span class="line"># Put a getty on the serial port</span><br><span class="line">console::respawn:/sbin/getty -L  console 0 vt100 # GENERIC_SERIAL</span><br><span class="line"></span><br><span class="line"># Stuff to do for the 3-finger salute</span><br><span class="line">#::ctrlaltdel:/sbin/reboot</span><br><span class="line"></span><br><span class="line"># Stuff to do before rebooting</span><br><span class="line"><span class="meta">::shutdown:/etc/init.d/rcK</span></span><br><span class="line"><span class="meta">::shutdown:/sbin/swapoff</span> -a</span><br><span class="line"><span class="meta">::shutdown:/bin/umount</span> -a -r</span><br></pre></td></tr></table></figure></li>
</ol>
<h2 id="做为普通的串口"><a href="#做为普通的串口" class="headerlink" title="做为普通的串口"></a>做为普通的串口</h2><ol>
<li>查看串口配置<figure class="highlight parser3"><table><tr><td class="code"><pre><span class="line"><span class="comment"># stty -F /dev/ttyGS0 </span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">speed </span><span class="number">9600</span><span class="language-xml"> baud; line = </span><span class="number">0</span><span class="language-xml">;</span></span><br><span class="line"><span class="language-xml">intr = </span><span class="keyword">^C</span><span class="language-xml">; quit = ^\; erase = ^?; kill = </span><span class="keyword">^U</span><span class="language-xml">; eof = </span><span class="keyword">^D</span><span class="language-xml">; eol = <span class="tag">&lt;<span class="name">undef</span>&gt;</span>;</span></span><br><span class="line"><span class="language-xml">eol2 = <span class="tag">&lt;<span class="name">undef</span>&gt;</span>; swtch = <span class="tag">&lt;<span class="name">undef</span>&gt;</span>; start = </span><span class="keyword">^Q</span><span class="language-xml">; stop = </span><span class="keyword">^S</span><span class="language-xml">; susp = </span><span class="keyword">^Z</span><span class="language-xml">; rprnt = </span><span class="keyword">^R</span><span class="language-xml">;</span></span><br><span class="line"><span class="language-xml">werase = </span><span class="keyword">^W</span><span class="language-xml">; lnext = </span><span class="keyword">^V</span><span class="language-xml">; flush = </span><span class="keyword">^O</span><span class="language-xml">; min = </span><span class="number">1</span><span class="language-xml">; time = </span><span class="number">0</span><span class="language-xml">;</span></span><br><span class="line"><span class="language-xml">-brkint -imaxbel</span></span><br></pre></td></tr></table></figure></li>
<li>去掉串口回显</li>
</ol>
<p>#stty -F &#x2F;dev&#x2F;ttyGS0 -echo</p>
<ol start="3">
<li>串口不做为控制终端</li>
</ol>
<p>#stty -F &#x2F;dev&#x2F;ttyGS0 raw min 1 time 10</p>
<ol start="5">
<li>这样设置之后就可以像单片机串口一样接收 不用带\n结尾了，发送接收都是原始数据,也不受特殊字符的影响</li>
</ol>
<h2 id="串口编程参考"><a href="#串口编程参考" class="headerlink" title="串口编程参考"></a>串口编程参考</h2><ol>
<li>如果是要编程控制串口，那么上边的所有设置都不需要，可以直接在代码把参数设置好，以下是测试过的代码<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line"><span class="regexp">//</span>串口相关的头文件</span><br><span class="line"><span class="comment">#include &lt;errno.h&gt;  /*错误号定义*/</span></span><br><span class="line"><span class="comment">#include &lt;fcntl.h&gt;  /*文件控制定义*/</span></span><br><span class="line"><span class="comment">#include &lt;stdio.h&gt;  /*标准输入输出定义*/</span></span><br><span class="line"><span class="comment">#include &lt;stdlib.h&gt; /*标准函数库定义*/</span></span><br><span class="line"><span class="comment">#include &lt;string.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;sys/stat.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;sys/types.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;linux/serial.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;sys/ioctl.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;termios.h&gt; /*PPSIX 终端控制定义*/</span></span><br><span class="line"><span class="comment">#include &lt;unistd.h&gt;  /*Unix 标准函数定义*/</span></span><br><span class="line"></span><br><span class="line"><span class="regexp">//</span>宏定义</span><br><span class="line"><span class="comment">#define FALSE -1</span></span><br><span class="line"><span class="comment">#define TRUE 0</span></span><br><span class="line"></span><br><span class="line">/*******************************************************************</span><br><span class="line"> * 名称：           tty_Open</span><br><span class="line"> * 功能：           打开串口并返回串口设备文件描述</span><br><span class="line"> * 入口参数：        fd    :文件描述符     port :串口号(ttyS0,ttyS1,ttyS2)</span><br><span class="line"> * 出口参数：        正确返回为<span class="number">1</span>，错误返回为<span class="number">0</span></span><br><span class="line"> *******************************************************************/</span><br><span class="line">int tty_open(int fd, char *port)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    fd = open(port, O_RDWR | O_NOCTTY | O_NDELAY);</span><br><span class="line">    <span class="keyword">if</span> (FALSE == fd)</span><br><span class="line">    &#123;</span><br><span class="line">        perror(<span class="string">&quot;Can&#x27;t Open Serial Port&quot;</span>);</span><br><span class="line">        return (FALSE);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="regexp">//</span>恢复串口为阻塞状态</span><br><span class="line">    <span class="keyword">if</span> (fcntl(fd, F_SETFL, <span class="number">0</span>) &lt; <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        printf(<span class="string">&quot;fcntl failed!\n&quot;</span>);</span><br><span class="line">        return (FALSE);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        printf(<span class="string">&quot;fcntl=%d\n&quot;</span>, fcntl(fd, F_SETFL, <span class="number">0</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="regexp">//</span>测试是否为终端设备</span><br><span class="line">    <span class="keyword">if</span> (<span class="number">0</span> == isatty(STDIN_FILENO))</span><br><span class="line">    &#123;</span><br><span class="line">        printf(<span class="string">&quot;standard input is not a terminal device\n&quot;</span>);</span><br><span class="line">        return (FALSE);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        printf(<span class="string">&quot;isatty success!\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    printf(<span class="string">&quot;fd-&gt;open=%d\n&quot;</span>, fd);</span><br><span class="line">    return fd;</span><br><span class="line">&#125;</span><br><span class="line">/*******************************************************************</span><br><span class="line"> * 名称：           tty_Close</span><br><span class="line"> * 功能：           关闭串口并返回串口设备文件描述</span><br><span class="line"> * 入口参数：        fd    :文件描述符     port :串口号(ttyS0,ttyS1,ttyS2)</span><br><span class="line"> * 出口参数：        void</span><br><span class="line"> *******************************************************************/</span><br><span class="line"></span><br><span class="line">void tty_close(int fd) &#123; close(fd); &#125;</span><br><span class="line"></span><br><span class="line">/*******************************************************************</span><br><span class="line"> * 名称：           tty_Set</span><br><span class="line"> * 功能：           设置串口数据位，停止位和效验位</span><br><span class="line"> * 入口参数：        fd        串口文件描述符</span><br><span class="line"> *                  peed     串口速度</span><br><span class="line"> *                  low_ctrl   数据流控制</span><br><span class="line"> *                  databits   数据位   取值为 <span class="number">7</span> 或者<span class="number">8</span></span><br><span class="line"> *                  stopbits   停止位   取值为 <span class="number">1</span> 或者<span class="number">2</span></span><br><span class="line"> *                   parity     效验类型 取值为N,E,O,,S</span><br><span class="line"> *出口参数：          正确返回为<span class="number">1</span>，错误返回为<span class="number">0</span></span><br><span class="line"> *******************************************************************/</span><br><span class="line">int tty_set(int fd, int speed, int flow_ctrl, int databits, int stopbits, int parity)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    int i;</span><br><span class="line">    int status;</span><br><span class="line">    int speed_arr[] = &#123;B115200, B19200, B9600, B4800, B2400, B1200, B300&#125;;</span><br><span class="line">    int name_arr[] = &#123;<span class="number">115200</span>, <span class="number">19200</span>, <span class="number">9600</span>, <span class="number">4800</span>, <span class="number">2400</span>, <span class="number">1200</span>, <span class="number">300</span>&#125;;</span><br><span class="line"></span><br><span class="line">    struct termios options;</span><br><span class="line">    </span><br><span class="line">    /*tcgetattr(fd,&amp;options)得到与fd指向对象的相关参数，并将它们保存于options,该函数还可以测试配置是否正确，该串口是否可用等。若调用成功，函数返回值为<span class="number">0</span>，若调用失败，函数返回值为<span class="number">1</span>.</span><br><span class="line">     */</span><br><span class="line">    <span class="keyword">if</span> (tcgetattr(fd, &amp;options) != <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        perror(<span class="string">&quot;SetupSerial 1&quot;</span>);</span><br><span class="line">        return (FALSE);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="regexp">//</span>设置串口输入波特率和输出波特率</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; sizeof(speed_arr) / sizeof(int); i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (speed == name_arr[i])</span><br><span class="line">        &#123;</span><br><span class="line">            cfsetispeed(&amp;options, speed_arr[i]);</span><br><span class="line">            cfsetospeed(&amp;options, speed_arr[i]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="regexp">//</span>修改控制模式，保证程序不会占用串口</span><br><span class="line">    options.c_cflag |= CLOCAL;</span><br><span class="line">    <span class="regexp">//</span>修改控制模式，使得能够从串口中读取输入数据</span><br><span class="line">    options.c_cflag |= CREAD;</span><br><span class="line"></span><br><span class="line">    <span class="regexp">//</span>设置数据流控制</span><br><span class="line">    switch (flow_ctrl)</span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">    case <span class="number">0</span>: <span class="regexp">//</span>不使用流控制</span><br><span class="line">        options.c_cflag &amp;= ~CRTSCTS;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">    case <span class="number">1</span>: <span class="regexp">//</span>使用硬件流控制</span><br><span class="line">        options.c_cflag |= CRTSCTS;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    case <span class="number">2</span>: <span class="regexp">//</span>使用软件流控制</span><br><span class="line">        options.c_cflag |= IXON | IXOFF | IXANY;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="regexp">//</span>设置数据位</span><br><span class="line">    <span class="regexp">//</span>屏蔽其他标志位</span><br><span class="line">    options.c_cflag &amp;= ~CSIZE;</span><br><span class="line">    switch (databits)</span><br><span class="line">    &#123;</span><br><span class="line">    case <span class="number">5</span>:</span><br><span class="line">        options.c_cflag |= CS5;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    case <span class="number">6</span>:</span><br><span class="line">        options.c_cflag |= CS6;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    case <span class="number">7</span>:</span><br><span class="line">        options.c_cflag |= CS7;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    case <span class="number">8</span>:</span><br><span class="line">        options.c_cflag |= CS8;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    default:</span><br><span class="line">        fprintf(stderr, <span class="string">&quot;Unsupported data size\n&quot;</span>);</span><br><span class="line">        return (FALSE);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="regexp">//</span>设置校验位</span><br><span class="line">    switch (parity)</span><br><span class="line">    &#123;</span><br><span class="line">    case <span class="string">&#x27;n&#x27;</span>:</span><br><span class="line">    case <span class="string">&#x27;N&#x27;</span>: <span class="regexp">//</span>无奇偶校验位。</span><br><span class="line">        options.c_cflag &amp;= ~PARENB;</span><br><span class="line">        options.c_iflag &amp;= ~INPCK;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    case <span class="string">&#x27;o&#x27;</span>:</span><br><span class="line">    case <span class="string">&#x27;O&#x27;</span>: <span class="regexp">//</span>设置为奇校验</span><br><span class="line">        options.c_cflag |= (PARODD | PARENB);</span><br><span class="line">        options.c_iflag |= INPCK;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    case <span class="string">&#x27;e&#x27;</span>:</span><br><span class="line">    case <span class="string">&#x27;E&#x27;</span>: <span class="regexp">//</span>设置为偶校验</span><br><span class="line">        options.c_cflag |= PARENB;</span><br><span class="line">        options.c_cflag &amp;= ~PARODD;</span><br><span class="line">        options.c_iflag |= INPCK;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    case <span class="string">&#x27;s&#x27;</span>:</span><br><span class="line">    case <span class="string">&#x27;S&#x27;</span>: <span class="regexp">//</span>设置为空格</span><br><span class="line">        options.c_cflag &amp;= ~PARENB;</span><br><span class="line">        options.c_cflag &amp;= ~CSTOPB;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    default:</span><br><span class="line">        fprintf(stderr, <span class="string">&quot;Unsupported parity\n&quot;</span>);</span><br><span class="line">        return (FALSE);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="regexp">//</span> 设置停止位</span><br><span class="line">    switch (stopbits)</span><br><span class="line">    &#123;</span><br><span class="line">    case <span class="number">1</span>:</span><br><span class="line">        options.c_cflag &amp;= ~CSTOPB;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    case <span class="number">2</span>:</span><br><span class="line">        options.c_cflag |= CSTOPB;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    default:</span><br><span class="line">        fprintf(stderr, <span class="string">&quot;Unsupported stop bits\n&quot;</span>);</span><br><span class="line">        return (FALSE);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="regexp">//</span>修改输出模式，原始数据输出</span><br><span class="line">    options.c_oflag &amp;= ~OPOST;</span><br><span class="line"></span><br><span class="line">    options.c_lflag &amp;= ~(ICANON | ECHO | ECHOE | ISIG);</span><br><span class="line">    <span class="regexp">//</span> Linux串口接收字节<span class="number">0</span>x11，<span class="number">0</span>x0d，<span class="number">0</span>x13丢失</span><br><span class="line">    <span class="regexp">//</span> https:<span class="regexp">//</span>www.jianshu.com<span class="regexp">/p/</span>ae699af72b82</span><br><span class="line">    options.c_iflag &amp;= ~(BRKINT | ICRNL | INPCK | ISTRIP | IXON);</span><br><span class="line">    <span class="regexp">//</span> options.c_lflag &amp;= ~(ISIG | ICANON);</span><br><span class="line"></span><br><span class="line">    <span class="regexp">//</span>设置等待时间和最小接收字符</span><br><span class="line">    options.c_cc[VTIME] = <span class="number">1</span>; <span class="regexp">/* 读取一个字符等待1*(1/</span><span class="number">10</span>)s */</span><br><span class="line">    options.c_cc[VMIN] = <span class="number">1</span>;  <span class="regexp">/* 读取字符的最少个数为1*/</span></span><br><span class="line"></span><br><span class="line">    <span class="regexp">//</span>如果发生数据溢出，接收数据，但是不再读取 刷新收到的数据但是不读</span><br><span class="line">    tcflush(fd, TCIFLUSH);</span><br><span class="line"></span><br><span class="line">    <span class="regexp">//</span>激活配置 (将修改后的termios数据设置到串口中）</span><br><span class="line">    <span class="keyword">if</span> (tcsetattr(fd, TCSANOW, &amp;options) != <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        perror(<span class="string">&quot;com set error!\n&quot;</span>);</span><br><span class="line">        return (FALSE);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="regexp">//</span> struct serial_struct serial;</span><br><span class="line">    <span class="regexp">//</span> int ret = ioctl(fd,TIOCGSERIAL,&amp;serial);</span><br><span class="line">    <span class="regexp">//</span> <span class="keyword">if</span>(ret !=<span class="number">0</span>)&#123;</span><br><span class="line">    <span class="regexp">//</span>     close(fd);</span><br><span class="line">    <span class="regexp">//</span>     return -<span class="number">2</span>;</span><br><span class="line">    <span class="regexp">//</span> &#125;</span><br><span class="line">    <span class="regexp">//</span> serial.xmit_fifo_size =<span class="number">1024</span>;</span><br><span class="line">    <span class="regexp">//</span> ret = ioctl(fd,TIOCSSERIAL,&amp;serial);</span><br><span class="line">    <span class="regexp">//</span> <span class="keyword">if</span>(ret !=<span class="number">0</span>)&#123;</span><br><span class="line">    <span class="regexp">//</span>     close(fd);</span><br><span class="line">    <span class="regexp">//</span>     return -<span class="number">3</span>;</span><br><span class="line">    <span class="regexp">//</span> &#125;</span><br><span class="line">    </span><br><span class="line">    return (TRUE);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/*******************************************************************</span><br><span class="line"> * 名称：                  tty_Recv</span><br><span class="line"> * 功能：                接收串口数据</span><br><span class="line"> * 入口参数：        fd                  :文件描述符</span><br><span class="line"> *                              rcv_buf     :接收串口中数据存入rcv_buf缓冲区中</span><br><span class="line"> *                              data_len    :一帧数据的长度</span><br><span class="line"> * 出口参数：        正确返回为<span class="number">1</span>，错误返回为<span class="number">0</span></span><br><span class="line"> *******************************************************************/</span><br><span class="line">int tty_recv(int fd, char *rcv_buf, int data_len)</span><br><span class="line">&#123;</span><br><span class="line">    int len, fs_sel;</span><br><span class="line">    fd_set fs_read;</span><br><span class="line"></span><br><span class="line">    struct timeval time;</span><br><span class="line"></span><br><span class="line">    FD_ZERO(&amp;fs_read);</span><br><span class="line">    FD_SET(fd, &amp;fs_read);</span><br><span class="line"></span><br><span class="line">    time.tv_sec = <span class="number">0</span>;</span><br><span class="line">    time.tv_usec = <span class="number">1000</span>*<span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">    <span class="regexp">//</span>使用select实现串口的多路通信</span><br><span class="line">    fs_sel = select(fd + <span class="number">1</span>, &amp;fs_read, NULL, NULL, &amp;time);</span><br><span class="line">    <span class="regexp">//</span>这里延时一下，否则数据超过<span class="number">16</span>个会被拆包!!!</span><br><span class="line">    usleep(<span class="number">1000</span>*<span class="number">5</span>);</span><br><span class="line">    <span class="keyword">if</span> (fs_sel)</span><br><span class="line">    &#123;</span><br><span class="line">        len = read(fd, rcv_buf, data_len);</span><br><span class="line">        return len;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        return FALSE;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">/********************************************************************</span><br><span class="line"> * 名称：tty_Send</span><br><span class="line"> * 功能：发送数据</span><br><span class="line"> * 入口参数:fd:文件描述符</span><br><span class="line"> * send_buf:存放串口发送数据</span><br><span class="line"> * data_len:一帧数据的个数</span><br><span class="line"> * 出口参数：正确返回为<span class="number">1</span>，错误返回为<span class="number">0</span></span><br><span class="line"> *******************************************************************/</span><br><span class="line">int tty_send(int fd, char *send_buf, int data_len)</span><br><span class="line">&#123;</span><br><span class="line">    int len = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    len = write(fd, send_buf, data_len);</span><br><span class="line">    <span class="keyword">if</span> (len == data_len)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="regexp">//</span>printf(<span class="string">&quot;send data is %s\n&quot;</span>, send_buf);</span><br><span class="line">        return len;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">        tcflush(fd, TCOFLUSH);</span><br><span class="line">        return FALSE;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">/*</span><br><span class="line">int main(int argc, char **argv)</span><br><span class="line">&#123;</span><br><span class="line">    int fd;  <span class="regexp">//</span>文件描述符</span><br><span class="line">    int err; <span class="regexp">//</span>返回调用函数的状态</span><br><span class="line">    int len;</span><br><span class="line">    int i;</span><br><span class="line">    char rcv_buf[<span class="number">4096</span>];</span><br><span class="line">    char send_buf[<span class="number">20</span>] = <span class="string">&quot;tiger john&quot;</span>;</span><br><span class="line">    <span class="keyword">if</span> (argc != <span class="number">3</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        printf(<span class="string">&quot;Usage: %s /dev/ttySn 0(send data)/1 (receive data) \n&quot;</span>, argv[<span class="number">0</span>]);</span><br><span class="line">        return FALSE;</span><br><span class="line">    &#125;</span><br><span class="line">    fd = tty_open(fd, argv[<span class="number">1</span>]); <span class="regexp">//</span>打开串口，返回文件描述符</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">    &#123;</span><br><span class="line">        err = tty_set(fd, <span class="number">115200</span>, <span class="number">0</span>, <span class="number">8</span>, <span class="number">1</span>, <span class="string">&#x27;N&#x27;</span>);</span><br><span class="line">        printf(<span class="string">&quot;Set Port Exactly!\n&quot;</span>);</span><br><span class="line">    &#125; <span class="keyword">while</span> (FALSE == err || FALSE == fd);</span><br><span class="line"></span><br><span class="line">    <span class="regexp">//</span> <span class="keyword">if</span> (<span class="number">0</span> == strcmp(argv[<span class="number">2</span>], <span class="string">&quot;0&quot;</span>))</span><br><span class="line">    <span class="regexp">//</span> &#123;</span><br><span class="line">    <span class="regexp">//</span>     <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">    <span class="regexp">//</span>     &#123;</span><br><span class="line">    <span class="regexp">//</span>         len = tty_send(fd, send_buf, <span class="number">10</span>);</span><br><span class="line">    <span class="regexp">//</span>         <span class="keyword">if</span> (len &gt; <span class="number">0</span>)</span><br><span class="line">    <span class="regexp">//</span>             printf(<span class="string">&quot; %d time send %d data successful\n&quot;</span>, i, len);</span><br><span class="line">    <span class="regexp">//</span>         <span class="keyword">else</span></span><br><span class="line">    <span class="regexp">//</span>             printf(<span class="string">&quot;send data failed!\n&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="regexp">//</span>         sleep(<span class="number">2</span>);</span><br><span class="line">    <span class="regexp">//</span>     &#125;</span><br><span class="line">    <span class="regexp">//</span>     tty_close(fd);</span><br><span class="line">    <span class="regexp">//</span> &#125;</span><br><span class="line">    <span class="regexp">//</span> <span class="keyword">else</span></span><br><span class="line">    <span class="regexp">//</span> &#123;</span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>) <span class="regexp">//</span>循环读取数据</span><br><span class="line">    &#123;</span><br><span class="line">        len = tty_recv(fd, rcv_buf, <span class="number">4096</span>);</span><br><span class="line">        <span class="keyword">if</span> (len &gt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            rcv_buf[len] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">            printf(<span class="string">&quot;%s&quot;</span>, rcv_buf);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="regexp">//</span> sleep(<span class="number">2</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    tty_close(fd);</span><br><span class="line">    <span class="regexp">//</span>&#125;</span><br><span class="line">&#125;</span><br><span class="line">*/</span><br></pre></td></tr></table></figure></li>
</ol>
<h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><h3 id="来源于whycan-com"><a href="#来源于whycan-com" class="headerlink" title="来源于whycan.com"></a>来源于<a href="https://whycan.com/">whycan.com</a></h3><ol>
<li><p>原来是linux下串口的会带部分收发规则 参考<a href="https://blog.csdn.net/lvliang2008/article/details/6192863%E8%BF%99%E4%B8%AA">https://blog.csdn.net/lvliang2008/article/details/6192863这个</a> pc发给板子 然后pc收到了发的内容 的现象是因为默认开启了串口回显功能</p>
</li>
<li><p>还有串口默认规则是 板子使用echo “send data” &gt; &#x2F;dev&#x2F;ttyGS0 发送给PC时 会自动对发送数据添加换行符\n 并且接收数据时 也是通过换行符\n作为接收结束 所以PC发送给板子时必须在发送数据末尾加换行符\n</p>
</li>
<li><p>linux应用程序下的串口编程 参考<br><a href="https://www.cnblogs.com/silencehuan/p/11103074.html">https://www.cnblogs.com/silencehuan/p/11103074.html</a></p>
</li>
<li><p>shell环境下通过stty配置<br>stty -F &#x2F;dev&#x2F;ttyGS0 raw min 1 time 10<br>其中raw是设置本设备不作为串口的‘控制终端’”。如果不使用该选项，会有一些输入字符影响进程运行（如一些产生中断信号的键盘输入字符 以及上面说的串口回显等）<br>其中min是从串口缓冲里读出的最小的接收数据<br>其中time是每次cat 串口的读取超时时间 单位100ms</p>
</li>
<li><p>shell操作串口参考<br><a href="https://blog.csdn.net/chenliang0224/article/details/100593900">https://blog.csdn.net/chenliang0224/article/details/100593900</a></p>
</li>
<li><p>stty命令参考<br><a href="http://linux.51yip.com/search/stty">http://linux.51yip.com/search/stty</a></p>
</li>
</ol>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>F1C100S</tag>
        <tag>F1C200S</tag>
        <tag>Gadget</tag>
        <tag>Serial</tag>
        <tag>ACM</tag>
        <tag>CDC</tag>
      </tags>
  </entry>
  <entry>
    <title>全志F1C桌面气象站-大屏版</title>
    <url>/pages/d69d/</url>
    <content><![CDATA[<p><code>以下是界面预览，仅供参考，具体以实物为准,屏幕规格为7英寸 RGB666 800*480</code></p>
<img src="/pages/d69d/frame.png" class="" title="img">
<img src="/pages/d69d/frame0.png" class="" title="img">

<img src="/pages/d69d/frame2.png" class="" title="img">
<img src="/pages/d69d/frame3.png" class="" title="img">
<img src="/pages/d69d/frame4.png" class="" title="img">
<img src="/pages/d69d/frame5.png" class="" title="img">
<img src="/pages/d69d/frame6.png" class="" title="img">
<img src="/pages/d69d/frame7.png" class="" title="img">
<img src="/pages/d69d/frame8.png" class="" title="img">
<img src="/pages/d69d/frame9.png" class="" title="img">
<img src="/pages/d69d/frame10.png" class="" title="img">
<img src="/pages/d69d/frame11.png" class="" title="img">
<img src="/pages/d69d/frame12.png" class="" title="img">
<img src="/pages/d69d/frame13.png" class="" title="img">
<img src="/pages/d69d/frame14.png" class="" title="img">
<img src="/pages/d69d/frame15.png" class="" title="img">
<img src="/pages/d69d/frame16.png" class="" title="img">
<img src="/pages/d69d/frame17.png" class="" title="img">
<img src="/pages/d69d/frame18.png" class="" title="img">
<img src="/pages/d69d/frame19.png" class="" title="img">
<img src="/pages/d69d/frame20.png" class="" title="img">
<img src="/pages/d69d/frame21.png" class="" title="img">
<img src="/pages/d69d/frame22.png" class="" title="img">
<img src="/pages/d69d/frame23.png" class="" title="img">
<img src="/pages/d69d/frame24.png" class="" title="img">]]></content>
      <categories>
        <category>全志F1C桌面气象站-大屏版</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>F1C100S</tag>
        <tag>F1C200S</tag>
        <tag>ARM9</tag>
        <tag>V3S</tag>
        <tag>LVGL</tag>
      </tags>
  </entry>
  <entry>
    <title>v3s上使用sox产生测试信号</title>
    <url>/pages/8165/</url>
    <content><![CDATA[<h2 id="交叉编译音频界的瑞士军刀SOX并播放音乐并产生各种测试音频信号"><a href="#交叉编译音频界的瑞士军刀SOX并播放音乐并产生各种测试音频信号" class="headerlink" title="交叉编译音频界的瑞士军刀SOX并播放音乐并产生各种测试音频信号"></a>交叉编译音频界的瑞士军刀SOX并播放音乐并产生各种测试音频信号</h2><ol>
<li><p>从此处下载<a href="http://sox.sourceforge.net/">sox官网</a> 解压后新建一个autoconfig.sh脚本<br> <code>这里使用了绝对路径，使用相对路径在最后链接时找不到文件，所以直接使用了绝对路径,里边的一些插件如果不需要可以去掉，我也一起打包传上来，另外这手动编译依赖可真烦那，只能缺哪个下载哪个再编译哪个最后才能给链接出来，跟buildroot里3S钟把sox勾选上完事编译完事相比，手动编译估计得3小时 ^*_*^，简直弱爆了</code><br> #!&#x2F;bin&#x2F;sh<br> .&#x2F;configure <br> CC&#x3D;”arm-linux-gnueabihf-gcc” <br> LDFLAGS&#x3D;”-L&#x2F;home&#x2F;xfdr&#x2F;v3s_licheepi_zero&#x2F;sox-14.4.2-sonavox&#x2F;alsa&#x2F; -L&#x2F;home&#x2F;xfdr&#x2F;v3s_licheepi_zero&#x2F;sox-14.4.2-sonavox&#x2F;flac-1.3.3&#x2F;src&#x2F;libFLAC&#x2F;.libs -L&#x2F;home&#x2F;xfdr&#x2F;v3s_licheepi_zero&#x2F;sox-14.4.2-sonavox&#x2F;lame-3.100&#x2F;libmp3lame&#x2F;.libs&#x2F; -L&#x2F;home&#x2F;xfdr&#x2F;v3s_licheepi_zero&#x2F;sox-14.4.2-sonavox&#x2F;twolame-0.4.0&#x2F;libtwolame&#x2F;.libs&#x2F; -L&#x2F;home&#x2F;xfdr&#x2F;v3s_licheepi_zero&#x2F;sox-14.4.2-sonavox&#x2F;libmad-0.15.1b&#x2F;.libs&#x2F; -L&#x2F;home&#x2F;xfdr&#x2F;v3s_licheepi_zero&#x2F;sox-14.4.2-sonavox&#x2F;libid3tag-0.15.1b&#x2F;.libs&#x2F; -L&#x2F;home&#x2F;xfdr&#x2F;v3s_licheepi_zero&#x2F;sox-14.4.2-sonavox&#x2F;zlib-1.2.11” <br> CFLAGS&#x3D;”-I&#x2F;home&#x2F;xfdr&#x2F;v3s_licheepi_zero&#x2F;buildroot-2021.02&#x2F;output&#x2F;host&#x2F;arm-buildroot-linux-gnueabihf&#x2F;sysroot&#x2F;usr&#x2F;include&#x2F; -I&#x2F;home&#x2F;xfdr&#x2F;v3s_licheepi_zero&#x2F;sox-14.4.2-sonavox&#x2F;lame-3.100&#x2F;include&#x2F; -I&#x2F;home&#x2F;xfdr&#x2F;v3s_licheepi_zero&#x2F;sox-14.4.2-sonavox&#x2F;flac-1.3.3&#x2F;src&#x2F;libFLAC&#x2F; -I&#x2F;home&#x2F;xfdr&#x2F;v3s_licheepi_zero&#x2F;sox-14.4.2-sonavox&#x2F;twolame-0.4.0&#x2F;libtwolame&#x2F; -I&#x2F;home&#x2F;xfdr&#x2F;v3s_licheepi_zero&#x2F;sox-14.4.2-sonavox&#x2F;libmad-0.15.1b&#x2F; -I&#x2F;home&#x2F;xfdr&#x2F;v3s_licheepi_zero&#x2F;sox-14.4.2-sonavox&#x2F;libid3tag-0.15.1b&#x2F;“ <br> –prefix &#x2F;opt&#x2F;sox.14.4.2 <br> –host&#x3D;arm-linux-gnueabihf <br> –target&#x3D;arm-linux <br> –with-alsa <br> –with-flac <br> –with-mp3 <br> –with-id3tag <br> –with-lame <br> –with-wavpack <br> #–with-twolame \</p>
</li>
<li><p>编译完成后执行make install 即可，安装目录就是上边指定的,拷贝到开发板或者NFS目录下</p>
</li>
<li><p>先来播放音乐试一下<br> <code># ./sox.14.4.2/bin/play -t mp3 ./群星-雨花石.mp3</code><br> .&#x2F;sox.14.4.2&#x2F;bin&#x2F;play WARN alsa: can’t encode 0-bit Unknown or not applicable</p>
<p> .&#x2F;群星-雨花石.mp3:</p>
<p> File Size: 13.7M     Bit Rate: 321k<br> Encoding: MPEG audio    Info: 163 key(Don’t modify):cEgtqHxwpdRKcBCRPBlPkg2DgcBlNoDaE7DLI&#x2F;2UHqynoBve87Svw+quIkOr72Ov7q2menCG1hUs953Iws8wjHxQUjhQGB3sa2Sa9AVOc0ek4+GcHOxN9VcDh3GNItlfDRG7Pi&#x2F;y+oz0U3xrKMvDiHZErPJlv6SHCl&#x2F;k5qddt6BXsgTw3fn&#x2F;9fNu&#x2F;LLy&#x2F;lawUWghlFz+aUkza7omDosFsjHYbZYrBjDqcCegSdhUOA43QD89da8FaXkqPqcMQVYqEBm7uirR2NrhGOOGt29H8sgWqCZ1icsjX7XcnX0035IQQ5Fj3dVW49U4iJMDLJtbM9DDheK&#x2F;KwCziC1y9ISodum8kf9PC7+b+JLNr&#x2F;mhg5DifEjdqngnEHAzqRUNufhtjc530m+aglaPBRphTfryHMYPKTWq311dQFnn9Ru1rnrpjBwyc9avaOrd10VsncqCPRHdRET&#x2F;f7ygAMyztzSPzQ&#x3D;&#x3D;<br> Channels: 2 @ 16-bit   Track: 4<br> Samplerate: 44100Hz      Album: 女人如歌  柔情魅声<br> Replaygain: off         Artist: 群星<br> Duration: 00:05:40.79  Title: 雨花石</p>
<p> In:1.23% 00:00:04.18 [00:05:36.61] Out:184k  [     &#x3D;|&#x3D;&#x3D;    ]        Clip:0<br> Aborted.<br> <code># ./sox.14.4.2/bin/play -t flac ./wodeloulan.flac</code><br> .&#x2F;sox.14.4.2&#x2F;bin&#x2F;play WARN alsa: can’t encode 0-bit Unknown or not applicable</p>
<p> .&#x2F;wodeloulan.flac:</p>
<p> File Size: 39.0M     Bit Rate: 952k<br> Encoding: FLAC<br> Channels: 2 @ 16-bit<br> Samplerate: 44100Hz      Album: 倔强<br> Replaygain: off         Artist: 云朵<br> Duration: 00:05:27.59  Title: 我的楼兰</p>
<p> In:0.48% 00:00:01.58 [00:05:26.01] Out:69.6k [   &#x3D;&#x3D;&#x3D;|&#x3D;&#x3D;-   ]        Clip:0<br> Aborted.</p>
</li>
<li><p>音乐播放没问题,也可以播放网络音频<br> <code># ./play -t flac http://192.168.6.123:8080/wodeloulan.flac</code><br> .&#x2F;play WARN alsa: can’t encode 0-bit Unknown or not applicable</p>
<p> <a href="http://192.168.6.123:8080/wodeloulan.flac">http://192.168.6.123:8080/wodeloulan.flac</a>:</p>
<p> File Size: 0         Bit Rate: 0<br> Encoding: FLAC<br> Channels: 2 @ 16-bit<br> Samplerate: 44100Hz      Album: 倔强<br> Replaygain: off         Artist: 云朵<br> Duration: 00:05:27.59  Title: 我的楼兰</p>
<p> In:0.57% 00:00:01.86 [00:05:25.73] Out:81.9k [    &#x3D;&#x3D;|&#x3D;&#x3D;-   ]        Clip:0<br> Aborted.</p>
</li>
<li><p>下边开始使用sox产生一些测试信号试试<br> 产生1Khz 44.1KHz 0dB 的sin pink white<br> play -V -r 48000 -b 16 -c 2 -n synth sin 1000 vol 0db<br> play -V -r 48000 -b 16 -c 2 -n synth pink 1000 vol 0db<br> play -V -r 48000 -b 16 -c 2 -n synth white 1000 vol 0db</p>
<p> <code>#  ./play -V -r 48000 -b 16 -c 2 -n synth pink 1000 vol 0db</code><br> .&#x2F;play WARN alsa: can’t encode 0-bit Unknown or not applicable<br> .&#x2F;play:      SoX v14.4.2</p>
<p> Input File     : ‘’ (null)<br> Channels       : 2<br> Sample Rate    : 48000<br> Precision      : 16-bit<br> Endian Type    : little<br> Reverse Nibbles: no<br> Reverse Bits   : no</p>
<p> <code>./play INFO formats: can&#39;t set sample rate 48000; using 44100</code></p>
<p> Output File    : ‘default’ (alsa)<br> Channels       : 2<br> Sample Rate    : 44100<br> Precision      : 16-bit<br> Sample Encoding: 16-bit Signed Integer PCM<br> Endian Type    : little<br> Reverse Nibbles: no<br> Reverse Bits   : no</p>
<p> .&#x2F;play INFO vol: has no effect in this configuration<br> .&#x2F;play INFO sox: effects chain: input        48000Hz  2 channels<br> .&#x2F;play INFO sox: effects chain: synth        48000Hz  2 channels<br> .&#x2F;play INFO sox: effects chain: rate         44100Hz  2 channels<br> .&#x2F;play INFO sox: effects chain: dither       44100Hz  2 channels<br> .&#x2F;play INFO sox: effects chain: output       44100Hz  2 channels<br> In:0.00% 00:00:04.78 [00:00:00.00] Out:203k  [      |      ] Hd:3.4 Clip:0<br> Aborted.</p>
</li>
<li><p>从 20Hz 到 20kHz 的频率扫描，持续时间为 30 秒  音量0 重复10次<br> play -V -r 44100 -b -c 2 -n synth 30 sin 20+20000 vol 0db repeat 10</p>
</li>
<li><p>20-10kHz 和 1kHz-20kHz 双频扫描<br> play -V -r 44100 -n synth 30 sin 20+10000 sin 1000+20000 remix 1,2 channels 2</p>
</li>
<li><p>获取音频文件的各种信息<br> # .&#x2F;sox.14.4.2&#x2F;bin&#x2F;soxi 群星-雨花石.mp3<br><br> Input File     : ‘群星-雨花石.mp3’<br> Channels       : 2<br> Sample Rate    : 44100<br> Precision      : 16-bit<br> Duration       : 00:05:40.79 &#x3D; 15028992 samples &#x3D; 25559.5 CDDA sectors<br> File Size      : 13.7M<br> Bit Rate       : 321k<br> Sample Encoding: MPEG audio (layer I, II or III)<br> Comments       :<br> Title&#x3D;雨花石<br> Artist&#x3D;群星<br> Album&#x3D;女人如歌  柔情魅声<br> Tracknumber&#x3D;4<br> Comment&#x3D;163 key(Don’t modify):cEgtqHxwpdRKcBCRPBlPkg2DgcBlNoDaE7DLI&#x2F;2UHqynoBve87Svw+quIkOr72Ov7q2menCG1hUs953Iws8wjHxQUjhQGB3sa2Sa9AVOc0ek4+GcHOxN9VcDh3GNItlfDRG7Pi&#x2F;y+oz0U3xrKMvDiHZErPJlv6SHCl&#x2F;k5qddt6BXsgTw3fn&#x2F;9fNu&#x2F;LLy&#x2F;lawUWghlFz+aUkza7omDosFsjHYbZYrBjDqcCegSdhUOA43QD89da8FaXkqPqcMQVYqEBm7uirR2NrhGOOGt29H8sgWqCZ1icsjX7XcnX0035IQQ5Fj3dVW49U4iJMDLJtbM9DDheK&#x2F;KwCziC1y9ISodum8kf9PC7+b+JLNr&#x2F;mhg5DifEjdqngnEHAzqRUNufhtjc530m+aglaPBRphTfryHMYPKTWq311dQFnn9Ru1rnrpjBwyc9avaOrd10VsncqCPRHdRET&#x2F;f7ygAMyztzSPzQ&#x3D;&#x3D;<br> Discnumber&#x3D;1<br> # .&#x2F;sox.14.4.2&#x2F;bin&#x2F;soxi   abc.flac<br><br> Input File     : ‘abc.flac’<br> Channels       : 2<br> Sample Rate    : 44100<br> Precision      : 16-bit<br> Duration       : 00:04:14.76 &#x3D; 11234921 samples &#x3D; 19107 CDDA sectors<br> File Size      : 28.9M<br> Bit Rate       : 908k<br> Sample Encoding: 16-bit FLAC<br> Comments       :<br> ALBUM ARTIST&#x3D;彭佳慧<br> ARTIST&#x3D;彭佳慧<br> TITLE&#x3D;相见恨晚<br><br><br> 获取总时间<br> # .&#x2F;sox.14.4.2&#x2F;bin&#x2F;soxi  -d abc.flac<br> 00:04:14.76<br> # .&#x2F;sox.14.4.2&#x2F;bin&#x2F;soxi  -D abc.flac<br> 254.760113</p>
</li>
<li><p>从任意位置播放歌曲<br> # .&#x2F;sox.14.4.2&#x2F;bin&#x2F;play abc.flac  trim 53 &#x3D;240<br> .&#x2F;sox.14.4.2&#x2F;bin&#x2F;play WARN alsa: can’t encode 0-bit Unknown or not applicable<br><br> abc.flac:<br><br> File Size: 28.9M     Bit Rate: 908k<br> Encoding: FLAC<br> Channels: 2 @ 16-bit<br> Samplerate: 44100Hz<br> Replaygain: off         Artist: 彭佳慧<br> Duration: 00:04:14.76  Title: 相见恨晚<br><br> In:25.0% 00:01:03.59 [00:03:11.17] Out:467k  [-&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;|&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;-] Hd:0.2 Clip:0<br> Aborted.<br> # .&#x2F;sox.14.4.2&#x2F;bin&#x2F;play abc.flac  trim 100 &#x3D;240<br> .&#x2F;sox.14.4.2&#x2F;bin&#x2F;play WARN alsa: can’t encode 0-bit Unknown or not applicable<br><br> abc.flac:<br><br> File Size: 28.9M     Bit Rate: 908k<br> Encoding: FLAC<br> Channels: 2 @ 16-bit<br> Samplerate: 44100Hz<br> Replaygain: off         Artist: 彭佳慧<br> Duration: 00:04:14.76  Title: 相见恨晚<br><br> In:40.2% 00:01:42.51 [00:02:32.25] Out:111k  [&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;|&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;] Hd:0.2 Clip:0<br> Aborted.</p>
</li>
<li><p>从这条命令里还可以一直获取到当前播放进度，到这里你应该已经想到了，这不就可以做一个音乐播放器了嘛，需要的条件都已经满足了</p>
</li>
</ol>
<h3 id="sox功能还有很多，不过这几个功能目前已经满足我的需要了，其它高级玩法就留给大家了"><a href="#sox功能还有很多，不过这几个功能目前已经满足我的需要了，其它高级玩法就留给大家了" class="headerlink" title="sox功能还有很多，不过这几个功能目前已经满足我的需要了，其它高级玩法就留给大家了"></a>sox功能还有很多，不过这几个功能目前已经满足我的需要了，其它高级玩法就留给大家了</h3>]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>V3S</tag>
        <tag>Audio</tag>
        <tag>BT</tag>
        <tag>sox</tag>
      </tags>
  </entry>
  <entry>
    <title>动手让LVGL8-Music-Demo音乐响起来</title>
    <url>/pages/cd71/</url>
    <content><![CDATA[<ol>
<li>LVGL8 自带的有一个音乐播放器的Demo，效果不错，充分展示了LVGL8的弹性网格布局，动画等效果，来学习GUI是非常不错的，只是这个Demo并不能真正的播放音乐，但是已经把音乐播放的逻辑都给实现了，现在我们就动手给它注入灵魂—-mpv</li>
<li>最初是用的sox这个号称音频界的瑞士军刀的工具，但是编写过程中碰到一个比较棘手的问题，那就是无法使用管道重定向输出（play本身不支持管道，只能借助sox），也就没办法获取播放时间，会造成进度条时间与实际播放时间有点误差，最后就放弃使用sox了  <figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (pid == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">LOG_D</span>(<span class="string">&quot;child pid:%d\n&quot;</span>, <span class="built_in">getpid</span>());</span><br><span class="line">    <span class="type">char</span> cmd[<span class="number">32</span>];</span><br><span class="line">    <span class="built_in">prctl</span>(PR_SET_PDEATHSIG, SIGKILL);</span><br><span class="line">    <span class="built_in">close</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="built_in">dup2</span>(pip[<span class="number">1</span>], <span class="number">1</span>); <span class="comment">//标准输出重定向到管道输出</span></span><br><span class="line">    <span class="built_in">close</span>(pip[<span class="number">0</span>]);</span><br><span class="line">    <span class="built_in">sprintf</span>(buf, <span class="string">&quot;./music/%s&quot;</span>, _lv_demo_music_get_title(track_id));</span><br><span class="line">    <span class="built_in">sprintf</span>(cmd, <span class="string">&quot;--start=%d&quot;</span>, _time, _lv_demo_music_get_track_length(track_id));</span><br><span class="line">    <span class="comment">// execlp(&quot;ls&quot;, &quot;ls&quot;, &quot;./music&quot;, NULL);</span></span><br><span class="line">    <span class="comment">// execlp(&quot;play&quot;, &quot;play&quot;, &quot;-p&quot;, buf, &quot;trim&quot;, cmd, NULL);</span></span><br><span class="line">    <span class="comment">// execlp(&quot;sox&quot;, &quot;sox&quot;, buf, &quot;-p&quot;, &quot;|&quot;, &quot;play&quot;, &quot;-&quot;, &quot;trim&quot;, cmd, NULL);</span></span><br><span class="line">    <span class="comment">//最后知道怎么使用管道了，但是这是2个进程</span></span><br><span class="line">    <span class="comment">// sox ./music/云非非\ -\ 邂逅.flac -t flac - | play -t flac - &amp;</span></span><br><span class="line">    <span class="comment">// sox ./music/云非非\ -\ 邂逅.flac -t flac - | play - &amp;</span></span><br><span class="line">    <span class="comment">// sox ./music/云非非\ -\ 邂逅.flac -p | play - &amp;</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li>下边请出我们的主角 MPV<h3 id="MPV播放器是什么？"><a href="#MPV播放器是什么？" class="headerlink" title="MPV播放器是什么？"></a>MPV播放器是什么？</h3><blockquote>
<p>MPV是著名开源播放器mplayer和mplayer2的一个分支。<br> mplayer则是这个地球上最强的播放器（没有之一），跨平台的特性使得windows、mac、linux上都可以见到它的身影，电脑、手机上很多播放器也是基于它开发的，由于mplayer不带界面，所以很多时候你都不知道是它在默默为你工作。<br> 并且mplayer播放视频时对于资源的消耗往往最少，所以你会发现在一台配置极差的电脑上播放高清电影，mplayer通常是最流畅的，使用快进时最能体现出差距，其他播放器已经画面卡死时，mplayer的画面可能只是感觉到掉帧而已。<br> MPV播放器继承这些众多优良特性的同时，添加了内置于窗口的播放控制界面(OSC),对硬解的良好支持，以及其他额外特性。由于口碑很好，使得著名的mplayer前端：smplayer在不久前也添加了对MPV的支持，现在的smplayer你可以在mplayer和MPV2个核心之间切换使用。<br> mpv官网的开发文档比较好，参考使用手册都可以使用起来</p>
</blockquote>
</li>
<li>下边简单说一下过程<br> a.首先要获取播放列表 有2种方法<br> 方法1: <figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">scan_music_list</span><span class="params">(<span class="type">char</span> *_path)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">char</span> path[<span class="number">128</span>];</span><br><span class="line">    <span class="built_in">sprintf</span>(path, <span class="string">&quot;ls %s&quot;</span>, _path);</span><br><span class="line">    FILE *fp = popen(path, <span class="string">&quot;r&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (ferror(fp))</span><br><span class="line">    &#123;</span><br><span class="line">        LOG_D(<span class="string">&quot;error\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">char</span> buf[<span class="number">128</span>];</span><br><span class="line">    <span class="keyword">while</span> (!feof(fp))</span><br><span class="line">    &#123;</span><br><span class="line">        fgets(buf, <span class="keyword">sizeof</span>(buf), fp);</span><br><span class="line">        <span class="built_in">strncpy</span>(title_list[idx], buf, <span class="built_in">strlen</span>(buf) - <span class="number">1</span>); <span class="comment">//去掉文件名后的\n</span></span><br><span class="line">        get_music_info(title_list[idx], idx);</span><br><span class="line">        idx++;</span><br><span class="line">        usleep(<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> idx;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<pre><code> 播放列表里的字体是浪漫雅圆，使用freetype渲染的
 方法2:
</code></pre>
 <figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">list_dir</span><span class="params">(<span class="type">char</span> *path, <span class="type">int</span> depth)</span></span><br><span class="line">&#123;</span><br><span class="line">    DIR *dir;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">dirent</span> *<span class="title">file</span>;</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">stat</span> <span class="title">st</span>;</span></span><br><span class="line">    dir = opendir(path);</span><br><span class="line">    <span class="keyword">if</span> (!dir)</span><br><span class="line">    &#123;</span><br><span class="line">        LOG_D(<span class="string">&quot;open dir %s failed!&quot;</span>, path);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    LOG_D(<span class="string">&quot;open dir %s ok!&quot;</span>, path);</span><br><span class="line">    <span class="keyword">while</span> ((file = readdir(dir)) != <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">strncmp</span>(file-&gt;d_name, <span class="string">&quot;.&quot;</span>, <span class="number">1</span>) == <span class="number">0</span> || <span class="built_in">strncmp</span>(file-&gt;d_name, <span class="string">&quot;..&quot;</span>, <span class="number">2</span>) == <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">strcpy</span>(title_list[idx++], file-&gt;d_name);</span><br><span class="line">        <span class="keyword">if</span> (stat(file-&gt;d_name, &amp;st) &gt;= <span class="number">0</span> &amp;&amp; S_ISDIR(st.st_mode) &amp;&amp; depth &lt;= <span class="number">5</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            list_dir(file-&gt;d_name, depth + <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    closedir(dir);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
 b.程序启动时创建一个子进程，一个线程获取播放进度，一个线程获取各种输入 <figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">lv_demo_music</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    lv_obj_set_style_bg_color(lv_scr_act(), lv_color_hex(<span class="number">0x343247</span>), <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    music_num = scan_music_list(MUSIC_PATH);</span><br><span class="line">    <span class="built_in">list</span> = _lv_demo_music_list_create(lv_scr_act());</span><br><span class="line">    ctrl = _lv_demo_music_main_create(lv_scr_act());</span><br><span class="line">    pid = vfork();</span><br><span class="line">    <span class="keyword">if</span> (pid == <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        LOG_D(<span class="string">&quot;child pid:%d\n&quot;</span>, getpid());</span><br><span class="line">        prctl(PR_SET_PDEATHSIG, SIGKILL);</span><br><span class="line">        execlp(<span class="string">&quot;mpv&quot;</span>, <span class="string">&quot;mpv&quot;</span>, <span class="string">&quot;--quiet&quot;</span>, <span class="string">&quot;--no-terminal&quot;</span>, <span class="string">&quot;--no-video&quot;</span>, <span class="string">&quot;--idle=yes&quot;</span>, <span class="string">&quot;--term-status-msg=&quot;</span>, <span class="string">&quot;--input-ipc-server=/tmp/mpvsocket&quot;</span>, <span class="literal">NULL</span>);</span><br><span class="line">        LOG_D(<span class="string">&quot;child exit!\n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (pid &gt; <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        LOG_D(<span class="string">&quot;parent pid:%d\n&quot;</span>, getpid());</span><br><span class="line">        sleep(<span class="number">1</span>);</span><br><span class="line">        close(<span class="number">0</span>);</span><br><span class="line">        act.sa_handler = sigusr1;</span><br><span class="line">        sigfillset(&amp;act.sa_mask);</span><br><span class="line">        act.sa_flags = SA_RESTART; <span class="comment">/* don&#x27;t fiddle with EINTR */</span></span><br><span class="line">        sigaction(SIGUSR1, &amp;act, <span class="literal">NULL</span>);</span><br><span class="line">        addr.sun_family = AF_UNIX;</span><br><span class="line">        <span class="built_in">strcpy</span>(addr.sun_path, <span class="string">&quot;/tmp/mpvsocket&quot;</span>);</span><br><span class="line">        fd_mpv = socket(AF_UNIX, SOCK_STREAM, <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">if</span> (fd_mpv == <span class="number">-1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            LOG_D(<span class="string">&quot;Create socket failed\n&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (connect(fd_mpv, (<span class="keyword">struct</span> sockaddr *)&amp;addr, <span class="keyword">sizeof</span>(addr)) == <span class="number">-1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            LOG_D(<span class="string">&quot;Cannot connect to socket %s\n&quot;</span>, addr.sun_path);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (pthread_create(&amp;mthread, <span class="literal">NULL</span>, get_music_percent_pos, <span class="literal">NULL</span>) != <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            LOG_D(<span class="string">&quot;pthread create error!\n&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// LOG_D(&quot;get music pos pthread create ok!\n&quot;);</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        LOG_D(<span class="string">&quot;fork error:\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">if</span> LV_DEMO_MUSIC_AUTO_PLAY</span></span><br><span class="line">    lv_timer_create(auto_step_cb, <span class="number">1000</span>, <span class="literal">NULL</span>);</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<pre><code> 这里说明一下mpv里的参数
 &quot;--quiet&quot;, //输出尽量少的信息
 &quot;--no-terminal&quot;, //不接受终端输入
 &quot;--no-video&quot;, //不需要视频
 &quot;--idle=yes&quot;, //播放完不能出进程
 &quot;--term-status-msg=&quot;, //状态信息不打印
 &quot;--input-ipc-server=/tmp/mpvsocket&quot;//使用sock方式与mpv通信
 这里使用的是mpv推荐的基于socket的JSON-based IPC protocol通信方式
</code></pre>
 c. 一个线程启动时向mpv发送命令，然后监听事件就可以知道当前进度及状态 <figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">void</span> *<span class="title function_">get_music_percent_pos</span><span class="params">(<span class="type">void</span> *arg)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// char cmd[] = &quot;&#123;\&quot;command\&quot;: [ \&quot;get_property\&quot;, \&quot;playback-time\&quot;] &#125;\n&quot;;</span></span><br><span class="line">    <span class="comment">// char cmd[] = &quot;&#123;\&quot;command\&quot;: [ \&quot;get_property\&quot;, \&quot;percent-pos\&quot;] ,\&quot;request_id\&quot;:2&#125;\n&quot;;</span></span><br><span class="line">    <span class="type">char</span> cmd2[] = <span class="string">&quot;&#123;\&quot;command\&quot;: [ \&quot;observe_property\&quot;,2, \&quot;percent-pos\&quot;]&#125;\n&quot;</span>;</span><br><span class="line">    <span class="type">char</span> cmd1[] = <span class="string">&quot;&#123;\&quot;command\&quot;: [  \&quot;observe_property\&quot;,1,\&quot;time-pos\&quot;]&#125;\n&quot;</span>;</span><br><span class="line">    <span class="type">char</span> buf[<span class="number">512</span>];</span><br><span class="line">    cJSON *root;</span><br><span class="line">    cJSON *event;</span><br><span class="line">    cJSON *percent;</span><br><span class="line">    write(fd_mpv, cmd1, <span class="built_in">strlen</span>(cmd1));</span><br><span class="line">    _msleep(<span class="number">100</span>);</span><br><span class="line">    write(fd_mpv, cmd2, <span class="built_in">strlen</span>(cmd2));</span><br><span class="line">    <span class="built_in">memset</span>(buf, <span class="number">0</span>, <span class="keyword">sizeof</span>(buf));</span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (read(fd_mpv, buf, <span class="keyword">sizeof</span>(buf)) &gt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            LOG_D(<span class="string">&quot;---&gt;:%s\n&quot;</span>, buf);</span><br><span class="line">            root = cJSON_Parse(buf);</span><br><span class="line">            <span class="keyword">if</span> (root == <span class="literal">NULL</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                LOG_D(<span class="string">&quot;cJSON parse error!\n&quot;</span>);</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// LOG_D(&quot;cJSON parse ok!\n&quot;);</span></span><br><span class="line">            <span class="keyword">if</span> (cJSON_HasObjectItem(root, <span class="string">&quot;event&quot;</span>))</span><br><span class="line">            &#123;</span><br><span class="line"></span><br><span class="line">                event = cJSON_GetObjectItem(root, <span class="string">&quot;event&quot;</span>);</span><br><span class="line">                <span class="keyword">if</span> (event != <span class="literal">NULL</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span> (<span class="built_in">strcmp</span>(event-&gt;valuestring, <span class="string">&quot;start-file&quot;</span>) == <span class="number">0</span>)</span><br><span class="line">                    &#123;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">strcmp</span>(event-&gt;valuestring, <span class="string">&quot;metadata-update&quot;</span>) == <span class="number">0</span>)</span><br><span class="line">                    &#123;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">strcmp</span>(event-&gt;valuestring, <span class="string">&quot;file-loaded&quot;</span>) == <span class="number">0</span>)</span><br><span class="line">                    &#123;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">strcmp</span>(event-&gt;valuestring, <span class="string">&quot;property-change&quot;</span>) == <span class="number">0</span> &amp;&amp; (cJSON_GetObjectItem(root, <span class="string">&quot;id&quot;</span>)-&gt;valueint == <span class="number">1</span>))</span><br><span class="line">                    &#123;</span><br><span class="line">                        percent = cJSON_GetObjectItem(root, <span class="string">&quot;data&quot;</span>);</span><br><span class="line">                        lv_label_set_text_fmt(time_obj, <span class="string">&quot;%02d:%02d&quot;</span>, (<span class="type">int</span>)percent-&gt;valuedouble / <span class="number">60</span>, (<span class="type">int</span>)percent-&gt;valuedouble % <span class="number">60</span>);</span><br><span class="line">                        LOG_D(<span class="string">&quot;time pos:%d\n&quot;</span>, (<span class="type">int</span>)percent-&gt;valuedouble);</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">strcmp</span>(event-&gt;valuestring, <span class="string">&quot;property-change&quot;</span>) == <span class="number">0</span> &amp;&amp; (cJSON_GetObjectItem(root, <span class="string">&quot;id&quot;</span>)-&gt;valueint == <span class="number">2</span>))</span><br><span class="line">                    &#123;</span><br><span class="line">                        percent = cJSON_GetObjectItem(root, <span class="string">&quot;data&quot;</span>);</span><br><span class="line">                        lv_slider_set_value(slider_obj, (<span class="type">int</span>)percent-&gt;valuedouble, LV_ANIM_ON);</span><br><span class="line">                        LOG_D(<span class="string">&quot;percent pos:%d\n&quot;</span>, (<span class="type">int</span>)percent-&gt;valuedouble);</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">strcmp</span>(event-&gt;valuestring, <span class="string">&quot;end-file&quot;</span>) == <span class="number">0</span>)</span><br><span class="line">                    &#123;</span><br><span class="line">                        LOG_D(<span class="string">&quot;end-file\n&quot;</span>);</span><br><span class="line">                        is_loaded = <span class="literal">true</span>;</span><br><span class="line">                        _lv_demo_music_album_next(<span class="literal">true</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">strcmp</span>(event-&gt;valuestring, <span class="string">&quot;playback-restart&quot;</span>) == <span class="number">0</span>)</span><br><span class="line">                    &#123;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">strcmp</span>(event-&gt;valuestring, <span class="string">&quot;idle&quot;</span>) == <span class="number">0</span>)</span><br><span class="line">                    &#123;</span><br><span class="line">                        LOG_D(<span class="string">&quot;idle\n&quot;</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="built_in">free</span>(root);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//_msleep(250);</span></span><br><span class="line">    &#125;</span><br><span class="line">    pthread_exit(<span class="literal">NULL</span>);</span><br><span class="line">    LOG_D(<span class="string">&quot;pthread exit:\n&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<pre><code> 这里通信都是采用JSON格式，使用了cJSON来解析送来的数据
</code></pre>
</li>
<li>这些实现完成后，音乐播放器也就有了灵魂，就是一个真正的音乐播放器了，几乎支持所有音乐格式，我测试的常见的有wav,mp3,flac,ape,dts等</li>
<li><video controls="" src="/2021/09/19/Linux/动手让LVGL8-Music-Demo音乐响起来/video.mp4">
</video></li>
</ol>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>LVGL</tag>
        <tag>Neza-D1</tag>
        <tag>音乐</tag>
      </tags>
  </entry>
  <entry>
    <title>STM32F1上使用CherryUSB框架做HID通信</title>
    <url>/pages/8d40/</url>
    <content><![CDATA[<h3 id="CherryUSB框架"><a href="#CherryUSB框架" class="headerlink" title="CherryUSB框架"></a>CherryUSB框架</h3><h3 id="USB-CDC-功能实现"><a href="#USB-CDC-功能实现" class="headerlink" title="USB CDC 功能实现"></a>USB CDC 功能实现</h3><h3 id="USB-HID-功能实现"><a href="#USB-HID-功能实现" class="headerlink" title="USB HID 功能实现"></a>USB HID 功能实现</h3><p><code>如果HID设备能正常枚举，但是无法打开设备进行通信，请检查HID报告描述符! 下边例子会在WIN10的电脑上枚举出一个&lt;符合HID标准的条形码标记读取器&gt;</code></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;main.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;usbd_core.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;usbd_hid.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*!&lt; hidraw in endpoint */</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> HIDRAW_IN_EP 0x81</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> HIDRAW_IN_EP_SIZE 64</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> HIDRAW_IN_INTERVAL 10</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*!&lt; hidraw out endpoint */</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> HIDRAW_OUT_EP 0x02</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> HIDRAW_OUT_EP_SIZE 64</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> HIDRAW_OUT_EP_INTERVAL 10</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> USBD_VID 0x0480</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> USBD_PID 0x5850</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> USBD_MAX_POWER 100</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> USBD_LANGID_STRING 1033</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*!&lt; config descriptor size */</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> USB_HID_CONFIG_DESC_SIZ (9 + 9 + 9 + 7 + 7)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*!&lt; custom hid report descriptor size */</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> HID_CUSTOM_REPORT_DESC_SIZE 33</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*!&lt; global descriptor */</span></span><br><span class="line"><span class="type">static</span> <span class="type">const</span> <span class="type">uint8_t</span> hid_descriptor[] = &#123;USB_DEVICE_DESCRIPTOR_INIT(USB_2_0, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, USBD_VID, USBD_PID, <span class="number">0x0002</span>, <span class="number">0x01</span>),</span><br><span class="line">                                         USB_CONFIG_DESCRIPTOR_INIT(USB_HID_CONFIG_DESC_SIZ, <span class="number">0x01</span>, <span class="number">0x01</span>, USB_CONFIG_BUS_POWERED, USBD_MAX_POWER),</span><br><span class="line">                                         <span class="comment">/************** Descriptor of Custom interface *****************/</span></span><br><span class="line">                                         <span class="number">0x09</span>,                          <span class="comment">/* bLength: Interface Descriptor size */</span></span><br><span class="line">                                         USB_DESCRIPTOR_TYPE_INTERFACE, <span class="comment">/* bDescriptorType: Interface descriptor type */</span></span><br><span class="line">                                         <span class="number">0x00</span>,                          <span class="comment">/* bInterfaceNumber: Number of Interface */</span></span><br><span class="line">                                         <span class="number">0x00</span>,                          <span class="comment">/* bAlternateSetting: Alternate setting */</span></span><br><span class="line">                                         <span class="number">0x02</span>,                          <span class="comment">/* bNumEndpoints */</span></span><br><span class="line">                                         <span class="number">0x03</span>,                          <span class="comment">/* bInterfaceClass: HID */</span></span><br><span class="line">                                         <span class="number">0x00</span>,                          <span class="comment">/* bInterfaceSubClass : 1=BOOT, 0=no boot */</span></span><br><span class="line">                                         <span class="number">0x00</span>,                          <span class="comment">/* nInterfaceProtocol : 0=none, 1=keyboard, 2=mouse */</span></span><br><span class="line">                                         <span class="number">0</span>,                             <span class="comment">/* iInterface: Index of string descriptor */</span></span><br><span class="line">                                         <span class="comment">/******************** Descriptor of Custom HID ********************/</span></span><br><span class="line">                                         <span class="number">0x09</span>,                        <span class="comment">/* bLength: HID Descriptor size */</span></span><br><span class="line">                                         HID_DESCRIPTOR_TYPE_HID,     <span class="comment">/* bDescriptorType: HID */</span></span><br><span class="line">                                         <span class="number">0x11</span>,                        <span class="comment">/* bcdHID: HID Class Spec release number */</span></span><br><span class="line">                                         <span class="number">0x01</span>, <span class="number">0x00</span>,                  <span class="comment">/* bCountryCode: Hardware target country */</span></span><br><span class="line">                                         <span class="number">0x01</span>,                        <span class="comment">/* bNumDescriptors: Number of HID class descriptors to follow */</span></span><br><span class="line">                                         <span class="number">0x22</span>,                        <span class="comment">/* bDescriptorType */</span></span><br><span class="line">                                         HID_CUSTOM_REPORT_DESC_SIZE, <span class="comment">/* wItemLength: Total length of Report descriptor */</span></span><br><span class="line">                                         <span class="number">0x00</span>,</span><br><span class="line">                                         <span class="comment">/******************** Descriptor of Custom in endpoint ********************/</span></span><br><span class="line">                                         <span class="number">0x07</span>,                         <span class="comment">/* bLength: Endpoint Descriptor size */</span></span><br><span class="line">                                         USB_DESCRIPTOR_TYPE_ENDPOINT, <span class="comment">/* bDescriptorType: */</span></span><br><span class="line">                                         HIDRAW_IN_EP,                 <span class="comment">/* bEndpointAddress: Endpoint Address (IN) */</span></span><br><span class="line">                                         <span class="number">0x03</span>,                         <span class="comment">/* bmAttributes: Interrupt endpoint */</span></span><br><span class="line">                                         WBVAL(HIDRAW_IN_EP_SIZE),     <span class="comment">/* wMaxPacketSize: 4 Byte max */</span></span><br><span class="line">                                         HIDRAW_IN_INTERVAL,           <span class="comment">/* bInterval: Polling Interval */</span></span><br><span class="line">                                         <span class="comment">/******************** Descriptor of Custom out endpoint ********************/</span></span><br><span class="line">                                         <span class="number">0x07</span>,                         <span class="comment">/* bLength: Endpoint Descriptor size */</span></span><br><span class="line">                                         USB_DESCRIPTOR_TYPE_ENDPOINT, <span class="comment">/* bDescriptorType: */</span></span><br><span class="line">                                         HIDRAW_OUT_EP,                <span class="comment">/* bEndpointAddress: Endpoint Address (IN) */</span></span><br><span class="line">                                         <span class="number">0x03</span>,                         <span class="comment">/* bmAttributes: Interrupt endpoint */</span></span><br><span class="line">                                         WBVAL(HIDRAW_OUT_EP_SIZE),    <span class="comment">/* wMaxPacketSize: 4 Byte max */</span></span><br><span class="line">                                         HIDRAW_OUT_EP_INTERVAL,       <span class="comment">/* bInterval: Polling Interval */</span></span><br><span class="line">                                         <span class="comment">/* 73 */</span></span><br><span class="line">                                         <span class="comment">/*</span></span><br><span class="line"><span class="comment">                                          * string0 descriptor</span></span><br><span class="line"><span class="comment">                                          */</span></span><br><span class="line">                                         USB_LANGID_INIT(USBD_LANGID_STRING),</span><br><span class="line">                                         <span class="comment">/*</span></span><br><span class="line"><span class="comment">                                          * string1 descriptor</span></span><br><span class="line"><span class="comment">                                          */</span></span><br><span class="line">                                         <span class="number">0x1a</span>,                       <span class="comment">/* bLength */</span></span><br><span class="line">                                         USB_DESCRIPTOR_TYPE_STRING, <span class="comment">/* bDescriptorType */</span></span><br><span class="line">                                         <span class="string">&#x27;S&#x27;</span>, <span class="number">0x00</span>,                  <span class="comment">/* wcChar0 */</span></span><br><span class="line">                                         <span class="string">&#x27;O&#x27;</span>, <span class="number">0x00</span>,                  <span class="comment">/* wcChar1 */</span></span><br><span class="line">                                         <span class="string">&#x27;N&#x27;</span>, <span class="number">0x00</span>,                  <span class="comment">/* wcChar2 */</span></span><br><span class="line">                                         <span class="string">&#x27;A&#x27;</span>, <span class="number">0x00</span>,                  <span class="comment">/* wcChar3 */</span></span><br><span class="line">                                         <span class="string">&#x27;V&#x27;</span>, <span class="number">0x00</span>,                  <span class="comment">/* wcChar4 */</span></span><br><span class="line">                                         <span class="string">&#x27;O&#x27;</span>, <span class="number">0x00</span>,                  <span class="comment">/* wcChar5 */</span></span><br><span class="line">                                         <span class="string">&#x27;X&#x27;</span>, <span class="number">0x00</span>,                  <span class="comment">/* wcChar6 */</span></span><br><span class="line">                                         <span class="string">&#x27; &#x27;</span>, <span class="number">0x00</span>,                  <span class="comment">/* wcChar7 */</span></span><br><span class="line">                                         <span class="string">&#x27;M&#x27;</span>, <span class="number">0x00</span>,                  <span class="comment">/* wcChar8 */</span></span><br><span class="line">                                         <span class="string">&#x27;S&#x27;</span>, <span class="number">0x00</span>,                  <span class="comment">/* wcChar9 */</span></span><br><span class="line">                                         <span class="string">&#x27;C&#x27;</span>, <span class="number">0x00</span>,                  <span class="comment">/* wcChar10 */</span></span><br><span class="line">                                         <span class="string">&#x27;S&#x27;</span>, <span class="number">0x00</span>,                  <span class="comment">/* wcChar11 */</span></span><br><span class="line">                                         <span class="comment">/*</span></span><br><span class="line"><span class="comment">                                          * string2 descriptor</span></span><br><span class="line"><span class="comment">                                          */</span></span><br><span class="line">                                         <span class="number">0x24</span>,                       <span class="comment">/* bLength */</span></span><br><span class="line">                                         USB_DESCRIPTOR_TYPE_STRING, <span class="comment">/* bDescriptorType */</span></span><br><span class="line">                                         <span class="string">&#x27;A&#x27;</span>, <span class="number">0x00</span>,                  <span class="comment">/* wcChar0 */</span></span><br><span class="line">                                         <span class="string">&#x27;T&#x27;</span>, <span class="number">0x00</span>,                  <span class="comment">/* wcChar1 */</span></span><br><span class="line">                                         <span class="string">&#x27;L&#x27;</span>, <span class="number">0x00</span>,                  <span class="comment">/* wcChar2 */</span></span><br><span class="line">                                         <span class="string">&#x27;A&#x27;</span>, <span class="number">0x00</span>,                  <span class="comment">/* wcChar3 */</span></span><br><span class="line">                                         <span class="string">&#x27;S&#x27;</span>, <span class="number">0x00</span>,                  <span class="comment">/* wcChar4 */</span></span><br><span class="line">                                         <span class="string">&#x27; &#x27;</span>, <span class="number">0x00</span>,                  <span class="comment">/* wcChar13 */</span></span><br><span class="line">                                         <span class="string">&#x27;V&#x27;</span>, <span class="number">0x00</span>,                  <span class="comment">/* wcChar14 */</span></span><br><span class="line">                                         <span class="string">&#x27;O&#x27;</span>, <span class="number">0x00</span>,                  <span class="comment">/* wcChar15 */</span></span><br><span class="line">                                         <span class="string">&#x27;L&#x27;</span>, <span class="number">0x00</span>,                  <span class="comment">/* wcChar16 */</span></span><br><span class="line">                                         <span class="string">&#x27;T&#x27;</span>, <span class="number">0x00</span>,                  <span class="comment">/* wcChar17 */</span></span><br><span class="line">                                         <span class="string">&#x27;A&#x27;</span>, <span class="number">0x00</span>,                  <span class="comment">/* wcChar18 */</span></span><br><span class="line">                                         <span class="string">&#x27;G&#x27;</span>, <span class="number">0x00</span>,                  <span class="comment">/* wcChar19 */</span></span><br><span class="line">                                         <span class="string">&#x27;E&#x27;</span>, <span class="number">0x00</span>,                  <span class="comment">/* wcChar20 */</span></span><br><span class="line">                                         <span class="string">&#x27; &#x27;</span>, <span class="number">0x00</span>,                  <span class="comment">/* wcChar21 */</span></span><br><span class="line">                                         <span class="string">&#x27;R&#x27;</span>, <span class="number">0x00</span>,                  <span class="comment">/* wcChar22 */</span></span><br><span class="line">                                         <span class="string">&#x27;E&#x27;</span>, <span class="number">0x00</span>,                  <span class="comment">/* wcChar23 */</span></span><br><span class="line">                                         <span class="string">&#x27;C&#x27;</span>, <span class="number">0x00</span>,                  <span class="comment">/* wcChar24 */</span></span><br><span class="line">                                         <span class="comment">/*</span></span><br><span class="line"><span class="comment">                                          * string3 descriptor</span></span><br><span class="line"><span class="comment">                                          */</span></span><br><span class="line">                                         <span class="number">0x16</span>,                       <span class="comment">/* bLength */</span></span><br><span class="line">                                         USB_DESCRIPTOR_TYPE_STRING, <span class="comment">/* bDescriptorType */</span></span><br><span class="line">                                         <span class="string">&#x27;2&#x27;</span>, <span class="number">0x00</span>,                  <span class="comment">/* wcChar0 */</span></span><br><span class="line">                                         <span class="string">&#x27;0&#x27;</span>, <span class="number">0x00</span>,                  <span class="comment">/* wcChar1 */</span></span><br><span class="line">                                         <span class="string">&#x27;2&#x27;</span>, <span class="number">0x00</span>,                  <span class="comment">/* wcChar2 */</span></span><br><span class="line">                                         <span class="string">&#x27;3&#x27;</span>, <span class="number">0x00</span>,                  <span class="comment">/* wcChar3 */</span></span><br><span class="line">                                         <span class="string">&#x27;/&#x27;</span>, <span class="number">0x00</span>,                  <span class="comment">/* wcChar3 */</span></span><br><span class="line">                                         <span class="string">&#x27;1&#x27;</span>, <span class="number">0x00</span>,                  <span class="comment">/* wcChar4 */</span></span><br><span class="line">                                         <span class="string">&#x27;2&#x27;</span>, <span class="number">0x00</span>,                  <span class="comment">/* wcChar5 */</span></span><br><span class="line">                                         <span class="string">&#x27;/&#x27;</span>, <span class="number">0x00</span>,                  <span class="comment">/* wcChar6 */</span></span><br><span class="line">                                         <span class="string">&#x27;1&#x27;</span>, <span class="number">0x00</span>,                  <span class="comment">/* wcChar7 */</span></span><br><span class="line">                                         <span class="string">&#x27;5&#x27;</span>, <span class="number">0x00</span>,                  <span class="comment">/* wcChar8 */</span></span><br><span class="line"><span class="meta">#<span class="keyword">ifdef</span> CONFIG_USB_HS</span></span><br><span class="line">                                         <span class="comment">/*</span></span><br><span class="line"><span class="comment">                                          * device qualifier descriptor</span></span><br><span class="line"><span class="comment">                                          */</span></span><br><span class="line">                                         <span class="number">0x0a</span>, USB_DESCRIPTOR_TYPE_DEVICE_QUALIFIER, <span class="number">0x00</span>, <span class="number">0x02</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x40</span>, <span class="number">0x01</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line">                                         <span class="number">0x00</span>&#125;;</span><br><span class="line"><span class="comment">/*!&lt; custom hid report descriptor */</span></span><br><span class="line"><span class="type">static</span> <span class="type">const</span> <span class="type">uint8_t</span> hid_custom_report_desc[HID_CUSTOM_REPORT_DESC_SIZE] = &#123;</span><br><span class="line">    <span class="comment">/* USER CODE BEGIN 0 */</span></span><br><span class="line">    <span class="number">0x05</span>, <span class="number">0x8c</span>, <span class="comment">/* USAGE_PAGE (Vendor Defined Page 1) */</span></span><br><span class="line">    <span class="number">0x09</span>, <span class="number">0x01</span>, <span class="comment">/* USAGE (Vendor Usage 1) */</span></span><br><span class="line">    <span class="number">0xa1</span>, <span class="number">0x01</span>, <span class="comment">/* COLLECTION (Application) */</span></span><br><span class="line">                <span class="comment">// &lt;___________________________________________________&gt;</span></span><br><span class="line">    <span class="comment">// 0x85, 0x02,       /*   REPORT ID (0x02) */</span></span><br><span class="line">    <span class="number">0x09</span>, <span class="number">0x03</span>,       <span class="comment">/*   USAGE (Vendor Usage 1) */</span></span><br><span class="line">    <span class="number">0x15</span>, <span class="number">0x00</span>,       <span class="comment">/*   LOGICAL_MINIMUM (0) */</span></span><br><span class="line">    <span class="number">0x26</span>, <span class="number">0xff</span>, <span class="number">0x00</span>, <span class="comment">/*   LOGICAL_MAXIMUM (255) */</span></span><br><span class="line">    <span class="number">0x75</span>, <span class="number">0x08</span>,       <span class="comment">/*   REPORT_SIZE (8) */</span></span><br><span class="line">    <span class="number">0x95</span>, <span class="number">0x40</span>,       <span class="comment">/*   REPORT_COUNT (64) */</span></span><br><span class="line">    <span class="number">0x81</span>, <span class="number">0x02</span>,       <span class="comment">/*   INPUT (Data,Var,Abs) */</span></span><br><span class="line">                      <span class="comment">//&lt;___________________________________________________&gt;</span></span><br><span class="line">    <span class="comment">// 0x85, 0x02,       /*   REPORT ID (0x02) */</span></span><br><span class="line">    <span class="number">0x09</span>, <span class="number">0x04</span>,       <span class="comment">/*   USAGE (Vendor Usage 1) */</span></span><br><span class="line">    <span class="number">0x15</span>, <span class="number">0x00</span>,       <span class="comment">/*   LOGICAL_MINIMUM (0) */</span></span><br><span class="line">    <span class="number">0x26</span>, <span class="number">0xff</span>, <span class="number">0x00</span>, <span class="comment">/*   LOGICAL_MAXIMUM (255) */</span></span><br><span class="line">    <span class="number">0x75</span>, <span class="number">0x08</span>,       <span class="comment">/*   REPORT_SIZE (8) */</span></span><br><span class="line">    <span class="number">0x95</span>, <span class="number">0x40</span>,       <span class="comment">/*   REPORT_COUNT (64) */</span></span><br><span class="line">    <span class="number">0x91</span>, <span class="number">0x02</span>,       <span class="comment">/*   OUTPUT (Data,Var,Abs) */</span></span><br><span class="line">    <span class="comment">/* USER CODE END 0 */</span></span><br><span class="line">    <span class="number">0xC0</span> <span class="comment">/*     END_COLLECTION	             */</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">USB_NOCACHE_RAM_SECTION USB_MEM_ALIGNX <span class="type">uint8_t</span> read_buffer[HIDRAW_OUT_EP_SIZE];</span><br><span class="line">USB_NOCACHE_RAM_SECTION USB_MEM_ALIGNX <span class="type">uint8_t</span> send_buffer[HIDRAW_IN_EP_SIZE];</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> HID_STATE_IDLE 0</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> HID_STATE_BUSY 1</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*!&lt; hid state ! Data can be sent only when state is idle  */</span></span><br><span class="line"><span class="type">static</span> <span class="keyword">volatile</span> <span class="type">uint8_t</span> custom_state;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">usbd_event_handler</span><span class="params">(<span class="type">uint8_t</span> event)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">switch</span> (event)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">case</span> USBD_EVENT_RESET:</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> USBD_EVENT_CONNECTED:</span><br><span class="line">        USB_LOG_RAW(<span class="string">&quot;Host Connected\n&quot;</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> USBD_EVENT_DISCONNECTED:</span><br><span class="line">        USB_LOG_RAW(<span class="string">&quot;Host DisConnected\n&quot;</span>);</span><br><span class="line">        dev_rec.start = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> USBD_EVENT_RESUME:</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> USBD_EVENT_SUSPEND:</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> USBD_EVENT_CONFIGURED:</span><br><span class="line">        <span class="comment">/* setup first out ep read transfer */</span></span><br><span class="line">        usbd_ep_start_read(HIDRAW_OUT_EP, read_buffer, HIDRAW_OUT_EP_SIZE);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> USBD_EVENT_SET_REMOTE_WAKEUP:</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> USBD_EVENT_CLR_REMOTE_WAKEUP:</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="type">void</span> <span class="title function_">usbd_hid_custom_in_callback</span><span class="params">(<span class="type">uint8_t</span> ep, <span class="type">uint32_t</span> nbytes)</span></span><br><span class="line">&#123;</span><br><span class="line">    USB_LOG_RAW(<span class="string">&quot;actual in len:%d\r\n&quot;</span>, nbytes);</span><br><span class="line">    custom_state = HID_STATE_IDLE;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 收到的数据中不包含Report ID，是实际长度 即64字节</span></span><br><span class="line"><span class="type">static</span> <span class="type">void</span> <span class="title function_">usbd_hid_custom_out_callback</span><span class="params">(<span class="type">uint8_t</span> ep, <span class="type">uint32_t</span> nbytes)</span></span><br><span class="line">&#123;</span><br><span class="line">    USB_LOG_RAW(<span class="string">&quot;actual out len:%d\r\n&quot;</span>, nbytes);</span><br><span class="line">    usbd_ep_start_read(HIDRAW_OUT_EP, read_buffer, <span class="number">64</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">uint8_t</span> i = <span class="number">0</span>; i &lt; <span class="number">64</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        rt_kprintf(<span class="string">&quot;%02x &quot;</span>, read_buffer[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    rt_kprintf(<span class="string">&quot;\r\n&quot;</span>);</span><br><span class="line">    dev_rec.cmd = read_buffer[<span class="number">1</span>];</span><br><span class="line">    <span class="keyword">switch</span> (dev_rec.cmd)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">case</span> SET_RELAY_VALUE:</span><br><span class="line">        set_relay(read_buffer[<span class="number">2</span>]);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> GET_INFO_INDS:</span><br><span class="line">    <span class="keyword">case</span> SET_AC_VOLTAGE:</span><br><span class="line">    <span class="keyword">case</span> SET_DC_VOLTAGE:</span><br><span class="line">    <span class="keyword">case</span> GET_MES_VALUE: <span class="comment">// 读取测量值</span></span><br><span class="line">                        <span class="comment">// char *cmd = &quot;:READ?\r\n&quot;;</span></span><br><span class="line">                        <span class="comment">// uart_send_data(cmd, strlen(cmd));</span></span><br><span class="line">                        <span class="comment">// break;</span></span><br><span class="line">        uart_send_data(&amp;read_buffer[<span class="number">2</span>], read_buffer[<span class="number">0</span>]);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> SET_PARAM_VALUE: <span class="comment">// 设置参数</span></span><br><span class="line">        dev_rec.period = read_buffer[<span class="number">2</span>] * <span class="number">256</span> + read_buffer[<span class="number">3</span>];</span><br><span class="line">        dev_rec.ch = read_buffer[<span class="number">4</span>];</span><br><span class="line">        dev_rec.cmd = <span class="number">0</span>;</span><br><span class="line">        <span class="comment">// timer_set_timeout(dev_rec.period);</span></span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> SET_START_REC: <span class="comment">// 开始或者停止采集</span></span><br><span class="line">    <span class="keyword">case</span> SET_STOP_REC:</span><br><span class="line">        dev_rec.start = read_buffer[<span class="number">2</span>];</span><br><span class="line">        dev_rec.start ? timer_set_timeout(dev_rec.period) : timer_stop();</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// rt_kprintf(&quot;\n&quot;);</span></span><br><span class="line">    <span class="comment">// usbd_ep_start_write(HIDRAW_IN_EP, read_buffer, nbytes);</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="class"><span class="keyword">struct</span> <span class="title">usbd_endpoint</span> <span class="title">custom_in_ep</span> =</span> &#123;.ep_cb = usbd_hid_custom_in_callback, .ep_addr = HIDRAW_IN_EP&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="class"><span class="keyword">struct</span> <span class="title">usbd_endpoint</span> <span class="title">custom_out_ep</span> =</span> &#123;.ep_cb = usbd_hid_custom_out_callback, .ep_addr = HIDRAW_OUT_EP&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* function ------------------------------------------------------------------*/</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @brief            hid custom init</span></span><br><span class="line"><span class="comment"> * @pre              none</span></span><br><span class="line"><span class="comment"> * @param[in]        none</span></span><br><span class="line"><span class="comment"> * @retval           none</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">usbd_interface</span> <span class="title">intf0</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">hid_custom_init</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    usbd_desc_register(hid_descriptor);</span><br><span class="line">    usbd_add_interface(usbd_hid_init_intf(&amp;intf0, hid_custom_report_desc, HID_CUSTOM_REPORT_DESC_SIZE));</span><br><span class="line">    usbd_add_endpoint(&amp;custom_in_ep);</span><br><span class="line">    usbd_add_endpoint(&amp;custom_out_ep);</span><br><span class="line"></span><br><span class="line">    usbd_initialize();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 发送时 会自动把id放在最前边 默认是0 上位机接收的数据长度是65</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">hid_send_data</span><span class="params">(<span class="type">uint8_t</span> *data, <span class="type">uint8_t</span> len)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">uint8_t</span> buf[<span class="number">64</span>];</span><br><span class="line">    <span class="built_in">memset</span>(buf, <span class="number">0</span>, len);</span><br><span class="line">    <span class="built_in">memcpy</span>(buf, data, len);</span><br><span class="line">    <span class="comment">// for (uint8_t i = 0; i &lt; len; i++)</span></span><br><span class="line">    <span class="comment">// &#123;</span></span><br><span class="line">    <span class="comment">//     rt_kprintf(&quot;%02x &quot;, data[i]);</span></span><br><span class="line">    <span class="comment">// &#125;</span></span><br><span class="line">    <span class="comment">// rt_kprintf(&quot;\r\n&quot;);</span></span><br><span class="line">    <span class="type">int</span> ret = usbd_ep_start_write(HIDRAW_IN_EP, buf, <span class="number">64</span>);</span><br><span class="line">    <span class="keyword">if</span> (ret &lt; <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// MSH_CMD_EXPORT(hid_custom_test, start hid_custom_test);</span></span><br></pre></td></tr></table></figure>
<h3 id="原理图"><a href="#原理图" class="headerlink" title="原理图"></a>原理图</h3><p><a href="DMM_VOLTAGE_MES_F103.pdf">DMM_VOLTAGE_MES_F103.pdf</a></p>
]]></content>
      <categories>
        <category>RT-Thread</category>
      </categories>
      <tags>
        <tag>STM32</tag>
        <tag>RTT</tag>
        <tag>HID</tag>
        <tag>CherryUSB</tag>
      </tags>
  </entry>
  <entry>
    <title>全志F1C上RTT音频驱动调试</title>
    <url>/pages/c622/</url>
    <content><![CDATA[<h3 id="I2S调试"><a href="#I2S调试" class="headerlink" title="I2S调试"></a>I2S调试</h3><ul>
<li>MCLK从内部PLL分频得来 无法自得到精准的24.576MHZ和22.5792MHZ 我计算最相近的频率是24.571MHZ和22.571MHZ</li>
<li>I2S 最高支持192K 32Bit的采样率</li>
<li></li>
</ul>
<h3 id="内部CODE调试"><a href="#内部CODE调试" class="headerlink" title="内部CODE调试"></a>内部CODE调试</h3>]]></content>
      <tags>
        <tag>RTT</tag>
        <tag>F1C</tag>
        <tag>音频驱动框架</tag>
      </tags>
  </entry>
  <entry>
    <title>DSP-EQ系数计算工具</title>
    <url>/pages/ba62/</url>
    <content><![CDATA[<p>简单写了一下，系数计算准确无误，计算出的系数是用浮点数表示的，需要按照各个平台转换成整数格式，具体得参考DSP芯片手册，图上只是2段，可以添加更多，常见的如sta311b 有8个通道，每通道有10段EQ。tas5805 2个声道，每声道有15段EQ。</p>
<img src="/pages/ba62/2023-02-21_085023.png" class="" title="img">

<p>STA311B:</p>
<img src="/pages/ba62/2023-02-21_090847.png" class="" title="img">

<p>APWorkbench:</p>
<img src="/pages/ba62/2023-02-03_161351.png" class="" title="img">

<p>参考资料：</p>
<p><a href="DSP-EQ%E7%B3%BB%E6%95%B0%E8%AE%A1%E7%AE%97%E5%B7%A5%E5%85%B7/sta311b.pdf">sta311b.pdf</a>  辅助开发工具是APWorkBench 可免费下载</p>
<p><a href="DSP-EQ%E7%B3%BB%E6%95%B0%E8%AE%A1%E7%AE%97%E5%B7%A5%E5%85%B7/tas5805m.pdf">tas5805m.pdf</a> 辅助开发工具是TI PPC3  需要公司邮箱申请</p>
<p><a href="DSP-EQ%E7%B3%BB%E6%95%B0%E8%AE%A1%E7%AE%97%E5%B7%A5%E5%85%B7/TIBQ.exe">TIBQ软件</a></p>
<p><a href="DSP-EQ%E7%B3%BB%E6%95%B0%E8%AE%A1%E7%AE%97%E5%B7%A5%E5%85%B7/TLV320AIC3xxx%E6%BB%A4%E6%B3%A2%E5%99%A8%E7%9A%84%E8%AE%BE%E7%BD%AE%E4%B8%8E%E5%AE%9E%E6%97%B6%E8%B0%83%E8%8A%82.pdf">TLV320AIC3xxx滤波器的设置与实时调节.pdf</a></p>
]]></content>
      <categories>
        <category>SoftWare</category>
      </categories>
      <tags>
        <tag>C#</tag>
        <tag>EQ</tag>
        <tag>DSP</tag>
        <tag>Coefficient</tag>
      </tags>
  </entry>
  <entry>
    <title>基于LVGL-8编写的小软件-1</title>
    <url>/pages/50de/</url>
    <content><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p><code>之前一直是用C#在Windows平台编写软件，这次整个不一样的，使用一个嵌入式非常流行的GUI框架 </code>LVGL<code>来编写，其中用到的库有</code>pthread<code>,</code>libconfig<code>,</code>serial_lite<code>,</code>freetype<code> 这几个库都是跨平台的，用的是</code>C<code>或者</code>C++<code>编写，所以可以运行于任何平台</code></p>
<h3 id="相关库"><a href="#相关库" class="headerlink" title="相关库"></a>相关库</h3><p><a href="https://github.com/lvgl/lvgl">lvgl</a>,   <a href="https://www.freetype.org/">freetype</a>,  <a href="https://github.com/hyperrealm/libconfig">libconfig</a>,   <a href="https://github.com/wjwwood/serial">serial_lite</a></p>
<img src="/pages/50de/2022-09-22_085346.png" class="" title="img">

<img src="/pages/50de/2022-09-22_085648.png" class="" title="img">

<h3 id="软件功能"><a href="#软件功能" class="headerlink" title="软件功能"></a>软件功能</h3><p>如果有购买SNAPAV 70Mini 型号的功放，可以下载此软件进行控制，支持音量调节，信号源切换等操作</p>
<h3 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h3><p><em><strong>这里给出配置文件，支持多语言,支持更换字体</strong></em></p>
<pre><code><figure class="highlight jboss-cli"><table><tr><td class="code"><pre><span class="line"><span class="comment">#语言配置</span></span><br><span class="line">lang = <span class="string">&quot;zh-CN&quot;</span>;</span><br><span class="line"><span class="comment">#font = &quot;C:\WINDOWS\FONTS\simkai.ttf&quot;;</span></span><br><span class="line">font = <span class="string">&quot;yayuan.ttf&quot;</span>;</span><br><span class="line"><span class="comment">#中文</span></span><br><span class="line">zh-CN = &#123;</span><br><span class="line">    label_<span class="keyword">connect</span> = <span class="string">&quot;点击连接&quot;</span>;</span><br><span class="line">    label_disconnect = <span class="string">&quot;点击断开&quot;</span>;</span><br><span class="line">    label_<span class="keyword">clear</span> = <span class="string">&quot;清空&quot;</span>;</span><br><span class="line">    label_port = <span class="string">&quot;通信端口&quot;</span>;</span><br><span class="line">    label_btn = [<span class="string">&quot;电源打开&quot;</span>,<span class="string">&quot;电源关闭&quot;</span>,<span class="string">&quot;输出打开&quot;</span>,<span class="string">&quot;输出关闭&quot;</span>,<span class="string">&quot;平衡输入&quot;</span>,<span class="string">&quot;耳机输入&quot;</span>,<span class="string">&quot;RCA 输入&quot;</span>,<span class="string">&quot;混合输入&quot;</span>,<span class="string">&quot;信号触发&quot;</span>,<span class="string">&quot;音量最大&quot;</span>,<span class="string">&quot;音量增加&quot;</span>,<span class="string">&quot;音量中间&quot;</span>,<span class="string">&quot;音量减小&quot;</span>,<span class="string">&quot;音量最小&quot;</span>,<span class="string">&quot;功放静音&quot;</span>,<span class="string">&quot;音量状态&quot;</span>,<span class="string">&quot;电源状态&quot;</span>,<span class="string">&quot;系统版本&quot;</span>,<span class="string">&quot;  恢复设置到出厂状态  &quot;</span>];</span><br><span class="line">    tips_1 = <span class="string">&quot;端口未打开!&quot;</span>;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">#英文</span></span><br><span class="line">en-US = &#123;</span><br><span class="line">    label_<span class="keyword">connect</span> = <span class="string">&quot;Connect&quot;</span>;</span><br><span class="line">    label_disconnect = <span class="string">&quot;Disconnect&quot;</span>;</span><br><span class="line">    label_<span class="keyword">clear</span> = <span class="string">&quot;Clean&quot;</span>;</span><br><span class="line">    label_port = <span class="string">&quot;Port Select&quot;</span>;</span><br><span class="line">    label_btn = [<span class="string">&quot;Power ON&quot;</span>,<span class="string">&quot;Power OFF&quot;</span>,<span class="string">&quot;Output ON&quot;</span>,<span class="string">&quot;Output OFF&quot;</span>,<span class="string">&quot;Blance In&quot;</span>,<span class="string">&quot;3.5mm In&quot;</span>,<span class="string">&quot;RCA In&quot;</span>,<span class="string">&quot;Mux In&quot;</span>,<span class="string">&quot;Signal Tri&quot;</span>,<span class="string">&quot;VOl Max&quot;</span>,<span class="string">&quot;Vol up&quot;</span>,<span class="string">&quot;Vol Mid&quot;</span>,<span class="string">&quot;Vol down&quot;</span>,<span class="string">&quot;Vol Min&quot;</span>,<span class="string">&quot;Mute&quot;</span>,<span class="string">&quot;Amp Status&quot;</span>,<span class="string">&quot;Pwr Status&quot;</span>,<span class="string">&quot;Sys Version&quot;</span>,<span class="string">&quot;    Factory Reset    &quot;</span>];</span><br><span class="line">    tips_1 = <span class="string">&quot;Serial not opened!&quot;</span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
</code></pre>
<h3 id="功放介绍"><a href="#功放介绍" class="headerlink" title="功放介绍"></a>功放介绍</h3><p style="text-align:center;font-size:24px;"> Episode® 70V Digital Amplifier</p>

<img src="/pages/50de/2519345938.jpg" class="" title="SnapAv 70V 1ch digital.jpg">

<p>Don’t judge a product by its size – the Episode® 70V Digital Amplifier 60W with IR &amp; RS232 may be small, but it packs a punch. This amplifier is perfect for boosting sound and delivering extraordinary audio quality to even the smallest of TVs in restaurants, bars, or small conference rooms, or to maximize the sound of outdoor speakers. This single-channel 70V amplifier is equipped with three inputs and an external 12VDC power supply.</p>
<img src="/pages/50de/2750899588.jpg" class="" title="SnapAv 70V 1ch digital-A.jpg">

<ul>
<li><p>Multiple Inputs</p>
<p>  A total of three inputs enable connection to a variety of sources, including microphone input or other analog sources. An integrated mixer blends all sources by default – perfect for background music and paging applications. It also has the flexibility to select discrete input source. </p>
</li>
<li><p>USB Firmware Update</p>
<p>  With the provided USB port, firmware updates are effortless. Simply load the firmware file provided under the “Support” tab to a USB thumb drive and plug into the USB port on the amp for an automatic update. Note: Please unzip the downloaded file and store under the root folder of the thumb drive. Do not change the file name. </p>
</li>
<li><p>Easy Command Programming </p>
<p>  Defined as a data communication device, this amplifier has the option to be controlled via IR and RS-232. With the control protocol we’ve provided under the “Support” tab, this amplifier delivers the flexibility to function with any IR or serial control system. </p>
</li>
<li><p>LED Indicator</p>
<p>  The rear panel LED meter indicates the amplifier’s operational status. A blinking red LED easily identifies if there is a wiring&#x2F;connectivity fault or a dead short. The amplifier will automatically shut down the output to protect itself from further damage. </p>
</li>
<li><p>Plenum Rated</p>
<p>  This amplifier meets the UL 2043 requirements for both heat and smoke release, and can be installed out-of-sight in the plenum space. The mounting ears, provided, also give it the flexibility to be easily placed in a VersaBox. Locking-type screw terminals ensure a secure connection and simplified install. </p>
</li>
<li><p>Digital Volume Encoder</p>
<p>  A digital spinning dial sends volume up and down commands to the amplifier for exceptional output volume. </p>
</li>
<li><p>Powerful Support</p>
<p>  This versatile, single-channel amplifier supports 70V with a robust 60 Watts of power, handling multiple speakers with ease.</p>
</li>
</ul>
<p><a href="%E5%9F%BA%E4%BA%8ELVGL-8%E7%BC%96%E5%86%99%E7%9A%84%E5%B0%8F%E8%BD%AF%E4%BB%B6-1/ECA-70MINI-60W-Manual_160112_1035.pdf">ECA-70MINI-60W-Manual_160112_1035.pdf</a></p>
<h3 id="软件下载"><a href="#软件下载" class="headerlink" title="软件下载"></a>软件下载</h3><p><a href="70V_Mini_x64.7z">此处是编译好的程序</a></p>
<p><a href="src.7z">工程太大无法上传，此处是源码</a></p>
]]></content>
      <categories>
        <category>SoftWare</category>
      </categories>
      <tags>
        <tag>lvgl</tag>
        <tag>libconfig</tag>
        <tag>pthread</tag>
        <tag>freetype</tag>
        <tag>C</tag>
        <tag>C++</tag>
      </tags>
  </entry>
  <entry>
    <title>C#编写的字体图片取模软件</title>
    <url>/pages/b603/</url>
    <content><![CDATA[<h2 id="基于C-编写的字体，图片取模工具-支持gbk字库，fontawesome图标字体"><a href="#基于C-编写的字体，图片取模工具-支持gbk字库，fontawesome图标字体" class="headerlink" title="基于C#编写的字体，图片取模工具,支持gbk字库，fontawesome图标字体"></a>基于C#编写的字体，图片取模工具,支持gbk字库，fontawesome图标字体</h2><h3 id="编写初衷"><a href="#编写初衷" class="headerlink" title="编写初衷"></a>编写初衷</h3><p>在单片机开发过程中，难免会用到各种字体，图片等资源，如果没有文件系统支持，这时就需要用工具对资源进行取模或转换了，目前网络上工具也是很多，但总是会有功能不满足，或者使用很麻烦，于是就萌生了自己写一个小工具的想法，现在软件功能已经基本满足自己使用了，分享给大家使用，如果使用过程中，有什么问题，请留言告知，我抽空修复一下</p>
<h3 id="支持的功能"><a href="#支持的功能" class="headerlink" title="支持的功能"></a>支持的功能</h3><ul>
<li>支持加载字库文件，支持字体批量取模</li>
<li>支持导出数组，bin,图片功能</li>
<li>支持图标字体取模，可以更换图标字体</li>
<li>支持取模时，旋转，镜像，支持修改前景色，背景色</li>
<li>支持图片批量取模，数组格式可支持8位，16位</li>
<li>支持等宽与非等宽取模，可以混合取模</li>
<li>……</li>
</ul>
<h3 id="界面展示"><a href="#界面展示" class="headerlink" title="界面展示"></a>界面展示</h3><img src="/pages/b603/%E5%8F%96%E6%A8%A1%E8%BD%AF%E4%BB%B6.gif" class="" title="img">
<img src="/pages/b603/2023-01-07_095813.png" class="" title="img">
<img src="/pages/b603/2023-01-07_095822.png" class="" title="img">
<img src="/pages/b603/2023-01-07_095837.png" class="" title="img">
<img src="/pages/b603/2023-01-07_095847.png" class="" title="img">
<img src="/pages/b603/2023-01-07_095917.png" class="" title="img">
<img src="/pages/b603/2023-01-07_095952.png" class="" title="img">
<img src="/pages/b603/2023-01-07_100059.png" class="" title="img">

<h3 id="软件下载"><a href="#软件下载" class="headerlink" title="软件下载"></a>软件下载</h3><p><a href="MosFontTool_Release.7z">MosFontTool_Release</a></p>
]]></content>
      <categories>
        <category>SoftWare</category>
      </categories>
      <tags>
        <tag>C#</tag>
        <tag>software</tag>
        <tag>字体取模</tag>
        <tag>图片取模</tag>
      </tags>
  </entry>
  <entry>
    <title>手工贴片助手</title>
    <url>/pages/9b86/</url>
    <content><![CDATA[<h3 id="开发背景"><a href="#开发背景" class="headerlink" title="开发背景"></a>开发背景</h3><p>一直一来，在开发完新样品做样机的时候，手工贴片非常痛苦，板子简单还好，如果板子复杂且样机数量又多(一般10台以内)，那真是贴的眼疼胳膊酸啊，在贴片过程中最耗费时间的就是在密密麻麻的丝印图上找元件座位号了，所以如果有什么工具能一下子找到并能图形化标注出来位置，那将大大加快贴片的速度，也不用闻那么长时间的锡膏散发出来的有毒气体了。</p>
<h3 id="灵感来源"><a href="#灵感来源" class="headerlink" title="灵感来源"></a>灵感来源</h3><p>之前在用Kicad设计板子的时候，有一款插件不得不提一下，就是InteractiveHtmlBom，这款插件可以生成一个交互式BOM的文件，可以在浏览器里打开，图形化展示出来各个元件位置，手工贴片非常方便</p>
<img src="/pages/9b86/image1.png" class="" title="HtmlBom">
<p>这正是我想要的效果，但是这个插件只适合用在Kicad或者LCEDA里，其它软件使用不了，而且还得是源代码才能生成交互式BOM，只能自己开发了，于是就有了这个软件</p>
<h3 id="实现原理"><a href="#实现原理" class="headerlink" title="实现原理"></a>实现原理</h3><p>由于没有源文件，要实现这种效果，需要有BOM表，Gerber，及坐标文件,这些是工厂批量生产的最基本的东西，都会提供的。<br>原理：根据BOM表获取同一种元件的座位号，再从坐标里件里获取每一个元件的坐标，然后生成每一个元件的gerber绘图语句，最后就是渲染gerber丝印图并在上边标识出来 </p>
<h3 id="Gerber文件解析"><a href="#Gerber文件解析" class="headerlink" title="Gerber文件解析"></a>Gerber文件解析</h3><p>Gerber文件要是自己写，还是比较复杂的，网上已有很多开源的Gerber文件解析的库,就不重复造轮子了，这里使用了GerberVS库，我测试了一下，已经相当完善了，测试了一些产品的gerber 基本没问题。<br><a href="https://github.com/miltonneal54/GerberVS">GerberVS</a></p>
<h3 id="BOM解析"><a href="#BOM解析" class="headerlink" title="BOM解析"></a>BOM解析</h3><p>BOM是excel格式的，这里使用NPOI进行BOM表的读取，还是比较简单的  </p>
<figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">workBook = <span class="keyword">new</span> XSSFWorkbook(tbx_bom.Text);</span><br><span class="line">ISheet sheet = workBook.GetSheetAt(<span class="number">0</span>);<span class="comment">//&quot;PCB 部分&quot;</span></span><br><span class="line"><span class="comment">//计算总行数</span></span><br><span class="line"><span class="built_in">int</span> lastNum = sheet.LastRowNum;</span><br><span class="line">Console.WriteLine(<span class="string">&quot;总行数:&quot;</span> + lastNum);</span><br><span class="line"><span class="comment">//从第1行开始</span></span><br><span class="line"><span class="comment">//Console.WriteLine(sheet.GetRow(3).GetCell(1).StringCellValue);</span></span><br><span class="line">dataGridView1.Rows.Clear();</span><br><span class="line"><span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">2</span>; i &lt; lastNum; i++)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (sheet.GetRow(i) != <span class="literal">null</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//Console.WriteLine(i + &quot; ---&gt; &quot; + sheet.GetRow(i).Count());</span></span><br><span class="line">        dataGridView1.Rows.Add();</span><br><span class="line">        <span class="keyword">for</span> (<span class="built_in">int</span> j = <span class="number">0</span>; j &lt; <span class="number">10</span>; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (sheet.GetRow(i).GetCell(j) != <span class="literal">null</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (sheet.GetRow(i).Cells.Count &gt; <span class="number">10</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="comment">//dataGridView1.Rows[i].Cells[j].Value = sheet.GetRow(i).GetCell(j).StringCellValue;</span></span><br><span class="line">                    <span class="keyword">switch</span> (sheet.GetRow(i).GetCell(j).CellType)</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="keyword">case</span> CellType.Numeric:</span><br><span class="line">                            <span class="comment">//Console.WriteLine(j + &quot; ---&gt; &quot; + sheet.GetRow(i).GetCell(j).NumericCellValue);</span></span><br><span class="line">                            dataGridView1.Rows[i - <span class="number">2</span>].Cells[j].Value = sheet.GetRow(i).GetCell(j).NumericCellValue;</span><br><span class="line">                            <span class="keyword">break</span>;</span><br><span class="line">                        <span class="keyword">case</span> CellType.String:</span><br><span class="line">                            <span class="comment">//Console.WriteLine(j + &quot; ---&gt; &quot; + sheet.GetRow(i).GetCell(j).StringCellValue);</span></span><br><span class="line">                            dataGridView1.Rows[i - <span class="number">2</span>].Cells[j].Value = sheet.GetRow(i).GetCell(j).StringCellValue;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    Console.WriteLine(i + <span class="string">&quot; ---&gt; cells &lt; 10&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//dataGridView1.AutoResizeColumns();</span></span><br><span class="line">dataGridView1.AutoResizeRows();</span><br></pre></td></tr></table></figure>
<h3 id="坐标文件解析"><a href="#坐标文件解析" class="headerlink" title="坐标文件解析"></a>坐标文件解析</h3><p>坐标文件就是普通的文本文件，按照坐标格式进行读取就可以了  </p>
<figure class="highlight c#"><table><tr><td class="code"><pre><span class="line">StreamReader sr = File.OpenText(tbx_rep.Text);</span><br><span class="line">pst = <span class="keyword">new</span> List&lt;Placement&gt;();</span><br><span class="line"><span class="keyword">while</span> ((temp = sr.ReadLine()) != <span class="literal">null</span>)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (temp.Contains(<span class="string">&quot;Total Number of SMD Components on Top&quot;</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">string</span> s = temp.Remove(<span class="number">0</span>, temp.IndexOf(<span class="string">&#x27;:&#x27;</span>) + <span class="number">1</span>);</span><br><span class="line">        line = <span class="built_in">int</span>.Parse(s);</span><br><span class="line">        sr.ReadLine();<span class="comment">//空一行</span></span><br><span class="line">        sr.ReadLine();<span class="comment">//空一行</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; line; i++)</span><br><span class="line">        &#123;</span><br><span class="line"></span><br><span class="line">            temp = sr.ReadLine();</span><br><span class="line">            <span class="comment">//坐标文件格式 座位号 X Y 长度都为10 角度为7</span></span><br><span class="line"></span><br><span class="line">            <span class="built_in">string</span> str = temp.Substring(<span class="number">0</span>, <span class="number">10</span>).Trim();</span><br><span class="line">            <span class="built_in">string</span> x = temp.Substring(<span class="number">10</span>, <span class="number">10</span>).Trim();</span><br><span class="line">            <span class="built_in">string</span> y = temp.Substring(<span class="number">20</span>, <span class="number">10</span>).Trim();</span><br><span class="line">            <span class="built_in">string</span> r = temp.Substring(<span class="number">30</span>, <span class="number">7</span>).Trim();</span><br><span class="line">            <span class="keyword">if</span> (i == <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                label_first_smd.Text = <span class="built_in">string</span>.Format(<span class="string">&quot;&#123;0&#125;---&gt;X:&#123;1&#125; Y:&#123;2&#125;&quot;</span>, str, x, y);</span><br><span class="line">            &#125;</span><br><span class="line">            Placement p = <span class="keyword">new</span> Placement();</span><br><span class="line">            p.Symbol = str;</span><br><span class="line">            p.X_pos = x;</span><br><span class="line">            p.Y_pos = y;</span><br><span class="line">            p.Rotation = r;</span><br><span class="line">            pst.Add(p);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="在图形中渲染位置"><a href="#在图形中渲染位置" class="headerlink" title="在图形中渲染位置"></a>在图形中渲染位置</h3><p>根据坐标生成对应的gerber绘图语句,比如画一个圆点，能标识出即可</p>
<figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="comment">//获取座位号</span></span><br><span class="line">Console.WriteLine(dataGridView1.Rows[e.RowIndex].Cells[<span class="number">7</span>].Value);</span><br><span class="line"><span class="built_in">string</span> location = (<span class="built_in">string</span>)dataGridView1.Rows[e.RowIndex].Cells[<span class="number">7</span>].Value;</span><br><span class="line"><span class="built_in">string</span>[] loc;</span><br><span class="line">StringBuilder sb = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">sb.Append(<span class="string">&quot;G04 Sonavox auto mark smd commpent helper *\r\n&quot;</span>);</span><br><span class="line">sb.Append(<span class="string">&quot;G04 Draw by:101367 *\n&quot;</span>);</span><br><span class="line">sb.Append(<span class="string">&quot;%MOIN*%\n&quot;</span>);<span class="comment">//单位选择</span></span><br><span class="line">sb.Append(<span class="string">&quot;%FSLAX55Y55*%\n&quot;</span>);<span class="comment">//坐标系选择</span></span><br><span class="line"><span class="comment">//sb.Append(&quot;%ADD12R,0.050X0.050X*%\n&quot;);//画圆点</span></span><br><span class="line">sb.Append(<span class="built_in">string</span>.Format(<span class="string">&quot;%ADD11C,&#123;0&#125;*%\n&quot;</span>, numericUpDown_size.Value.ToString()));<span class="comment">//画圆点</span></span><br><span class="line">sb.Append(<span class="string">&quot;\nG54D11*\n&quot;</span>);<span class="comment">//选择自定义光圈</span></span><br><span class="line"><span class="keyword">if</span> (location != <span class="string">&quot;&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">    loc = location.Split(<span class="string">&#x27;,&#x27;</span>);</span><br><span class="line">    <span class="built_in">bool</span> find = <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">foreach</span> (<span class="built_in">string</span> s <span class="keyword">in</span> loc)</span><br><span class="line">    &#123;</span><br><span class="line">        find = <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">foreach</span> (Placement p <span class="keyword">in</span> pst)</span><br><span class="line">        &#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (s == p.Symbol)</span><br><span class="line">            &#123;</span><br><span class="line">                find = <span class="literal">true</span>;</span><br><span class="line">                Int32 xpos = Int32.Parse(p.X_pos) + (Int32)numericUpDown_x.Value;</span><br><span class="line">                Int32 ypos = Int32.Parse(p.Y_pos) + (Int32)numericUpDown_y.Value;</span><br><span class="line">                xpos = xpos * <span class="number">100</span>;</span><br><span class="line">                ypos = ypos * <span class="number">100</span>;</span><br><span class="line">                sb.Append(<span class="built_in">string</span>.Format(<span class="string">&quot;X&#123;0&#125;Y&#123;1&#125;D03*\n&quot;</span>, xpos, ypos));<span class="comment">//标识位置</span></span><br><span class="line">                Console.WriteLine(<span class="built_in">string</span>.Format(<span class="string">&quot;Top SMD:&#123;0&#125;---&gt;X:&#123;1&#125; Y:&#123;2&#125; R:&#123;3&#125;&quot;</span>, s, p.X_pos, p.Y_pos, p.Rotation));</span><br><span class="line">                <span class="comment">//break;</span></span><br><span class="line">                <span class="keyword">continue</span>;<span class="comment">//跳过剩下的代码，继续执行循环</span></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (find == <span class="literal">false</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">foreach</span> (Placement p <span class="keyword">in</span> psb)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (s == p.Symbol)</span><br><span class="line">                &#123;</span><br><span class="line">                    find = <span class="literal">true</span>;</span><br><span class="line">                    Int32 xpos = Int32.Parse(p.X_pos) + (Int32)numericUpDown_x.Value;</span><br><span class="line">                    Int32 ypos = Int32.Parse(p.Y_pos) + (Int32)numericUpDown_y.Value;</span><br><span class="line">                    xpos = xpos * <span class="number">100</span>;</span><br><span class="line">                    ypos = ypos * <span class="number">100</span>;</span><br><span class="line">                    sb.Append(<span class="built_in">string</span>.Format(<span class="string">&quot;X&#123;0,0.00&#125;Y&#123;1,0.00&#125;D03*\n&quot;</span>, xpos, ypos));<span class="comment">//标识位置</span></span><br><span class="line">                    </span><br><span class="line">                    Console.WriteLine(<span class="built_in">string</span>.Format(<span class="string">&quot;Bottom SMD:&#123;0&#125;---&gt;X:&#123;1&#125; Y:&#123;2&#125; R:&#123;3&#125;&quot;</span>, s, p.X_pos, p.Y_pos, p.Rotation));</span><br><span class="line">                    <span class="keyword">continue</span>;<span class="comment">//跳过剩下的代码，继续执行循环</span></span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (find == <span class="literal">false</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            MessageBox.Show(s + <span class="string">&quot;的坐标未找到，请确认！！！\r\n可能是座位号不正确或者在MI部分&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    sb.Append(<span class="string">&quot;M02*\n&quot;</span>);</span><br><span class="line">    richTextBox1.Text = sb.ToString();</span><br><span class="line">    <span class="comment">//保存到文件，通知gerberV加载，reload即可刷新视图</span></span><br><span class="line">    StreamWriter sw = <span class="keyword">new</span> StreamWriter(<span class="string">@&quot;Auto-Generate-Gerber.gbx&quot;</span>);</span><br><span class="line">    sw.Write(sb.ToString());</span><br><span class="line">    sw.Flush();</span><br><span class="line">    sw.Close();</span><br><span class="line">    reload_event(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="软件界面"><a href="#软件界面" class="headerlink" title="软件界面"></a>软件界面</h3><p>图形标记目前只支持加点，可以很容易添加方框，箭头等符号  </p>
<img src="/pages/9b86/image4.png" class="" title="helper">

<p>软件以坐标文件中第一个位置为参照来计算偏移量的，需要填入实际坐标才可以计算出偏移量，如果坐标没有偏移，则无需计算，贴完的可以标记为绿色背景，取消即为默认背景  </p>
<img src="/pages/9b86/image2.png" class="" title="helper">

<h3 id="源码如下"><a href="#源码如下" class="headerlink" title="源码如下"></a>源码如下</h3><p>目前代码只适合解析我们公司cadstar导出的文件,这个EDA国内用的不多，这里给出源码，简单修改下就可以解析其它格式的BOM及坐标文件了<br><a href="GerberVS.7z">点击下载源码</a></p>
<h3 id="视频演示"><a href="#视频演示" class="headerlink" title="视频演示"></a>视频演示</h3><video src='/posts/9b86/video.mp4' type='video/mp4' preload="auto" controls='controls'  width='100%' height='100%'>
</video>]]></content>
      <categories>
        <category>SoftWare</category>
      </categories>
      <tags>
        <tag>C#</tag>
        <tag>software</tag>
        <tag>gerber</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows上位机使用HidSharp进行HID通信</title>
    <url>/pages/bb4b/</url>
    <content><![CDATA[<h3 id="HID通信"><a href="#HID通信" class="headerlink" title="HID通信"></a>HID通信</h3><p> <code>HID上位机通信库有很多,比如hidsharp,libusbhidnet,cyusb,usbclasslibrary.... 。这里使用hidsharp这个库，此库功能非常强大和稳定</code></p>
<h3 id="HID-发送接收测试代码"><a href="#HID-发送接收测试代码" class="headerlink" title="HID 发送接收测试代码"></a>HID 发送接收测试代码</h3><pre><code><figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">connect</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    MyDevice = List.GetHidDevices(<span class="number">0x0480</span>, <span class="number">0x5850</span>).FirstOrDefault();</span><br><span class="line">    <span class="keyword">if</span> (MyDevice != <span class="literal">null</span> &amp;&amp; MyDevice.TryOpen(<span class="keyword">out</span> Stream))</span><br><span class="line">    &#123;</span><br><span class="line">        uIData.DevSta = <span class="string">&quot;|  设备：已连接&quot;</span>;</span><br><span class="line">        info();</span><br><span class="line">        <span class="comment">//Buffer = new byte[65]; // 65</span></span><br><span class="line">        Stream.ReadTimeout = Timeout.Infinite;</span><br><span class="line">        <span class="comment">//Result = Stream.BeginRead(Buffer, 0, 65, new AsyncCallback(BytesReady), null); // 64</span></span><br><span class="line"></span><br><span class="line">        rec = <span class="keyword">new</span> HidDeviceInputReceiver(MyDevice.GetReportDescriptor());</span><br><span class="line">        rec.Received += Rec_Received;</span><br><span class="line">        rec.Start(Stream);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//Stream.ReadAsync(Buffer, 0, 64);</span></span><br><span class="line">        <span class="comment">//连接时 获取仪器型号数据</span></span><br><span class="line">        <span class="built_in">string</span> cmd = <span class="string">&quot;*IDN?\r\n&quot;</span>;</span><br><span class="line">        send_data(CMD_TYPE.GET_INFO_INDS, Encoding.Default.GetBytes(cmd), (<span class="built_in">byte</span>)cmd.Length);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        uIData.DevSta = <span class="string">&quot;|  设备：未连接&quot;</span>;</span><br><span class="line">        uIData.Manufacturer = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        uIData.Production = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        uIData.SerialNum = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        uIData.Device = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//通信协议</span></span><br><span class="line"><span class="comment">//第一字节表示长度</span></span><br><span class="line"><span class="comment">//第二字节表示类型</span></span><br><span class="line"><span class="comment">//后边表示数据  文本表示</span></span><br><span class="line"><span class="keyword">public</span> <span class="built_in">enum</span> CMD_TYPE</span><br><span class="line">&#123;</span><br><span class="line">    GET_INFO_INDS = <span class="number">0</span>,</span><br><span class="line">    GET_REL_VALUE,</span><br><span class="line">    GET_MES_VALUE,</span><br><span class="line">    SET_AC_VOLTAGE,</span><br><span class="line">    SET_DC_VOLTAGE,</span><br><span class="line">    SET_RELAY_VALUE,</span><br><span class="line">    SET_PARAM_VALUE,</span><br><span class="line">    SET_START_REC,</span><br><span class="line">    SET_STOP_REC,</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">send_data</span>(<span class="params">CMD_TYPE type, <span class="built_in">byte</span>[] data, <span class="built_in">byte</span> len</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">byte</span>[] buf = <span class="keyword">new</span> <span class="built_in">byte</span>[MyDevice.GetMaxOutputReportLength()];</span><br><span class="line">        buf[<span class="number">0</span>] = <span class="number">0</span>;  <span class="comment">//第一个字节存放Report ID 下位机会自动去掉ID</span></span><br><span class="line">        buf[<span class="number">1</span>] = len;  <span class="comment">//后边数据长度</span></span><br><span class="line">        buf[<span class="number">2</span>] = (<span class="built_in">byte</span>)type;  <span class="comment">//命令类型</span></span><br><span class="line">        Array.Copy(data, <span class="number">0</span>, buf, <span class="number">3</span>, len);</span><br><span class="line">        Stream.Write(buf);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (Exception ex)</span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">        Console.WriteLine(ex.Message);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">List_Changed</span>(<span class="params"><span class="built_in">object</span> sender, DeviceListChangedEventArgs e</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    connect();</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">info</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    uIData.Manufacturer = <span class="string">&quot;|  &quot;</span> + MyDevice.GetManufacturer();</span><br><span class="line">    uIData.Production = <span class="string">&quot;|  &quot;</span> + MyDevice.GetProductName();</span><br><span class="line">    uIData.SerialNum = <span class="string">&quot;|  &quot;</span> + MyDevice.GetSerialNumber();</span><br><span class="line">    Console.WriteLine(MyDevice.DevicePath);</span><br><span class="line">    <span class="comment">//Console.WriteLine(string.Join(&quot;,&quot;, MyDevice.GetDevicePathHierarchy())); // TODO</span></span><br><span class="line">    Console.WriteLine(MyDevice);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">        Console.WriteLine(<span class="built_in">string</span>.Format(<span class="string">&quot;Max Lengths: Input &#123;0&#125;, Output &#123;1&#125;, Feature &#123;2&#125;&quot;</span>,</span><br><span class="line">            MyDevice.GetMaxInputReportLength(),</span><br><span class="line">            MyDevice.GetMaxOutputReportLength(),</span><br><span class="line">            MyDevice.GetMaxFeatureReportLength()));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (UnauthorizedAccessException e)</span><br><span class="line">    &#123;</span><br><span class="line">        Console.WriteLine(e);</span><br><span class="line">        Console.WriteLine();</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">        Console.WriteLine(<span class="string">&quot;Serial Ports: &#123;0&#125;&quot;</span>, <span class="built_in">string</span>.Join(<span class="string">&quot;,&quot;</span>, MyDevice.GetSerialPorts()));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span></span><br><span class="line">    &#123;</span><br><span class="line">        Console.WriteLine(<span class="string">&quot;Serial Ports: Unknown on this platform.&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">var</span> rawReportDescriptor = MyDevice.GetRawReportDescriptor();</span><br><span class="line">        Console.WriteLine(<span class="string">&quot;Report Descriptor:&quot;</span>);</span><br><span class="line">        Console.WriteLine(<span class="string">&quot;  &#123;0&#125; (&#123;1&#125; bytes)&quot;</span>, <span class="built_in">string</span>.Join(<span class="string">&quot; &quot;</span>, rawReportDescriptor.Select(d =&gt; d.ToString(<span class="string">&quot;X2&quot;</span>))), rawReportDescriptor.Length);</span><br><span class="line"></span><br><span class="line">        <span class="built_in">int</span> indent = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">foreach</span> (<span class="keyword">var</span> element <span class="keyword">in</span> EncodedItem.DecodeItems(rawReportDescriptor, <span class="number">0</span>, rawReportDescriptor.Length))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (element.ItemType == ItemType.Main &amp;&amp; element.TagForMain == MainItemTag.EndCollection) &#123; indent -= <span class="number">2</span>; &#125;</span><br><span class="line"></span><br><span class="line">            Console.WriteLine(<span class="string">&quot;  &#123;0&#125;&#123;1&#125;&quot;</span>, <span class="keyword">new</span> <span class="built_in">string</span>(<span class="string">&#x27; &#x27;</span>, indent), element);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (element.ItemType == ItemType.Main &amp;&amp; element.TagForMain == MainItemTag.Collection) &#123; indent += <span class="number">2</span>; &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> reportDescriptor = MyDevice.GetReportDescriptor();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">foreach</span> (<span class="keyword">var</span> deviceItem <span class="keyword">in</span> reportDescriptor.DeviceItems)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">foreach</span> (<span class="keyword">var</span> usage <span class="keyword">in</span> deviceItem.Usages.GetAllValues())</span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(<span class="built_in">string</span>.Format(<span class="string">&quot;Usage: &#123;0:X4&#125; &#123;1&#125;&quot;</span>, usage, (Usage)usage));</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">foreach</span> (<span class="keyword">var</span> report <span class="keyword">in</span> deviceItem.Reports)</span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(<span class="built_in">string</span>.Format(<span class="string">&quot;&#123;0&#125;: ReportID=&#123;1&#125;, Length=&#123;2&#125;, Items=&#123;3&#125;&quot;</span>,</span><br><span class="line">                                    report.ReportType, report.ReportID, report.Length, report.DataItems.Count));</span><br><span class="line">                <span class="keyword">foreach</span> (<span class="keyword">var</span> dataItem <span class="keyword">in</span> report.DataItems)</span><br><span class="line">                &#123;</span><br><span class="line">                    Console.WriteLine(<span class="built_in">string</span>.Format(<span class="string">&quot;  &#123;0&#125; Elements x &#123;1&#125; Bits, Units: &#123;2&#125;, Expected Usage Type: &#123;3&#125;, Flags: &#123;4&#125;, Usages: &#123;5&#125;&quot;</span>,</span><br><span class="line">                        dataItem.ElementCount, dataItem.ElementBits, dataItem.Unit.System, dataItem.ExpectedUsageType, dataItem.Flags,</span><br><span class="line">                        <span class="built_in">string</span>.Join(<span class="string">&quot;, &quot;</span>, dataItem.Usages.GetAllValues().Select(usage =&gt; usage.ToString(<span class="string">&quot;X4&quot;</span>) + <span class="string">&quot; &quot;</span> + ((Usage)usage).ToString()))));</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (Exception)</span><br><span class="line">    &#123; &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">int</span> num = <span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Rec_Received</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">byte</span>[] buf = <span class="keyword">new</span> <span class="built_in">byte</span>[MyDevice.GetMaxInputReportLength()];</span><br><span class="line">        Report report;</span><br><span class="line">        rec.TryRead(buf, <span class="number">0</span>, <span class="keyword">out</span> report);</span><br><span class="line">        <span class="keyword">foreach</span> (<span class="built_in">byte</span> b <span class="keyword">in</span> buf)</span><br><span class="line">        &#123;</span><br><span class="line">            Console.Write(<span class="string">&quot;&#123;0:X2&#125; &quot;</span>, b);</span><br><span class="line">        &#125;</span><br><span class="line">        Console.WriteLine(<span class="string">&quot;\r\n&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">switch</span> ((CMD_TYPE)buf[<span class="number">2</span>])</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">case</span> CMD_TYPE.GET_INFO_INDS:   <span class="comment">//仪器数据 </span></span><br><span class="line">                <span class="built_in">byte</span>[] data = <span class="keyword">new</span> <span class="built_in">byte</span>[buf[<span class="number">1</span>]];</span><br><span class="line">                Array.Copy(buf, <span class="number">3</span>, data, <span class="number">0</span>, buf[<span class="number">1</span>]);</span><br><span class="line">                <span class="built_in">string</span> <span class="keyword">value</span> = Encoding.Default.GetString(data);</span><br><span class="line">                Console.WriteLine(<span class="keyword">value</span>);</span><br><span class="line">                uIData.Device = <span class="string">&quot;|  &quot;</span> + <span class="keyword">value</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> CMD_TYPE.GET_REL_VALUE:</span><br><span class="line"></span><br><span class="line">                <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; buf[<span class="number">1</span>] / <span class="number">4</span>; i++)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="built_in">byte</span>[] b = <span class="keyword">new</span> <span class="built_in">byte</span>[<span class="number">4</span>]; <span class="comment">//double是8字节</span></span><br><span class="line">                    Array.Copy(buf, <span class="number">3</span> + i * <span class="number">4</span>, b, <span class="number">0</span>, <span class="number">4</span>);</span><br><span class="line">                    <span class="comment">//Array.Reverse(voltage);//转为大端数据 经过测试不需要转换</span></span><br><span class="line">                    <span class="comment">//foreach (byte b in b)</span></span><br><span class="line">                    <span class="comment">//&#123;</span></span><br><span class="line">                    <span class="comment">//    Console.Write(&quot;&#123;0:X2&#125; &quot;, b);</span></span><br><span class="line">                    <span class="comment">//&#125;</span></span><br><span class="line">                    <span class="comment">//Console.WriteLine(&quot;\r\n&quot;);</span></span><br><span class="line">                    <span class="built_in">float</span> v = BitConverter.ToSingle(b, <span class="number">0</span>);</span><br><span class="line">                    <span class="built_in">double</span> d = Math.Round(v, <span class="number">3</span>);</span><br><span class="line">                    uIData.Voltage = d.ToString();</span><br><span class="line">                    Console.WriteLine(<span class="string">&quot;REL ---&gt;:&quot;</span> + d);<span class="comment">//保留3位小数</span></span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> CMD_TYPE.GET_MES_VALUE:</span><br><span class="line">                <span class="built_in">double</span>[] voltage = <span class="keyword">new</span> <span class="built_in">double</span>[uIData.IsBridgeOut ? <span class="number">4</span> : <span class="number">8</span>];</span><br><span class="line">                <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; buf[<span class="number">1</span>] / <span class="number">4</span>; i++)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="built_in">byte</span>[] b = <span class="keyword">new</span> <span class="built_in">byte</span>[<span class="number">4</span>]; <span class="comment">//double是8字节</span></span><br><span class="line">                    Array.Copy(buf, <span class="number">3</span> + i * <span class="number">4</span>, b, <span class="number">0</span>, <span class="number">4</span>);</span><br><span class="line">                    <span class="comment">//Array.Reverse(voltage);//转为大端数据 经过测试不需要转换</span></span><br><span class="line">                    <span class="comment">//foreach (byte b in b)</span></span><br><span class="line">                    <span class="comment">//&#123;</span></span><br><span class="line">                    <span class="comment">//    Console.Write(&quot;&#123;0:X2&#125; &quot;, b);</span></span><br><span class="line">                    <span class="comment">//&#125;</span></span><br><span class="line">                    <span class="comment">//Console.WriteLine(&quot;\r\n&quot;);</span></span><br><span class="line">                    <span class="built_in">float</span> v = BitConverter.ToSingle(b, <span class="number">0</span>);</span><br><span class="line">                    <span class="built_in">double</span> d = Math.Round(v, <span class="number">3</span>);</span><br><span class="line">                    voltage[i] = d;</span><br><span class="line">                    Console.WriteLine(<span class="string">&quot;MES---&gt;:&quot;</span> + d);<span class="comment">//保留3位小数</span></span><br><span class="line">                &#125;</span><br><span class="line">                </span><br><span class="line">                num++;</span><br><span class="line">                <span class="keyword">if</span> (num &gt;= uIData.SampleNum)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="comment">//停止采集</span></span><br><span class="line">                    StopRec_Click(<span class="literal">null</span>, <span class="keyword">new</span> RoutedEventArgs());</span><br><span class="line">                    <span class="comment">//数据插入数据库中</span></span><br><span class="line">                    <span class="comment">//导出数据</span></span><br><span class="line">                    Export_Excel(uIData.AmpName1, uIData.Barcode1, uIData.YearWeek1, dv1);</span><br><span class="line">                    Export_Excel(uIData.AmpName2, uIData.Barcode2, uIData.YearWeek2, dv2);</span><br><span class="line">                    uIData.Barcode1 = <span class="string">&quot;&quot;</span>;</span><br><span class="line">                    uIData.Barcode2 = <span class="string">&quot;&quot;</span>;</span><br><span class="line">                    Barcode1.Focus();</span><br><span class="line">                    StartRec.IsEnabled = <span class="literal">false</span>;</span><br><span class="line">                    StopRec.IsEnabled = <span class="literal">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (Exception ee)</span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">        Console.WriteLine(ee.Message);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//异步读取</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">BytesReady</span>(<span class="params">IAsyncResult result</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">string</span> s = (<span class="string">$&quot;Bytes Read = <span class="subst">&#123;Stream.EndRead(result)&#125;</span> &quot;</span>);</span><br><span class="line">        Console.WriteLine(s);</span><br><span class="line">        <span class="keyword">foreach</span> (<span class="built_in">byte</span> b <span class="keyword">in</span> Buffer)</span><br><span class="line">        &#123;</span><br><span class="line">            Console.WriteLine(b.ToString(<span class="string">&quot;X2&quot;</span>));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        result = Stream.BeginRead(Buffer, <span class="number">0</span>, <span class="number">65</span>, <span class="keyword">new</span> AsyncCallback(BytesReady), <span class="literal">null</span>); <span class="comment">// 64</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (Exception ex)</span><br><span class="line">    &#123;</span><br><span class="line">        MessageBox.Show(ex.Message);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</code></pre>
<h3 id="HID资料"><a href="#HID资料" class="headerlink" title="HID资料"></a>HID资料</h3><p><a href="HID1_11.pdf">HID1_11.pdf</a></p>
<p><a href="USB_HID%E5%8D%8F%E8%AE%AE%E4%B8%AD%E6%96%87%E7%89%88_USB%E6%8E%A5%E5%8F%A3HID%E8%AE%BE%E5%A4%87.pdf">USB_HID协议中文版_USB接口HID设备.pdf</a></p>
<p><a href="Infineon-AN57294_USB_101_An_Introduction_to_Universal_Serial_Bus_2.0-ApplicationNotes-v09_00-CN.pdf">Infineon-AN57294_USB_101_An_Introduction_to_Universal_Serial_Bus_2.0-ApplicationNotes-v09_00-CN</a></p>
<h3 id="HID调试工具"><a href="#HID调试工具" class="headerlink" title="HID调试工具"></a>HID调试工具</h3><img src="/pages/bb4b/2023-12-22_092833.png" class="" title="软件界面">

<img src="/pages/bb4b/2023-12-22_095242.png" class="" title="软件界面">

<img src="/pages/bb4b/2023-12-22_095220.png" class="" title="软件界面">

<p><a href="HID%E2%80%94Plus.exe">HID—Plus.exe</a></p>
<p><a href="CyControl.exe">CyControl.exe</a></p>
<p><a href="CyUSB.dll">CyUSB.dll</a></p>
<p><a href="CyUSB.pdf">CyUSB.pdf</a></p>
]]></content>
      <categories>
        <category>Windows</category>
      </categories>
      <tags>
        <tag>HID</tag>
        <tag>HidSharp</tag>
        <tag>wpf</tag>
        <tag>c#</tag>
        <tag>Window</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows上位机使用NPOI生成excel文档</title>
    <url>/pages/50c/</url>
    <content><![CDATA[<h3 id="NPOI开源库"><a href="#NPOI开源库" class="headerlink" title="NPOI开源库"></a>NPOI开源库</h3><h3 id="导出文件样式"><a href="#导出文件样式" class="headerlink" title="导出文件样式"></a>导出文件样式</h3><ul>
<li>这里先使用Excel制作一个模板，然后加载模板来填充数据 <img src="/pages/50c/2023-12-22_092833.png" class="" title="界面">
 <a href="Templete.xlsx">模板样式</a><br> <a href="AA1006080234900138.xlsx">生成文档样式</a></li>
</ul>
<h3 id="导出Excel代码"><a href="#导出Excel代码" class="headerlink" title="导出Excel代码"></a>导出Excel代码</h3><pre><code><figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Export_Excel</span>(<span class="params"><span class="built_in">string</span> amp_name, <span class="built_in">string</span> barcode, <span class="built_in">string</span> year_week, List&lt;DataVoltage&gt; dv_list</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (dv_list.Count != uIData.SampleNum)</span><br><span class="line">        &#123;</span><br><span class="line">            MessageBox.Show(<span class="string">&quot;采集数量不匹配！&quot;</span>, <span class="string">&quot;错误！&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span></span><br><span class="line">        &#123;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//string excel_Path = Path.Combine(AppDomain.CurrentDomain.BaseDirectory, &quot;Tempplete.xlsx&quot;);</span></span><br><span class="line"></span><br><span class="line">            XSSFWorkbook workBook = <span class="keyword">new</span> XSSFWorkbook(<span class="string">&quot;Templete.xlsx&quot;</span>);</span><br><span class="line">            <span class="comment">//XSSFWorkbook workBook = new XSSFWorkbook(excel_Path);</span></span><br><span class="line">            <span class="comment">//单元格名称</span></span><br><span class="line">            <span class="comment">//workBook.CloneSheet(0);//复制工作表</span></span><br><span class="line">            ISheet mySheet = workBook.GetSheetAt(<span class="number">0</span>);</span><br><span class="line">            workBook.SetSheetName(<span class="number">0</span>, <span class="string">&quot;ATLAS振动台电压记录表&quot;</span>);<span class="comment">//设置工作表名称</span></span><br><span class="line">                                                      <span class="comment">//表头数据</span></span><br><span class="line">            IRow sRow = mySheet.GetRow(<span class="number">0</span>);</span><br><span class="line">            sRow.GetCell(<span class="number">0</span>).SetCellValue(<span class="string">&quot;ATLAS振动台电压记录表\r\n&quot;</span> + amp_name);</span><br><span class="line">            sRow = mySheet.GetRow(<span class="number">1</span>);<span class="comment">//获取当前行</span></span><br><span class="line">            sRow.GetCell(<span class="number">1</span>).SetCellValue(startTime); <span class="comment">//开始时间</span></span><br><span class="line">            sRow.GetCell(<span class="number">3</span>).SetCellValue(DateTime.Now.ToLongTimeString());   <span class="comment">//结束时间</span></span><br><span class="line">            sRow.GetCell(<span class="number">5</span>).SetCellValue(uIData.Device.Substring(<span class="number">3</span>));  <span class="comment">//仪器型号</span></span><br><span class="line">            sRow = mySheet.GetRow(<span class="number">2</span>);<span class="comment">//获取当前行</span></span><br><span class="line">            sRow.GetCell(<span class="number">1</span>).SetCellValue(uIData.IsBridgeOut ? <span class="string">&quot;YES&quot;</span> : <span class="string">&quot;NO&quot;</span>);  <span class="comment">//是否桥接输出</span></span><br><span class="line">            sRow.GetCell(<span class="number">3</span>).SetCellValue(year_week);   <span class="comment">//生产周期</span></span><br><span class="line">            sRow.GetCell(<span class="number">5</span>).SetCellValue(barcode);   <span class="comment">//条码</span></span><br><span class="line">            sRow = mySheet.GetRow(<span class="number">3</span>);<span class="comment">//获取当前行</span></span><br><span class="line">            sRow.GetCell(<span class="number">1</span>).SetCellValue(uIData.LimitUp + <span class="string">&quot;V&quot;</span>);  <span class="comment">//上限</span></span><br><span class="line">            sRow.GetCell(<span class="number">3</span>).SetCellValue(uIData.LimitDown + <span class="string">&quot;V&quot;</span>);  <span class="comment">//下限</span></span><br><span class="line">            sRow.GetCell(<span class="number">5</span>).SetCellValue(uIData.SampleFreq + <span class="string">&quot;点/秒&quot;</span>);  <span class="comment">//记录周期</span></span><br><span class="line">            <span class="keyword">try</span></span><br><span class="line">            &#123;</span><br><span class="line">                Thread t = <span class="keyword">new</span> Thread(<span class="keyword">new</span> ThreadStart(<span class="built_in">delegate</span></span><br><span class="line">                &#123;</span><br><span class="line">                    DataVoltage dv;</span><br><span class="line">                    <span class="keyword">for</span> (Int32 i = <span class="number">0</span>; i &lt; uIData.SampleNum; i++)</span><br><span class="line">                    &#123;</span><br><span class="line">                        dv = dv_list[i];</span><br><span class="line">                        mySheet.CopyRow(<span class="number">5</span> + i, <span class="number">6</span> + i);</span><br><span class="line">                        sRow = mySheet.GetRow(<span class="number">5</span> + i);</span><br><span class="line">                        sRow.GetCell(<span class="number">0</span>).SetCellValue((i + <span class="number">1</span>).ToString());</span><br><span class="line">                        sRow.GetCell(<span class="number">1</span>).SetCellValue(dv.V1.ToString());</span><br><span class="line">                        sRow.GetCell(<span class="number">2</span>).SetCellValue(dv.V2.ToString());</span><br><span class="line">                        <span class="keyword">if</span> (!uIData.IsBridgeOut)</span><br><span class="line">                        &#123;</span><br><span class="line">                            sRow.GetCell(<span class="number">3</span>).SetCellValue(dv.V3.ToString());</span><br><span class="line">                            sRow.GetCell(<span class="number">4</span>).SetCellValue(dv.V4.ToString());</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">else</span></span><br><span class="line">                        &#123;</span><br><span class="line">                            sRow.GetCell(<span class="number">3</span>).SetCellValue(<span class="string">&quot;N/A&quot;</span>);</span><br><span class="line">                            sRow.GetCell(<span class="number">4</span>).SetCellValue(<span class="string">&quot;N/A&quot;</span>);</span><br><span class="line">                        &#125;</span><br><span class="line">                        sRow.GetCell(<span class="number">5</span>).SetCellValue(dv.Time);</span><br><span class="line">                        sRow.GetCell(<span class="number">6</span>).SetCellValue(dv.result);</span><br><span class="line"></span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    FileStream fileStream = <span class="keyword">new</span> FileStream(barcode + <span class="string">&quot;.xlsx&quot;</span>, FileMode.Create);</span><br><span class="line">                    fileStream.Flush();</span><br><span class="line">                    workBook.Write(fileStream);</span><br><span class="line">                    fileStream.Close();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                &#125;));</span><br><span class="line">                t.Start();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">catch</span></span><br><span class="line">            &#123;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">catch</span> (Exception ex)</span><br><span class="line">        &#123;</span><br><span class="line">            Console.WriteLine(ex.Message);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
</code></pre>
]]></content>
      <categories>
        <category>Windows</category>
      </categories>
      <tags>
        <tag>wpf</tag>
        <tag>c#</tag>
        <tag>Window</tag>
        <tag>excel</tag>
        <tag>NPOI</tag>
      </tags>
  </entry>
  <entry>
    <title>在Win10上编译libcurl-7.80.0 支持openssl与wolfssl</title>
    <url>/pages/35d5/</url>
    <content><![CDATA[<h3 id="不带SSL的编译"><a href="#不带SSL的编译" class="headerlink" title="不带SSL的编译"></a>不带SSL的编译</h3><p>libcurl默认编译时是不带SSL支持的，如果不需要SSL支持，那么直接编译就可以，这种方式比较简单，网上教程比较多，请参考网上教程，之里不再赘述  </p>
<h3 id="编译带openssl支持的版本"><a href="#编译带openssl支持的版本" class="headerlink" title="编译带openssl支持的版本"></a>编译带openssl支持的版本</h3><h3 id="编译带wolfssl支持的版本"><a href="#编译带wolfssl支持的版本" class="headerlink" title="编译带wolfssl支持的版本"></a>编译带wolfssl支持的版本</h3><p><code>wolfSSL是一个基于C语言的轻量级SSL / TLS库，专门针对嵌入式和RTOS环境，主要是因为其体积小，速度快，便于携带和功能集 wolfSSL，它是一个轻量级的 SSL 实现，主要应用于嵌入式系统。它的卖点就是速度快，功能多，包比较小，目前已经支持 TLS 1.3，只有 OpenSSL 的1/20 大小。</code></p>
<ol>
<li>为什么选择wolfssl替换已有的openssl库<br> wolfssl比较小。<br> 要从工程中移除openssl的最主要的一个原因是openssl太大了。在嵌入式工程中，为了实现一个小的功能，引用了一个openssl，编译生成的固件太大了，flash装不下了。而wolfssl在满足基本需求的同时，又能大大减小固件的大小。</li>
<li>wolfssl性能相对优秀。<br> 和openssl对比，wolfssl的性能更加优秀，关于openssl和wolfssl的对比，可从wolfssl官网得到详尽的答案：openssl和wolfssl的特点对比</li>
<li>wolfssl方便移植。<br> wolfssl 除了本地API之外，wolfssl还提供了一个openssl兼容性头文件wolfssl&#x2F;openssl&#x2F;ssl.h ，以简化转换为使用wolfssl或帮助将现有的openssl应用程序移植到wolfssl。openssl兼容层将最常用的openssl命令的子集映射到wolfssl的本地API函数。这应该允许在应用程序或项目中通过wolfssl轻松替换openssl，而无需更改大量代码。  </li>
<li>如何编译</li>
</ol>
]]></content>
      <categories>
        <category>Windows</category>
      </categories>
      <tags>
        <tag>C#</tag>
        <tag>software</tag>
        <tag>gerber</tag>
      </tags>
  </entry>
  <entry>
    <title>在Neza-D1上使用红外接收头做为输入</title>
    <url>/pages/72f2/</url>
    <content><![CDATA[<h2 id="开发环境配置"><a href="#开发环境配置" class="headerlink" title="开发环境配置"></a>开发环境配置</h2><pre><code>我的系统是在VirtualBox里跑的ubuntu18.04 
a. 到平头哥官网下载riscv64-linux-x86_64-20210512.tar.gz交叉编译工具
b. sudo mkdir /opt/riscv64-linux-x86_64-20210512
c. tar -xzvf riscv64-linux-x86_64-20210512.tar.gz -C /opt/riscv64-linux-x86_64-20210512
d. vim /etc/bash.bashrc  添加PATH=&quot;$PATH:/opt/riscv64-linux-x86_64-20210512/bin&quot;
e. source /etc/bash.bashrc 使之生效
f. 终端输入riscv64-unknown-linux-gnu-gcc -v 出现版本信息说明外部工具链接配置好了
</code></pre>
<h3 id="D1芯片本身有硬件ir-tx-ir-rx-但在开发板上通过扩展IO引出的只有IR-RX，IR-TX用不了，被I2C2占用了，只有用IO来发射红外信号了"><a href="#D1芯片本身有硬件ir-tx-ir-rx-但在开发板上通过扩展IO引出的只有IR-RX，IR-TX用不了，被I2C2占用了，只有用IO来发射红外信号了" class="headerlink" title="D1芯片本身有硬件ir-tx ir-rx,但在开发板上通过扩展IO引出的只有IR-RX，IR-TX用不了，被I2C2占用了，只有用IO来发射红外信号了"></a>D1芯片本身有硬件ir-tx ir-rx,但在开发板上通过扩展IO引出的只有IR-RX，IR-TX用不了，被I2C2占用了，只有用IO来发射红外信号了</h3><ol>
<li><p>设备对配置<br>发射引脚，使用的是GPIO 需要在内核打开GPIO IR Bit Banging<br>ir_send {<br>compatible  &#x3D; “gpio-ir-tx”;<br>gpios &#x3D; &lt;&amp;pio 3 22 GPIO_ACTIVE_HIGH&gt;; &#x2F;* PD22 *&#x2F;<br>status &#x3D; “okay”;<br>};<br>接收引脚<br>&amp;s_cir0 {<br>pinctrl-names &#x3D; “default”, “sleep”;<br>pinctrl-0 &#x3D; &lt;&amp;s_cir0_pins_a&gt;;<br>pinctrl-1 &#x3D; &lt;&amp;s_cir0_pins_b&gt;;<br>linux,rc-map-name &#x3D; “rc-tbs-nec”;<br>status &#x3D; “okay”;<br>};<br>下边是注册过程<br>[    1.719737] i2c &#x2F;dev entries driver<br>[    1.723748] IR NEC protocol handler initialized<br>[    1.728825] IR RC5(x&#x2F;sz) protocol handler initialized<br>[    1.735217] rc rc0: GPIO IR Bit Banging Transmitter as &#x2F;devices&#x2F;platform&#x2F;soc@3000000&#x2F;soc@3000000:ir_send&#x2F;rc&#x2F;rc0<br>[    1.746722] rc rc0: lirc_dev: driver gpio-ir-tx registered at minor &#x3D; 0, no receiver, raw IR transmitter<br>[    1.758445] sunxi_ir_startup: get ir protocol failed<br>[    1.758467] (NULL device *): deviceless supply  not found, using dummy regulator<br>[    1.772394] Registered IR keymap rc_map_sunxi<br>[    1.777404] rc rc1: sunxi-ir as &#x2F;devices&#x2F;platform&#x2F;soc@3000000&#x2F;7040000.s_cir&#x2F;rc&#x2F;rc1<br>[    1.786130] rc rc1: lirc_dev: driver sunxi-rc-recv registered at minor &#x3D; 1, raw IR receiver, no transmitter<br>[    1.797263] input: sunxi-ir as &#x2F;devices&#x2F;platform&#x2F;soc@3000000&#x2F;7040000.s_cir&#x2F;rc&#x2F;rc1&#x2F;s_cir_rx</p>
</li>
<li><p>查看系统 &#x2F;dev下的设备<br> # ls &#x2F;dev&#x2F;lirc*<br> &#x2F;dev&#x2F;lirc1  &#x2F;dev&#x2F;lirc1  &#x2F;dev&#x2F;lircd</p>
</li>
<li><p>硬件电路请查看附件</p>
</li>
<li><p>此时查看&#x2F;dev&#x2F;input目录下,会有如下显示：</p>
<pre><code> # evtest 
 No device specified, trying to scan all of /dev/input/event*
 Available devices:
 /dev/input/event0:      sunxi-keyboard
 /dev/input/event1:      soc@3000000:rotary
 /dev/input/event2:      sunxi-ir
 /dev/input/event3:      audiocodec sunxi Audio Jack
 /dev/input/event4:      soc@3000000:gpio_keys
 /dev/input/event5:      ns2009_ts
</code></pre>
<p> 此时如果用evtest测试按键是没有任何反应的，因为keymap我们没有修改成自己用的遥控器，当然就不上报事件了，但不影响后续操作</p>
</li>
<li><p>我们可以用lirc里的工具去测试硬件是否OK,测试之前要先修改默认配置文件，不修改的话，同样没反应</p>
<pre><code> # vi /etc/lirc/lirc_options.conf 
 driver          = default
 device          = /dev/lric1
 修改这2行就可以，里边driver默认是uinput,device默认是auto
 再次测试就有反应了
 # mode2 -m -d /dev/lirc1
 Using driver default on device /dev/lirc1
 Trying device: /dev/lirc1
 Using device: /dev/lirc1
 Warning: Running as root.
    9043     4402      626      497      656      499
     624      499      656      499      624      499
     656      499      624      499      624      531
     624     1630      619     1624      655     1624
     624     1624      624     1634      646     1624
     624     1624      655     1624      593     1656
     624      501      654     1624      593      534
     652     1624      624      499      625     1624
     656      504      619      499      655     1625
     624      499      656     1625      593      531
     624     1633      648      498      624     1624
     624    40035  
    9060     2184      624   143451-pulse   483450-space
</code></pre>
<p> 从这结果上可以明显的看出这些数值代表脉冲宽度，单位是us </p>
</li>
<li><p>使用irrecod -f -d &#x2F;dev&#x2F;lirc1 –disable-namespace来录制配置文件<br> 录制完成后放到 &#x2F;etc&#x2F;lric&#x2F;liricd.conf.d&#x2F;下边<br> !注意，这里录制的结果不准确，需要借助上边的命令来获取每一个按键的值,这里只是借用一下配置文件的格式,里边的数字是右对齐<br> 示例：</p>
<pre><code> # Please take the time to finish this file as described in
 # https://sourceforge.net/p/lirc-remotes/wiki/Checklist/
 # and make it available to others by sending it to
 # &lt;lirc@bartelmus.de&gt;
 #
 # This config file was automatically generated
 # using lirc-0.10.1(default) on Thu Jan  1 01:37:06 1970
 # Command line used: -f -d /dev/lirc1 --disable-namespace
 # Kernel version (uname -r): 5.10.19
 #
 # Remote name (as of config file): elac
 # Brand of remote device, the thing you hold in your hand:
 # Remote device model nr:
 # Remote device info url:
 # Does remote device has a bundled capture device e. g., a
 #     usb dongle? :
 # For bundled USB devices: usb vendor id, product id
 #     and device string (use dmesg or lsusb):
 # Type of device controlled
 #     (TV, VCR, Audio, DVD, Satellite, Cable, HTPC, ...) :
 # Device(s) controlled by this remote:

 begin remote

 name  elac
 flags RAW_CODES|CONST_LENGTH
 eps            30
 aeps          100

 gap          108533

     begin raw_codes

         name Power
        9043     4403      623      531      593      531
         624      531      593      531      624      531
         593      531      624      531      593      536
         594     1680      592     1656      593     1656
         625     1655      593     1666      582     1656
         624     1656      593     1655      625      530
         593      534      621      530      593     1656
         624     1624      624      531      593      530
         624      531      595     1655      623     1655
         593     1656      593      530      624      531
         593     1664      616     1656      593     1656
         593

         name BT
        9041     4407      622      531      593      531
         593      562      593      531      593      531
         625      533      596      525      624      530
         593     1656      624     1656      593     1655
         593     1664      616     1655      593     1656
         593     1656      624     1658      591      530
         624     1656      593      531      624      531
         593      531      593      531      624     1661
         587      530      624     1656      593      531
         593     1687      593     1656      601     1648
         624     1656      593      531      593     1656
         624

     name Vol+
        9013     4437      592      530      593      562
         593      531      624      531      593      531
         594      565      589      530      593      531
         624     1656      593     1656      624     1665
         590     1651      591     1656      624     1655
         593     1656      593     1667      613      531
         593     1656      624     1656      593      531
         593      562      595      528      593     1656
         624      531      593     1656      624      531
         593      530      593     1659      621     1655
         593     1656      593      562      593     1656
         593
         
     name Vol-
        9044     4436      592      531      624      531
         593      533      622      530      593      531
         593      531      624      531      593      530
         624     1656      593     1661      595     1679
         593     1655      593     1656      624     1656
         593     1667      582     1659      620      530
         593     1656      624     1656      600      524
         624     1656      593      531      593      531
         624      531      593     1656      624      531
         598      530      620     1654      593      531
         624     1625      624     1656      593     1666
         614

     name Pre
        9048     4403      592      562      593      530
         593      562      593      530      593      531
         624      531      593      531      624      531
         593     1661      593     1680      592     1656
         593     1656      624     1656      603     1650
         588     1656      623     1656      593     1656
         624     1662      587     1655      593      531
         624      531      593      531      624     1656
         593      531      631      524      593      530
         593      562      593     1656      593     1656
         624     1663      586      530      624     1624
         624
         .
         .
         .
         .
         .
     end raw_codes

 end remote
</code></pre>
</li>
<li><p>接下来使用irw来验证刚才录制的是否正确<br> # irw<br> lircd-0.10.1[432]: Notice: accepted new client on &#x2F;var&#x2F;run&#x2F;lirc&#x2F;lircd<br> lircd-0.10.1[432]: Info: [lirc] protocol is enabled<br> 0000000000000001 00 Power elac<br> 0000000000000002 00 BT elac<br> 0000000000000003 00 Vol+ elac<br> 0000000000000004 00 Vol- elac<br> 0000000000000008 00 Ana1 elac<br> 000000000000000a 00 Opt1 elac<br> 000000000000000b 00 Opt2 elac</p>
</li>
<li><p>然后在&#x2F;etc&#x2F;lirc&#x2F;目录下创建lircrc配置文件或~&#x2F;.lircrc<br> 格式如下<br> begin<br>         prog &#x3D; irexec<br>         button &#x3D; Power<br>         repeat &#x3D; 0<br>         config &#x3D; echo “power”<br> end<br> begin<br>         prog &#x3D; irexec<br>         button &#x3D; Vol+<br>         repeat &#x3D; 1<br>         config &#x3D; amixer -M -c 0 sset ‘Headphone’,0 1%+ &gt; &#x2F;dev&#x2F;null<br> end<br> begin<br>         prog &#x3D; irexec<br>         button &#x3D; Vol-<br>         repeat &#x3D; 1<br>         config &#x3D; amixer -M -c 0 sset ‘Headphone’,0 1%- &gt; &#x2F;dev&#x2F;null<br> end<br> 保存</p>
</li>
<li><p>最后就是使用irexec来进行各种操作了,无需编程，到这里可以自由发挥了，想要集成到代码里也很简单，看下图</p>
<pre><code> # irexec 
 lircd-0.10.1[448]: Notice: accepted new client on /var/run/lirc/lircd
 lircd-0.10.1[448]: Info: [lirc] protocol is enabled
 
 volume up click
 Simple mixer control &#39;Headphone&#39;,0
 Capabilities: pvolume pvolume-joined pswitch
 Playback channels: Front Left - Front Right
 Limits: Playback 0 - 63
 Mono:
 Front Left: Playback 47 [54%] [-16.00dB] [on]
 Front Right: Playback 47 [54%] [-16.00dB] [on]

 volume down click
 Simple mixer control &#39;Headphone&#39;,0
 Capabilities: pvolume pvolume-joined pswitch
 Playback channels: Front Left - Front Right
 Limits: Playback 0 - 63
 Mono:
 Front Left: Playback 45 [50%] [-18.00dB] [on]
 Front Right: Playback 45 [50%] [-18.00dB] [on]
 
</code></pre>
</li>
<li><p>LIRC处理流程<br>        +——–+         +————-+                     +——–+<br>        |        |         | Linux input |                     | Appli- |<br> —&gt;—| kernel |—-&gt;—-| layer       |———-&gt;———-| cation |<br>        |        |         |             |  &#x2F;dev&#x2F;input&#x2F;eventX  |        |<br>        +——–+         +————-+                     +——–+<br><br><br>        +——–+         +————-+<br>        |        |         | Linux input |<br> —&gt;—| kernel |—-&gt;—-| layer       |<br>        |        |         |             |<br>        +——–+         +————-+<br>                                    |<br>                                    v<br>                                    |<br>                                    |                           +——–+<br>                            +————-+                     | Appli- |<br>                            |    lirc     |———-&gt;———-| cation |-+<br>                            |             |     lirc socket     |        | |<br>                            +————-+                     +——–+ |-+<br>                                                                    |        | |<br>                                                                    +——–+ |<br>                                                                    |        |<br>                                                                    +——–+<br><br>        +——–+         +————-+                     +——–+<br>        |        |         |             |                     | Appli- |<br> —&gt;—| kernel |—-&gt;—-|    lirc     |———-&gt;———-| cation |-+<br>        |        |         |             |     lirc socket     |        | |<br>        +——–+         +————-+                     +——–+ |-+<br>                                                                    |        | |<br>                                                                    +——–+ |<br>                                                                    |        |<br>                                                                    +——–+</p>
</li>
<li><p>通过socket使用lirc,不需要引入任何文件，可以方便的集成到代码里，就是上述第三种方式<br>struct sigaction act;<br>char buf[128];<br>struct sockaddr_un addr;<br>typedef struct<br>{<br>    char addr[32];<br>    char code[8];<br>    char type[16];<br>    char name[16];<br>} IRW_DATA;<br>IRW_DATA irw_data;<br>act.sa_handler &#x3D; sigusr1;<br>sigfillset(&amp;act.sa_mask);<br>act.sa_flags &#x3D; SA_RESTART; &#x2F;* don’t fiddle with EINTR *&#x2F;<br>sigaction(SIGUSR1, &amp;act, NULL);<br>addr.sun_family &#x3D; AF_UNIX;<br>strcpy(addr.sun_path, “&#x2F;var&#x2F;run&#x2F;lirc&#x2F;lircd”);<br>fd_lircd &#x3D; socket(AF_UNIX, SOCK_STREAM | SOCK_NONBLOCK, 0);<br>if (fd_lircd &#x3D;&#x3D; -1)<br>{<br>    printf(“Create socket failed\n”);<br>}<br>if (connect(fd_lircd, (struct sockaddr *)&amp;addr, sizeof(addr)) &#x3D;&#x3D; -1)<br>{<br>    printf(“Cannot connect to socket %s\n”, addr.sun_path);<br>}<br>while (1)<br>{<br>    &#x2F;&#x2F; lircd<br>    if (read(fd_lircd, buf, 128) &gt; 0)<br>    {<br>        LOG_D(“%s\n”, buf);<br>        char *p &#x3D; strtok(buf, “ “);<br>        int i &#x3D; 0;<br>        while (p)<br>        {<br>            &#x2F;&#x2F; LOG_D(“%s\n”, p);<br>            if (i &#x3D;&#x3D; 0)<br>                strcpy(irw_data.addr, p);<br>            else if (i &#x3D;&#x3D; 1)<br>                strcpy(irw_data.code, p);<br>            else if (i &#x3D;&#x3D; 2)<br>                strcpy(irw_data.type, p);<br>            else if (i &#x3D;&#x3D; 3)<br>                strcpy(irw_data.name, p);<br>            p &#x3D; strtok(NULL, “ “);<br>            i++;<br>        }<br>        LOG_D(“%s\n”, irw_data.type);<br>        switch ((uint8_t)strtol(irw_data.addr, NULL, 10))<br>        {<br>        case Vol_up:<br>            rotary_encoder_handler(&amp;u8g2, -1);<br>            break;<br>        case Vol_down:<br>            rotary_encoder_handler(&amp;u8g2, 1);<br>            break;<br>        case Play:<br>            rotary_encoder_button_handler(&amp;u8g2);<br>            break;<br>        case Bt:<br>            printf(“BT button\n”);<br>            break;<br>        }<br>    }<br>}</p>
</li>
<li><p>下边开始向外发射IR信号,发射就使用之前录制的配置文件</p>
<pre><code>irsend SEND_ONCE elac power
</code></pre>
</li>
</ol>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>Neza-D1</tag>
        <tag>LIRIC</tag>
        <tag>红外遥控</tag>
      </tags>
  </entry>
  <entry>
    <title>全志F1C做的桌面小功放</title>
    <url>/pages/6032/</url>
    <content><![CDATA[<blockquote>
<p>全志F1C100S做的一个桌面小功放，主要结构为F1C100S（Linux）+RTL8189ETV（SDIO WIFI模块）+BM64(双模蓝牙模块)+TAS5805M+3 Rotary Encoder + 12 RGB LED</p>
</blockquote>
<h2 id="主要功能"><a href="#主要功能" class="headerlink" title="主要功能"></a>主要功能</h2><h3 id="支持的功能列表"><a href="#支持的功能列表" class="headerlink" title="支持的功能列表"></a>支持的功能列表</h3><blockquote>
<p>1.BT Audio(BM64)<br>2.BLE APP(BM64)<br>3.Airplay(WIFI)<br>4.DLNA(WIFI)<br>5.RCA(Line in)<br>6.USB Audio(USB Gadget Audio)<br>7.Web Server(websocket通信)<br>8.FM(WIFI,暂未实现)<br>9.语音合成(WIFI,暂未实现)</p>
</blockquote>
<h3 id="供电方式"><a href="#供电方式" class="headerlink" title="供电方式"></a>供电方式</h3><blockquote>
<p>整机供电由typec线供电，通过诱骗方式使充电器输出12V，系统可支持5–20V电源输入</p>
</blockquote>
<h3 id="控制方式"><a href="#控制方式" class="headerlink" title="控制方式"></a>控制方式</h3><blockquote>
<p>控制方式由顶部3个带按钮的编码器，下边由SPI驱动的12颗RGB灯做为背光构成，此外还可以通过BLE APP（android）和WebPage控制</p>
</blockquote>
<h3 id="功放部分"><a href="#功放部分" class="headerlink" title="功放部分"></a>功放部分</h3><blockquote>
<p>功放部分为TAS5805M 这颗芯片用于桌面小音箱再合适不过了，音质也非常OK，简单设置几个寄存器即可，当然也可以通过TI的PPC3软件进行配置，这个去TI官网申请即可，采样率支持最高192K</p>
</blockquote>
<img src="/pages/6032/2022-12-31_150537.png" class="" title="amp">

<img src="/pages/6032/2022-12-31_185954.png" class="" title="amp">

<p><a href="sch.pdf">原理图sch.pdf</a>，<a href="-%E5%96%87%E5%8F%ADLMS%E6%9B%B2%E7%BA%BF.xlsx">喇叭LMS曲线.xlsx</a>，<a href="-SPL.PNG">LMS SPL曲线.png</a></p>
<h2 id="构建Linux系统"><a href="#构建Linux系统" class="headerlink" title="构建Linux系统"></a>构建Linux系统</h2><h3 id="基于buildroot来构建uboot-Kernel-rootfs-Flash是W25Q128-16M-rootfs-采用Squarefs-jeff2-overlay"><a href="#基于buildroot来构建uboot-Kernel-rootfs-Flash是W25Q128-16M-rootfs-采用Squarefs-jeff2-overlay" class="headerlink" title="基于buildroot来构建uboot+Kernel+rootfs,Flash是W25Q128 16M rootfs 采用Squarefs+jeff2+overlay"></a>基于buildroot来构建uboot+Kernel+rootfs,Flash是W25Q128 16M rootfs 采用Squarefs+jeff2+overlay</h3><figure class="highlight dns"><table><tr><td class="code"><pre><span class="line">系统启动日志</span><br><span class="line">U-Boot SPL <span class="number">2020</span>.<span class="number">07</span> (Dec <span class="number">16</span> <span class="number">2022</span> - <span class="number">09</span>:<span class="number">22</span>:<span class="number">38</span> +<span class="number">0800</span>)</span><br><span class="line">DRAM: <span class="number">32</span> MiB</span><br><span class="line">Trying to boot from sunxi SPI</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">U-Boot <span class="number">2020</span>.<span class="number">07</span> (Dec <span class="number">16</span> <span class="number">2022</span> - <span class="number">09</span>:<span class="number">22</span>:<span class="number">38</span> +<span class="number">0800</span>) Allwinner Technology</span><br><span class="line"></span><br><span class="line">CPU:   Allwinner F Series (SUNIV)</span><br><span class="line">Model: Desktop Music Box By:<span class="number">87000013</span></span><br><span class="line">DRAM:  <span class="number">32</span> MiB</span><br><span class="line">In:    serial</span><br><span class="line">Out:   serial</span><br><span class="line">Err:   serial</span><br><span class="line">Hit any key to stop autoboot:  <span class="number">0</span> </span><br><span class="line">SF: Detected w25q128 with page size <span class="number">256</span> Bytes, erase size <span class="number">64</span> KiB, total <span class="number">16</span> MiB</span><br><span class="line">device <span class="number">0</span> offset <span class="number">0x80000</span>, size <span class="number">0x500000</span></span><br><span class="line">SF: <span class="number">5242880</span> bytes @ <span class="number">0x80000</span> Read: OK</span><br><span class="line">## Loading kernel from FIT Image at <span class="number">81000000</span> ...</span><br><span class="line">Using &#x27;conf@<span class="number">0</span>&#x27; configuration</span><br><span class="line">Trying &#x27;kernel@<span class="number">0</span>&#x27; kernel subimage</span><br><span class="line">    Description:  Linux kernel</span><br><span class="line">    Type:         Kernel Image</span><br><span class="line">    Compression:  uncompressed</span><br><span class="line">    Data Start:   <span class="number">0</span>x810000cc</span><br><span class="line">    Data Size:    <span class="number">4677768</span> Bytes = <span class="number">4</span>.<span class="number">5</span> MiB</span><br><span class="line">    Architecture: ARM</span><br><span class="line">    OS:           Linux</span><br><span class="line">    Load Address: <span class="number">0x80000000</span></span><br><span class="line">    Entry Point:  <span class="number">0x80000000</span></span><br><span class="line">    Hash algo:    crc32</span><br><span class="line">    Hash value:   d838cd44</span><br><span class="line">Verifying Hash Integrity ... crc32+ OK</span><br><span class="line">## Loading fdt from FIT Image at <span class="number">81000000</span> ...</span><br><span class="line">Using &#x27;conf@<span class="number">0</span>&#x27; configuration</span><br><span class="line">Trying &#x27;fdt@<span class="number">0</span>&#x27; fdt subimage</span><br><span class="line">    Description:  Flattened Device Tree blob</span><br><span class="line">    Type:         Flat Device Tree</span><br><span class="line">    Compression:  uncompressed</span><br><span class="line">    Data Start:   <span class="number">0x81476238</span></span><br><span class="line">    Data Size:    <span class="number">18900</span> Bytes = <span class="number">18</span>.<span class="number">5</span> KiB</span><br><span class="line">    Architecture: ARM</span><br><span class="line">    Hash algo:    crc32</span><br><span class="line">    Hash value:   f0247b04</span><br><span class="line">Verifying Hash Integrity ... crc32+ OK</span><br><span class="line">Booting using the fdt blob at <span class="number">0x81476238</span></span><br><span class="line">Loading Kernel Image</span><br><span class="line">Loading Device Tree to <span class="number">817f8000</span>, end <span class="number">817</span>ff9d3 ... OK</span><br><span class="line"></span><br><span class="line">Starting kernel ...</span><br><span class="line"></span><br><span class="line">[    <span class="number">0.000000</span>] Booting Linux on physical CPU <span class="number">0</span>x0</span><br><span class="line">[    <span class="number">0.000000</span>] Linux version <span class="number">5</span>.<span class="number">4</span>.<span class="number">99</span> (sonavox@SOMRT1A) (gcc version <span class="number">8</span>.<span class="number">4</span>.<span class="number">0</span> (Buildroot -g21de572-dirty)) #<span class="number">127</span> Wed Dec <span class="number">14 10:02:03</span> CST <span class="number">2022</span></span><br><span class="line">[    <span class="number">0.000000</span>] CPU: ARM926EJ-S [<span class="number">41069265</span>] revision <span class="number">5</span> (ARMv5TEJ), cr=<span class="number">0005317</span>f</span><br><span class="line">[    <span class="number">0.000000</span>] CPU: VIVT data cache, VIVT instruction cache</span><br><span class="line">[    <span class="number">0.000000</span>] OF: fdt: Machine model: Desktop Music Box By:<span class="number">87000013</span></span><br><span class="line">[    <span class="number">0.000000</span>] Memory policy: Data cache writeback</span><br><span class="line">[    <span class="number">0.000000</span>] cma: Failed to reserve <span class="number">16</span> MiB</span><br><span class="line">[    <span class="number">0.000000</span>] Built <span class="number">1</span> zonelists, mobility grouping on.  Total pages: <span class="number">8128</span></span><br><span class="line">[    <span class="number">0.000000</span>] Kernel command line: console=ttyS<span class="number">0,115200</span> rootwait init=/preinit root=/dev/mtdblock2 rootfstype=squashfs overlayfsdev=/dev/mtdblock3 net.ifnames=<span class="number">0</span> vt.global_cursor_default=<span class="number">0</span></span><br><span class="line">[    <span class="number">0.000000</span>] Dentry cache hash table entries: <span class="number">4096</span> (order: <span class="number">2</span>, <span class="number">16384</span> bytes, linear)</span><br><span class="line">[    <span class="number">0.000000</span>] Inode-cache hash table entries: <span class="number">2048</span> (order: <span class="number">1</span>, <span class="number">8192</span> bytes, linear)</span><br><span class="line">[    <span class="number">0.000000</span>] mem auto-init: stack:off, heap alloc:off, heap free:off</span><br><span class="line">[    <span class="number">0.000000</span>] Memory: <span class="number">21536</span>K/<span class="number">32768</span>K available (<span class="number">7168</span>K kernel code, <span class="number">321</span>K rwdata, <span class="number">1736</span>K rodata, <span class="number">1024</span>K init, <span class="number">247</span>K bss, <span class="number">11232</span>K reserved, <span class="number">0</span>K cma-reserved)</span><br><span class="line">[    <span class="number">0.000000</span>] SLUB: HWalign=<span class="number">32</span>, Order=<span class="number">0</span>-<span class="number">3</span>, MinObjects=<span class="number">0</span>, CPUs=<span class="number">1</span>, Nodes=<span class="number">1</span></span><br><span class="line">[    <span class="number">0.000000</span>] NR_IRQS: <span class="number">16</span>, nr_irqs: <span class="number">16</span>, preallocated irqs: <span class="number">16</span></span><br><span class="line">[    <span class="number">0.000000</span>] random: get_random_bytes called from start_kernel+<span class="number">0</span>x<span class="number">254/0x444</span> with crng_init=<span class="number">0</span></span><br><span class="line">[    <span class="number">0.000036</span>] sched_clock: <span class="number">32</span> bits at <span class="number">24</span>MHz, resolution <span class="number">41</span>ns, wraps every <span class="number">89478484971</span>ns</span><br><span class="line">[    <span class="number">0.000102</span>] clocksource: timer: mask: <span class="number">0</span>xffffffff max_cycles: <span class="number">0</span>xffffffff, max_idle_ns: <span class="number">79635851949</span> ns</span><br><span class="line">[    <span class="number">0.000612</span>] Console: colour dummy device <span class="number">80</span>x30</span><br><span class="line">[    <span class="number">0.000693</span>] Calibrating delay loop... <span class="number">358</span>.<span class="number">80</span> BogoMIPS (lpj=<span class="number">1794048</span>)</span><br><span class="line">[    <span class="number">0.050219</span>] pid_max: default: <span class="number">32768</span> minimum: <span class="number">301</span></span><br><span class="line">[    <span class="number">0.050554</span>] Mount-cache hash table entries: <span class="number">1024</span> (order: <span class="number">0</span>, <span class="number">4096</span> bytes, linear)</span><br><span class="line">[    <span class="number">0.050586</span>] Mountpoint-cache hash table entries: <span class="number">1024</span> (order: <span class="number">0</span>, <span class="number">4096</span> bytes, linear)</span><br><span class="line">[    <span class="number">0.051903</span>] CPU: Testing write buffer coherency: ok</span><br><span class="line">[    <span class="number">0.053448</span>] Setting up static identity map for <span class="number">0x80100000</span> - <span class="number">0x80100058</span></span><br><span class="line">[    <span class="number">0.054407</span>] devtmpfs: initialized</span><br><span class="line">[    <span class="number">0.062793</span>] clocksource: jiffies: mask: <span class="number">0</span>xffffffff max_cycles: <span class="number">0</span>xffffffff, max_idle_ns: <span class="number">19112604462750000</span> ns</span><br><span class="line">[    <span class="number">0.062842</span>] futex hash table entries: <span class="number">256</span> (order: -<span class="number">1</span>, <span class="number">3072</span> bytes, linear)</span><br><span class="line">[    <span class="number">0.063052</span>] pinctrl core: initialized pinctrl subsystem</span><br><span class="line">[    <span class="number">0.064787</span>] NET: Registered protocol family <span class="number">16</span></span><br><span class="line">[    <span class="number">0.065999</span>] DMA: preallocated <span class="number">256</span> KiB pool for atomic coherent allocations</span><br><span class="line">[    <span class="number">0.067638</span>] cpuidle: using governor menu</span><br><span class="line">[    <span class="number">0.111210</span>] SCSI subsystem initialized</span><br><span class="line">[    <span class="number">0.111571</span>] usbcore: registered new interface driver usbfs</span><br><span class="line">[    <span class="number">0.111711</span>] usbcore: registered new interface driver hub</span><br><span class="line">[    <span class="number">0.111831</span>] usbcore: registered new device driver usb</span><br><span class="line">[    <span class="number">0.112635</span>] Advanced Linux Sound Architecture Driver Initialized.</span><br><span class="line">[    <span class="number">0.115161</span>] clocksource: Switched to clocksource timer</span><br><span class="line">[    <span class="number">0.141052</span>] NET: Registered protocol family <span class="number">2</span></span><br><span class="line">[    <span class="number">0.142055</span>] tcp_listen_portaddr_hash hash table entries: <span class="number">512</span> (order: <span class="number">0</span>, <span class="number">4096</span> bytes, linear)</span><br><span class="line">[    <span class="number">0.142111</span>] TCP established hash table entries: <span class="number">1024</span> (order: <span class="number">0</span>, <span class="number">4096</span> bytes, linear)</span><br><span class="line">[    <span class="number">0.142147</span>] TCP bind hash table entries: <span class="number">1024</span> (order: <span class="number">0</span>, <span class="number">4096</span> bytes, linear)</span><br><span class="line">[    <span class="number">0.142178</span>] TCP: Hash tables configured (established <span class="number">1024</span> bind <span class="number">1024</span>)</span><br><span class="line">[    <span class="number">0.142398</span>] UDP hash table entries: <span class="number">256</span> (order: <span class="number">0</span>, <span class="number">4096</span> bytes, linear)</span><br><span class="line">[    <span class="number">0.142441</span>] UDP-Lite hash table entries: <span class="number">256</span> (order: <span class="number">0</span>, <span class="number">4096</span> bytes, linear)</span><br><span class="line">[    <span class="number">0.142846</span>] NET: Registered protocol family <span class="number">1</span></span><br><span class="line">[    <span class="number">0.144048</span>] RPC: Registered named UNIX socket transport module.</span><br><span class="line">[    <span class="number">0.144077</span>] RPC: Registered udp transport module.</span><br><span class="line">[    <span class="number">0.144087</span>] RPC: Registered tcp transport module.</span><br><span class="line">[    <span class="number">0.144096</span>] RPC: Registered tcp NFSv4.<span class="number">1</span> backchannel transport module.</span><br><span class="line">[    <span class="number">0.146063</span>] NetWinder Floating Point Emulator V0.<span class="number">97</span> (double precision)</span><br><span class="line">[    <span class="number">0.147558</span>] Initialise system trusted keyrings</span><br><span class="line">[    <span class="number">0.148015</span>] workingset: timestamp_bits=<span class="number">30</span> max_order=<span class="number">13</span> bucket_order=<span class="number">0</span></span><br><span class="line">[    <span class="number">0.161944</span>] squashfs: version <span class="number">4</span>.<span class="number">0</span> (<span class="number">2009/01/31</span>) Phillip Lougher</span><br><span class="line">[    <span class="number">0.163804</span>] NFS: Registering the id_resolver key type</span><br><span class="line">[    <span class="number">0.163888</span>] Key type id_resolver registered</span><br><span class="line">[    <span class="number">0.163904</span>] Key type id_legacy registered</span><br><span class="line">[    <span class="number">0.163940</span>] nfs4filelayout_init: NFSv4 File Layout Driver Registering...</span><br><span class="line">[    <span class="number">0.164019</span>] jffs2: version <span class="number">2</span>.<span class="number">2</span>. (NAND) (SUMMARY)  © <span class="number">2001-2006</span> Red Hat, Inc.</span><br><span class="line">[    <span class="number">0.228516</span>] Key type asymmetric registered</span><br><span class="line">[    <span class="number">0.228545</span>] Asymmetric key parser &#x27;x509&#x27; registered</span><br><span class="line">[    <span class="number">0.228683</span>] Block layer SCSI generic (bsg) driver version <span class="number">0</span>.<span class="number">4</span> loaded (major <span class="number">251</span>)</span><br><span class="line">[    <span class="number">0.228702</span>] io scheduler mq-deadline registered</span><br><span class="line">[    <span class="number">0.228714</span>] io scheduler kyber registered</span><br><span class="line">[    <span class="number">0.239035</span>] suniv-f1c100s-pinctrl <span class="number">1c20800</span>.pinctrl: initialized sunXi PIO driver</span><br><span class="line">[    <span class="number">0.257073</span>] Serial: <span class="number">8250/16550</span> driver, <span class="number">8</span> ports, IRQ sharing disabled</span><br><span class="line">[    <span class="number">0.261762</span>] suniv-f1c100s-pinctrl <span class="number">1c20800</span>.pinctrl: <span class="number">1c20800</span>.pinctrl supply vcc-pe not found, using dummy regulator</span><br><span class="line">[    <span class="number">0.262943</span>] printk: console [ttyS0] disabled</span><br><span class="line">[    <span class="number">0.283181</span>] <span class="number">1c25000</span>.serial: ttyS0 at MMIO <span class="number">0x1c25000</span> (irq = <span class="number">27</span>, base_baud = <span class="number">6250000</span>) is a <span class="number">16550</span><span class="keyword">A</span></span><br><span class="line">[    <span class="number">0.718091</span>] printk: console [ttyS0] enabled</span><br><span class="line">[    <span class="number">0.723236</span>] suniv-f1c100s-pinctrl <span class="number">1c20800</span>.pinctrl: <span class="number">1c20800</span>.pinctrl supply vcc-pa not found, using dummy regulator</span><br><span class="line">[    <span class="number">0.754760</span>] <span class="number">1c25400</span>.serial: ttyS1 at MMIO <span class="number">0x1c25400</span> (irq = <span class="number">28</span>, base_baud = <span class="number">6250000</span>) is a <span class="number">16550</span><span class="keyword">A</span></span><br><span class="line">[    <span class="number">0.765290</span>] st: Version <span class="number">20160209</span>, fixed bufsize <span class="number">32768</span>, s/g segs <span class="number">256</span></span><br><span class="line">[    <span class="number">0.772001</span>] SCSI Media Changer driver v0.<span class="number">25</span> </span><br><span class="line">[    <span class="number">0.777589</span>] suniv-f1c100s-pinctrl <span class="number">1c20800</span>.pinctrl: <span class="number">1c20800</span>.pinctrl supply vcc-pc not found, using dummy regulator</span><br><span class="line">[    <span class="number">0.790186</span>] spi-nor spi0.<span class="number">0</span>: w25q128 (<span class="number">16384</span> Kbytes)</span><br><span class="line">[    <span class="number">0.795032</span>] <span class="number">4</span> fixed-partitions partitions found on MTD device spi0.<span class="number">0</span></span><br><span class="line">[    <span class="number">0.801455</span>] Creating <span class="number">4</span> MTD partitions on &quot;spi0.<span class="number">0</span>&quot;:</span><br><span class="line">[    <span class="number">0.806290</span>] <span class="number">0</span>x0<span class="number">00000000000</span>-<span class="number">0</span>x0<span class="number">00000080000</span> : &quot;u-boot&quot;</span><br><span class="line">[    <span class="number">0.814206</span>] <span class="number">0</span>x0<span class="number">00000080000</span>-<span class="number">0</span>x0<span class="number">00000580000</span> : &quot;kernel&quot;</span><br><span class="line">[    <span class="number">0.822181</span>] <span class="number">0</span>x0<span class="number">00000580000</span>-<span class="number">0</span>x0<span class="number">00000f80000</span> : &quot;rom&quot;</span><br><span class="line">[    <span class="number">0.829901</span>] <span class="number">0</span>x0<span class="number">00000e00000</span>-<span class="number">0</span>x0<span class="number">00001000000</span> : &quot;overlay&quot;</span><br><span class="line">[    <span class="number">0.841590</span>] ehci_hcd: USB <span class="number">2</span>.<span class="number">0</span> &#x27;Enhanced&#x27; Host Controller (EHCI) Driver</span><br><span class="line">[    <span class="number">0.848212</span>] ehci-platform: EHCI generic platform driver</span><br><span class="line">[    <span class="number">0.853701</span>] ohci_hcd: USB <span class="number">1</span>.<span class="number">1</span> &#x27;Open&#x27; Host Controller (OHCI) Driver</span><br><span class="line">[    <span class="number">0.859985</span>] ohci-platform: OHCI generic platform driver</span><br><span class="line">[    <span class="number">0.866303</span>] usb_phy_generic usb_phy_generic.<span class="number">0</span>.auto: usb_phy_generic.<span class="number">0</span>.auto supply vcc not found, using dummy regulator</span><br><span class="line">[    <span class="number">0.878120</span>] musb-hdrc musb-hdrc.<span class="number">1</span>.auto: MUSB HDRC host driver</span><br><span class="line">[    <span class="number">0.884444</span>] musb-hdrc musb-hdrc.<span class="number">1</span>.auto: new USB bus registered, assigned bus number <span class="number">1</span></span><br><span class="line">[    <span class="number">0.892800</span>] usb usb1: New USB device found, idVendor=<span class="number">1d</span>6b, idProduct=<span class="number">0002</span>, bcdDevice= <span class="number">5</span>.<span class="number">04</span></span><br><span class="line">[    <span class="number">0.901128</span>] usb usb1: New USB device strings: Mfr=<span class="number">3</span>, Product=<span class="number">2</span>, SerialNumber=<span class="number">1</span></span><br><span class="line">[    <span class="number">0.908371</span>] usb usb1: Product: MUSB HDRC host driver</span><br><span class="line">[    <span class="number">0.913326</span>] usb usb1: Manufacturer: Linux <span class="number">5</span>.<span class="number">4</span>.<span class="number">99</span> musb-hcd</span><br><span class="line">[    <span class="number">0.918738</span>] usb usb1: SerialNumber: musb-hdrc.<span class="number">1</span>.auto</span><br><span class="line">[    <span class="number">0.925087</span>] hub <span class="number">1-0:1.0</span>: USB hub found</span><br><span class="line">[    <span class="number">0.929049</span>] hub <span class="number">1-0:1.0</span>: <span class="number">1</span> port detected</span><br><span class="line">[    <span class="number">0.937113</span>] i2c /dev entries driver</span><br><span class="line">[    <span class="number">0.941105</span>] suniv-f1c100s-pinctrl <span class="number">1c20800</span>.pinctrl: <span class="number">1c20800</span>.pinctrl supply vcc-pd not found, using dummy regulator</span><br><span class="line">[    <span class="number">0.955330</span>] rtc-pcf85<span class="number">63 0-0051</span>: low voltage detected, date/time is not reliable.</span><br><span class="line">[    <span class="number">0.963191</span>] rtc-pcf85<span class="number">63 0-0051</span>: registered as rtc0</span><br><span class="line">[    <span class="number">0.970537</span>] sunxi-wdt <span class="number">1</span>c20ca0.watchdog: Watchdog enabled (timeout=<span class="number">16</span> sec, nowayout=<span class="number">0</span>)</span><br><span class="line">[    <span class="number">0.980048</span>] suniv-f1c100s-pinctrl <span class="number">1c20800</span>.pinctrl: <span class="number">1c20800</span>.pinctrl supply vcc-pf not found, using dummy regulator</span><br><span class="line">[    <span class="number">1.017455</span>] sunxi-mmc <span class="number">1c0f000</span>.mmc: initialized, max. request size: <span class="number">16384</span> KB</span><br><span class="line">[    <span class="number">1.026497</span>] ledtrig-cpu: registered to indicate activity on CPUs</span><br><span class="line">[    <span class="number">1.032951</span>] hidraw: raw HID events driver (C) Jiri Kosina</span><br><span class="line">[    <span class="number">1.038762</span>] usbcore: registered new interface driver usbhid</span><br><span class="line">[    <span class="number">1.044321</span>] usbhid: USB HID core driver</span><br><span class="line">[    <span class="number">1.052411</span>] debugfs: Directory &#x27;<span class="number">1</span>c23c00.codec&#x27; with parent &#x27;F1C100s Audio Codec&#x27; already present!</span><br><span class="line">[    <span class="number">1.064401</span>] sun4i-codec <span class="number">1</span>c23c00.codec: Codec &lt;-&gt; <span class="number">1</span>c23c00.codec mapping ok</span><br><span class="line">[    <span class="number">1.076362</span>] NET: Registered protocol family <span class="number">17</span></span><br><span class="line">[    <span class="number">1.081181</span>] Key type dns_resolver registered</span><br><span class="line">[    <span class="number">1.086651</span>] Loading compiled-in X.<span class="number">509</span> certificates</span><br><span class="line">[    <span class="number">1.102160</span>] asoc-simple-card sound_i2s: pcm5102a-hifi &lt;-&gt; <span class="number">1c22000</span>.i2s mapping ok</span><br><span class="line">[    <span class="number">1.112941</span>] rtc-pcf85<span class="number">63 0-0051</span>: low voltage detected, date/time is not reliable.</span><br><span class="line">[    <span class="number">1.120436</span>] rtc-pcf85<span class="number">63 0-0051</span>: hctosys: unable to read the hardware clock</span><br><span class="line">[    <span class="number">1.127818</span>] cfg80211: Loading compiled-in X.<span class="number">509</span> certificates for regulatory database</span><br><span class="line">[    <span class="number">1.141924</span>] cfg80211: Loaded X.<span class="number">509</span> cert &#x27;sforshee: <span class="number">00</span>b28ddf47aef9cea7&#x27;</span><br><span class="line">[    <span class="number">1.149080</span>] platform regulatory.<span class="number">0</span>: Direct firmware load for regulatory.db failed with error -<span class="number">2</span></span><br><span class="line">[    <span class="number">1.157813</span>] cfg80211: failed to load regulatory.db</span><br><span class="line">[    <span class="number">1.162776</span>] ALSA device list:</span><br><span class="line">[    <span class="number">1.165850</span>]   #<span class="number">0</span>: F1C100s Audio Codec</span><br><span class="line">[    <span class="number">1.169508</span>]   #<span class="number">1</span>: <span class="number">1c22000</span>.i2s-pcm5102a-hifi</span><br><span class="line">[    <span class="number">1.175750</span>] random: fast init done</span><br><span class="line">[    <span class="number">1.182755</span>] VFS: Mounted root (squashfs filesystem) readonly on device <span class="number">31</span>:<span class="number">2</span>.</span><br><span class="line">[    <span class="number">1.194801</span>] devtmpfs: mounted</span><br><span class="line">[    <span class="number">1.201081</span>] Freeing unused kernel memory: <span class="number">1024</span>K</span><br><span class="line">[    <span class="number">1.205805</span>] Run /preinit as init process</span><br><span class="line">[    <span class="number">1.257421</span>] mmc0: new high speed SDIO card at address <span class="number">0001</span></span><br><span class="line">[    <span class="number">1.302001</span>] random: crng init done</span><br><span class="line">[    <span class="number">1.308462</span>] bFWReady == _FALSE call reset <span class="number">8051</span>...</span><br><span class="line">[    <span class="number">1.984419</span>] overlayfs: upper fs does not support tmpfile.</span><br><span class="line">[    <span class="number">1.989923</span>] overlayfs: upper fs does not support xattr, falling back to index=off and metacopy=off.</span><br><span class="line">Starting syslogd: OK</span><br><span class="line">Starting klogd: OK</span><br><span class="line">Running sysctl: OK</span><br><span class="line">Starting mdev... OK</span><br><span class="line"></span><br><span class="line">Initializing random number generator: OK</span><br><span class="line">Saving random seed: OK</span><br><span class="line">Starting network: OK</span><br><span class="line">Start App...</span><br><span class="line">BuildDate:Dec <span class="number">28 2022 15</span>:<span class="number">56</span>:<span class="number">07</span></span><br><span class="line">self pid:<span class="number">126</span></span><br><span class="line">Welcome to Desktop MusicBox</span><br><span class="line">Jamstack-lite login: </span><br><span class="line">config -&gt; wifi_ssid:Luxul1750_2.<span class="number">4</span>G</span><br><span class="line">config -&gt; wifi_psk:sonavox168</span><br><span class="line">config -&gt; master volume:<span class="number">66</span></span><br><span class="line">config -&gt; input:<span class="number">1</span></span><br><span class="line">config -&gt; btn_vol_color:<span class="number">0</span>xff0000</span><br><span class="line">config -&gt; btn_gain_color:<span class="number">0</span>xff00</span><br><span class="line">config -&gt; btn_fx_color:<span class="number">0</span>x00ff</span><br><span class="line">config parse ok</span><br><span class="line">Successfully initialized wpa_supplicant</span><br><span class="line">waitting for wifi connected...</span><br><span class="line">udhcpc: started, v1.<span class="number">31</span>.<span class="number">1</span></span><br><span class="line">udhcpc: sending discover</span><br><span class="line">udhcpc: sending discover</span><br><span class="line">udhcpc: sending select for <span class="number">192.168.6.195</span></span><br><span class="line">udhcpc: lease of <span class="number">192.168.6.195</span> obtained, lease time <span class="number">43200</span></span><br><span class="line">deleting routers</span><br><span class="line">adding dns <span class="number">192.168.6.1</span></span><br><span class="line">addr:<span class="number">192.168.6.195</span></span><br><span class="line">local ip:<span class="number">192.168.6.195</span></span><br><span class="line">wifi connected! ip:<span class="number">192.168.6.195</span></span><br><span class="line">shairport-sync -a jamstack-lite started.</span><br><span class="line"><span class="number">3</span>bb5 <span class="number">2</span> webserver.c:<span class="number">97</span>:web_socket_thread Mongoose version : v7.<span class="number">8</span></span><br><span class="line"><span class="number">3</span>bc2 <span class="number">2</span> webserver.c:<span class="number">98</span>:web_socket_thread Listening on     : ws://<span class="number">192.168.6.195</span>:<span class="number">8000</span></span><br><span class="line"><span class="number">3</span>bc3 <span class="number">2</span> webserver.c:<span class="number">99</span>:web_socket_thread Web root         : [./www]</span><br><span class="line">start init system.</span><br><span class="line">Init system gpio.</span><br><span class="line">spi mode: <span class="number">0</span></span><br><span class="line">bits per word: <span class="number">8</span></span><br><span class="line">max speed: <span class="number">8000000</span> Hz (<span class="number">8000</span> KHz)</span><br><span class="line">key init start</span><br><span class="line">key init ok</span><br><span class="line">fcntl=<span class="number">0</span></span><br><span class="line">fd-&gt;open=<span class="number">49</span></span><br><span class="line">/dev/ttyS1 init ok! err:<span class="number">0</span></span><br><span class="line">Request USB <span class="number">12</span>V Voltage</span><br><span class="line">Enable AMP Power Supply</span><br><span class="line">Power ON CODEC with GPIO PE6</span><br><span class="line">Tas5805 init completed!</span><br><span class="line">Volume = <span class="number">66</span>% map -&gt;<span class="number">0</span>x77</span><br><span class="line">switch audio source to STREAM</span><br><span class="line">Updated configuration successfully written to: sys.cfg</span><br><span class="line">save config ok.</span><br></pre></td></tr></table></figure>

<h3 id="设备树配置如下：主要是F1C100S的I2S，SPI，UART，这几个外设主要是用于驱动Linux-SoundCard-RGB灯，BM64蓝牙模块-编码器部分驱动功能不符合需求，故放在应用层驱动，编码器需要实现，正转，反转，单击，双击，三击，长按"><a href="#设备树配置如下：主要是F1C100S的I2S，SPI，UART，这几个外设主要是用于驱动Linux-SoundCard-RGB灯，BM64蓝牙模块-编码器部分驱动功能不符合需求，故放在应用层驱动，编码器需要实现，正转，反转，单击，双击，三击，长按" class="headerlink" title="设备树配置如下：主要是F1C100S的I2S，SPI，UART，这几个外设主要是用于驱动Linux SoundCard,RGB灯，BM64蓝牙模块,编码器部分驱动功能不符合需求，故放在应用层驱动，编码器需要实现，正转，反转，单击，双击，三击，长按"></a>设备树配置如下：主要是F1C100S的I2S，SPI，UART，这几个外设主要是用于驱动Linux SoundCard,RGB灯，BM64蓝牙模块,编码器部分驱动功能不符合需求，故放在应用层驱动，编码器需要实现，正转，反转，单击，双击，三击，长按</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">完整的设备树，有需要的可以参考一下</span><br><span class="line"><span class="comment">// SPDX-License-Identifier: (GPL-2.0+ OR X11)</span></span><br><span class="line"></span><br><span class="line">/dts-v1/;</span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;suniv-f1c100s.dtsi&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;dt-bindings/input/input.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;dt-bindings/leds/common.h&gt;</span></span></span><br><span class="line">/ &#123;</span><br><span class="line">    model = <span class="string">&quot;Desktop Music Box By:87000013&quot;</span>;</span><br><span class="line">    compatible = <span class="string">&quot;allwinner,suniv-f1c200s&quot;</span>,</span><br><span class="line">            <span class="string">&quot;allwinner,suniv-f1c100s&quot;</span>;</span><br><span class="line">        </span><br><span class="line">    chosen &#123;</span><br><span class="line">    </span><br><span class="line">        <span class="meta">#address-cells = <span class="string">&lt;1&gt;</span>;</span></span><br><span class="line">        <span class="meta">#size-cells = <span class="string">&lt;1&gt;</span>;</span></span><br><span class="line">        ranges;</span><br><span class="line">        </span><br><span class="line">        bootargs = <span class="string">&quot;console=ttyS0,115200 rootwait init=/preinit root=/dev/mtdblock2 rootfstype=squashfs overlayfsdev=/dev/mtdblock3&quot;</span>;</span><br><span class="line">        <span class="comment">/*		</span></span><br><span class="line"><span class="comment">        simplefb_lcd: framebuffer-lcd0 &#123;</span></span><br><span class="line"><span class="comment">            compatible = &quot;allwinner,simple-framebuffer&quot;,</span></span><br><span class="line"><span class="comment">                    &quot;simple-framebuffer&quot;;</span></span><br><span class="line"><span class="comment">            format = &quot;r5g6b5&quot;;</span></span><br><span class="line"><span class="comment">            width = &lt;800&gt;;</span></span><br><span class="line"><span class="comment">            height = &lt;480&gt;;</span></span><br><span class="line"><span class="comment">            stride = &lt;1600&gt;;</span></span><br><span class="line"><span class="comment">            allwinner,pipeline = &quot;de_be0-lcd0&quot;;</span></span><br><span class="line"><span class="comment">            clocks = &lt;&amp;ccu CLK_BUS_DE_BE&gt;, &lt;&amp;ccu CLK_DE_BE&gt;,</span></span><br><span class="line"><span class="comment">                &lt;&amp;ccu CLK_DRAM_DE_BE&gt;, &lt;&amp;ccu CLK_BUS_LCD&gt;,</span></span><br><span class="line"><span class="comment">                &lt;&amp;ccu CLK_TCON&gt;;</span></span><br><span class="line"><span class="comment">            status = &quot;okay&quot;;</span></span><br><span class="line"><span class="comment">        &#125;;</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line">    &#125;;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    panel: panel &#123;</span></span><br><span class="line"><span class="comment">        compatible = &quot;bananapi,s070wv20-ct16&quot;, &quot;simple-panel&quot;;</span></span><br><span class="line"><span class="comment">        #address-cells = &lt;1&gt;;</span></span><br><span class="line"><span class="comment">        #size-cells = &lt;0&gt;;</span></span><br><span class="line"><span class="comment">        power-supply = &lt;&amp;reg_vcc3v3&gt;;</span></span><br><span class="line"><span class="comment">        port@0 &#123;</span></span><br><span class="line"><span class="comment">            reg = &lt;0&gt;;</span></span><br><span class="line"><span class="comment">            #address-cells = &lt;1&gt;;</span></span><br><span class="line"><span class="comment">            #size-cells = &lt;0&gt;;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">            panel_input: endpoint@0 &#123;</span></span><br><span class="line"><span class="comment">                reg = &lt;0&gt;;</span></span><br><span class="line"><span class="comment">                remote-endpoint = &lt;&amp;tcon0_out_lcd&gt;;</span></span><br><span class="line"><span class="comment">            &#125;;</span></span><br><span class="line"><span class="comment">        &#125;;</span></span><br><span class="line"><span class="comment">    &#125;;</span></span><br><span class="line"><span class="comment">    </span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    </span><br><span class="line">    pcm5102a: pcm510x &#123;</span><br><span class="line">        compatible = <span class="string">&quot;ti,pcm5102a&quot;</span>;</span><br><span class="line">        pcm510x,format = <span class="string">&quot;i2s&quot;</span>;</span><br><span class="line">        <span class="meta">#sound-dai-cells = <span class="string">&lt;0&gt;</span>;</span></span><br><span class="line">    &#125;;</span><br><span class="line">    </span><br><span class="line">    sound_i2s &#123;</span><br><span class="line">        compatible = <span class="string">&quot;simple-audio-card&quot;</span>;</span><br><span class="line">        simple-audio,name=<span class="string">&quot;I2S-master&quot;</span>;</span><br><span class="line">        simple-audio-card,format = <span class="string">&quot;i2s&quot;</span>;</span><br><span class="line">        simple-audio-card,mclk-fs = &lt;<span class="number">128</span>&gt;;</span><br><span class="line">        </span><br><span class="line">        status = <span class="string">&quot;okay&quot;</span>;</span><br><span class="line"></span><br><span class="line">        simple-audio-card,cpu &#123;</span><br><span class="line">            sound-dai = &lt;&amp;i2s0&gt;;</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        simple-audio-card,codec &#123;</span><br><span class="line">            sound-dai = &lt;&amp;pcm5102a&gt;;</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;;</span><br><span class="line">        </span><br><span class="line">    leds &#123;</span><br><span class="line">        compatible = <span class="string">&quot;gpio-leds&quot;</span>;</span><br><span class="line">        </span><br><span class="line">        led0 &#123;</span><br><span class="line">            function = LED_FUNCTION_STATUS;</span><br><span class="line">            linux,<span class="keyword">default</span>-trigger = <span class="string">&quot;heartbeat&quot;</span>;</span><br><span class="line">            gpios = &lt;&amp;pio <span class="number">3</span> <span class="number">1</span> GPIO_ACTIVE_LOW&gt;;<span class="comment">//PD1 LED</span></span><br><span class="line">            <span class="keyword">default</span>-state = <span class="string">&quot;on&quot;</span>;</span><br><span class="line">            status = <span class="string">&quot;okay&quot;</span>;</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;;</span><br><span class="line">    ir_gpio &#123;</span><br><span class="line">    compatible  = <span class="string">&quot;gpio-ir-receiver&quot;</span>;</span><br><span class="line">    gpios = &lt;&amp;pio <span class="number">4</span> <span class="number">11</span> GPIO_ACTIVE_LOW&gt;; <span class="comment">/* PE11 */</span></span><br><span class="line">    <span class="comment">/*active_low = &lt;1&gt;;*/</span></span><br><span class="line">    linux,rc-<span class="built_in">map</span>-name = <span class="string">&quot;rc-tevii-nec&quot;</span>;</span><br><span class="line">    status = <span class="string">&quot;disabled&quot;</span>;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    backlight: backlight &#123;</span><br><span class="line">        compatible = <span class="string">&quot;pwm-backlight&quot;</span>; </span><br><span class="line">        brightness-levels = &lt;	<span class="number">0</span> <span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span> <span class="number">5</span> <span class="number">6</span> <span class="number">7</span> <span class="number">8</span> <span class="number">9</span> <span class="number">10</span> <span class="number">11</span> <span class="number">12</span> <span class="number">13</span> <span class="number">14</span> <span class="number">15</span></span><br><span class="line">                    <span class="number">16</span> <span class="number">17</span> <span class="number">18</span> <span class="number">19</span> <span class="number">20</span> <span class="number">21</span> <span class="number">22</span> <span class="number">23</span> <span class="number">24</span> <span class="number">25</span> <span class="number">26</span> <span class="number">27</span> <span class="number">28</span> <span class="number">29</span> <span class="number">30</span> <span class="number">31</span> <span class="number">32</span> <span class="number">33</span> <span class="number">34</span> <span class="number">35</span></span><br><span class="line">                    <span class="number">36</span> <span class="number">37</span> <span class="number">38</span> <span class="number">39</span> <span class="number">40</span> <span class="number">41</span> <span class="number">42</span> <span class="number">43</span> <span class="number">44</span> <span class="number">45</span> <span class="number">46</span> <span class="number">47</span> <span class="number">48</span> <span class="number">49</span> <span class="number">50</span> <span class="number">51</span> <span class="number">52</span> <span class="number">53</span> <span class="number">54</span> <span class="number">55</span></span><br><span class="line">                    <span class="number">56</span> <span class="number">57</span> <span class="number">58</span> <span class="number">59</span> <span class="number">60</span> <span class="number">61</span> <span class="number">62</span> <span class="number">63</span> <span class="number">64</span> <span class="number">65</span> <span class="number">66</span> <span class="number">67</span> <span class="number">68</span> <span class="number">69</span> <span class="number">70</span> <span class="number">71</span> <span class="number">72</span> <span class="number">73</span> <span class="number">74</span> <span class="number">75</span></span><br><span class="line">                    <span class="number">76</span> <span class="number">77</span> <span class="number">78</span> <span class="number">79</span> <span class="number">80</span> <span class="number">81</span> <span class="number">82</span> <span class="number">83</span> <span class="number">84</span> <span class="number">85</span> <span class="number">86</span> <span class="number">87</span> <span class="number">88</span> <span class="number">89</span> <span class="number">90</span> <span class="number">91</span> <span class="number">92</span> <span class="number">93</span> <span class="number">94</span> <span class="number">95</span></span><br><span class="line">                    <span class="number">96</span> <span class="number">97</span> <span class="number">98</span> <span class="number">99</span> <span class="number">100</span> <span class="number">101</span> <span class="number">102</span> <span class="number">103</span> <span class="number">104</span> <span class="number">105</span> <span class="number">106</span> <span class="number">107</span> <span class="number">108</span> <span class="number">109</span> <span class="number">110</span> <span class="number">111</span> <span class="number">112</span> <span class="number">113</span> <span class="number">114</span> <span class="number">115</span> <span class="number">116</span></span><br><span class="line">                    <span class="number">117</span> <span class="number">118</span> <span class="number">119</span> <span class="number">120</span> <span class="number">121</span> <span class="number">122</span> <span class="number">123</span> <span class="number">124</span> <span class="number">125</span> <span class="number">126</span> <span class="number">127</span> <span class="number">128</span> <span class="number">129</span> <span class="number">130</span> <span class="number">131</span> <span class="number">132</span> <span class="number">133</span> <span class="number">134</span> <span class="number">135</span> <span class="number">136</span></span><br><span class="line">                    <span class="number">137</span> <span class="number">138</span> <span class="number">139</span> <span class="number">140</span> <span class="number">141</span> <span class="number">142</span> <span class="number">143</span> <span class="number">144</span> <span class="number">145</span> <span class="number">146</span> <span class="number">147</span> <span class="number">148</span> <span class="number">149</span> <span class="number">150</span> <span class="number">151</span> <span class="number">152</span> <span class="number">153</span> <span class="number">154</span> <span class="number">155</span> <span class="number">156</span></span><br><span class="line">                    <span class="number">157</span> <span class="number">158</span> <span class="number">159</span> <span class="number">160</span> <span class="number">161</span> <span class="number">162</span> <span class="number">163</span> <span class="number">164</span> <span class="number">165</span> <span class="number">166</span> <span class="number">167</span> <span class="number">168</span> <span class="number">169</span> <span class="number">170</span> <span class="number">171</span> <span class="number">172</span> <span class="number">173</span> <span class="number">174</span> <span class="number">175</span> <span class="number">176</span></span><br><span class="line">                    <span class="number">177</span> <span class="number">178</span> <span class="number">179</span> <span class="number">180</span> <span class="number">181</span> <span class="number">182</span> <span class="number">183</span> <span class="number">184</span> <span class="number">185</span> <span class="number">186</span> <span class="number">187</span> <span class="number">188</span> <span class="number">189</span> <span class="number">190</span> <span class="number">191</span> <span class="number">192</span> <span class="number">193</span> <span class="number">194</span> <span class="number">195</span> <span class="number">196</span></span><br><span class="line">                    <span class="number">197</span> <span class="number">198</span> <span class="number">199</span> <span class="number">200</span> <span class="number">201</span> <span class="number">202</span> <span class="number">203</span> <span class="number">204</span> <span class="number">205</span> <span class="number">206</span> <span class="number">207</span> <span class="number">208</span> <span class="number">209</span> <span class="number">210</span> <span class="number">211</span> <span class="number">212</span> <span class="number">213</span> <span class="number">214</span> <span class="number">215</span> <span class="number">216</span></span><br><span class="line">                    <span class="number">217</span> <span class="number">218</span> <span class="number">219</span> <span class="number">220</span> <span class="number">221</span> <span class="number">222</span> <span class="number">223</span> <span class="number">224</span> <span class="number">225</span> <span class="number">226</span> <span class="number">227</span> <span class="number">228</span> <span class="number">229</span> <span class="number">230</span> <span class="number">231</span> <span class="number">232</span> <span class="number">233</span> <span class="number">234</span> <span class="number">235</span> <span class="number">236</span></span><br><span class="line">                    <span class="number">237</span> <span class="number">238</span> <span class="number">239</span> <span class="number">240</span> <span class="number">241</span> <span class="number">242</span> <span class="number">243</span> <span class="number">244</span> <span class="number">245</span> <span class="number">246</span> <span class="number">247</span> <span class="number">248</span> <span class="number">249</span> <span class="number">250</span> <span class="number">251</span> <span class="number">252</span> <span class="number">253</span> <span class="number">254</span> <span class="number">255</span>&gt;; </span><br><span class="line">                        </span><br><span class="line">        <span class="keyword">default</span>-brightness-level = &lt;<span class="number">200</span>&gt;; </span><br><span class="line">        pwms = &lt;&amp;pwm <span class="number">1</span> <span class="number">5000000</span> <span class="number">0</span>&gt;;<span class="comment">//5000000为默认周期ns</span></span><br><span class="line">        <span class="comment">//enable-gpios = &lt;&amp;pio 5 6 0&gt;;</span></span><br><span class="line">        <span class="comment">//post-pwm-on-delay-ms = &lt;10&gt;;</span></span><br><span class="line">        <span class="comment">//pwm-off-delay-ms = &lt;10&gt;;</span></span><br><span class="line"></span><br><span class="line">        status = <span class="string">&quot;disabled&quot;</span>;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    rotary_vol &#123;</span><br><span class="line">        compatible = <span class="string">&quot;rotary-encoder&quot;</span>;</span><br><span class="line">        pinctrl-names = <span class="string">&quot;default&quot;</span>;</span><br><span class="line">        status = <span class="string">&quot;disabled&quot;</span>;</span><br><span class="line">        gpios = &lt;&amp;pio <span class="number">3</span> <span class="number">18</span> GPIO_ACTIVE_LOW&gt;, &lt;&amp;pio <span class="number">3</span> <span class="number">13</span> GPIO_ACTIVE_LOW&gt;;</span><br><span class="line">        linux,axis = &lt;<span class="number">0</span>&gt;;</span><br><span class="line">        rotary-encoder,encoding = <span class="string">&quot;gray&quot;</span>;</span><br><span class="line">        rotary-encoder,relative-axis;</span><br><span class="line">    &#125;;</span><br><span class="line">    rotary_gain &#123;</span><br><span class="line">        compatible = <span class="string">&quot;rotary-encoder&quot;</span>;</span><br><span class="line">        pinctrl-names = <span class="string">&quot;default&quot;</span>;</span><br><span class="line">        status = <span class="string">&quot;disabled&quot;</span>;</span><br><span class="line">        gpios = &lt;&amp;pio <span class="number">3</span> <span class="number">15</span> GPIO_ACTIVE_LOW&gt;, &lt;&amp;pio <span class="number">3</span> <span class="number">19</span> GPIO_ACTIVE_LOW&gt;;</span><br><span class="line">        linux,axis = &lt;<span class="number">0</span>&gt;;</span><br><span class="line">        rotary-encoder,encoding = <span class="string">&quot;gray&quot;</span>;</span><br><span class="line">        rotary-encoder,relative-axis;</span><br><span class="line">    &#125;;</span><br><span class="line">    rotary_fx &#123;</span><br><span class="line">        compatible = <span class="string">&quot;rotary-encoder&quot;</span>;</span><br><span class="line">        pinctrl-names = <span class="string">&quot;default&quot;</span>;</span><br><span class="line">        status = <span class="string">&quot;disabled&quot;</span>;</span><br><span class="line">        gpios = &lt;&amp;pio <span class="number">3</span> <span class="number">21</span> GPIO_ACTIVE_LOW&gt;, &lt;&amp;pio <span class="number">3</span> <span class="number">16</span> GPIO_ACTIVE_LOW&gt;;</span><br><span class="line">        linux,axis = &lt;<span class="number">0</span>&gt;;</span><br><span class="line">        rotary-encoder,encoding = <span class="string">&quot;gray&quot;</span>;</span><br><span class="line">        rotary-encoder,relative-axis;</span><br><span class="line">    &#125;;</span><br><span class="line">    rotary_btns&#123;</span><br><span class="line">        compatible = <span class="string">&quot;gpio-keys&quot;</span>;</span><br><span class="line">        pinctrl-names = <span class="string">&quot;default&quot;</span>;</span><br><span class="line">        autorepeat = &lt;<span class="number">1</span>&gt;;</span><br><span class="line">        label = <span class="string">&quot;rotary_btns&quot;</span>;</span><br><span class="line">        status = <span class="string">&quot;disabled&quot;</span>;</span><br><span class="line">        btn_vol&#123;</span><br><span class="line">            label = <span class="string">&quot;btn_vol&quot;</span>;</span><br><span class="line">            gpios = &lt;&amp;pio <span class="number">3</span> <span class="number">17</span> GPIO_ACTIVE_LOW&gt;;</span><br><span class="line">            linux,code = &lt;KEY_UP&gt;;</span><br><span class="line">        &#125;;</span><br><span class="line">        btn_gain&#123;</span><br><span class="line">            label = <span class="string">&quot;btn_gain&quot;</span>;</span><br><span class="line">            gpios = &lt;&amp;pio <span class="number">3</span> <span class="number">14</span> GPIO_ACTIVE_LOW&gt;;</span><br><span class="line">            linux,code = &lt;KEY_DOWN&gt;;</span><br><span class="line">        &#125;;</span><br><span class="line">        btn_fx&#123;</span><br><span class="line">            label = <span class="string">&quot;btn_fx&quot;</span>;</span><br><span class="line">            gpios = &lt;&amp;pio <span class="number">3</span> <span class="number">20</span> GPIO_ACTIVE_LOW&gt;;</span><br><span class="line">            linux,code = &lt;KEY_LEFT&gt;;</span><br><span class="line">        &#125;;</span><br><span class="line">        </span><br><span class="line">    &#125;;</span><br><span class="line">    </span><br><span class="line">    reg_vcc3v3: vcc3v3 &#123;</span><br><span class="line">        compatible = <span class="string">&quot;regulator-fixed&quot;</span>;</span><br><span class="line">        regulator-name = <span class="string">&quot;vcc3v3&quot;</span>;</span><br><span class="line">        regulator-min-microvolt = &lt;<span class="number">3300000</span>&gt;;</span><br><span class="line">        regulator-max-microvolt = &lt;<span class="number">3300000</span>&gt;;</span><br><span class="line">        status = <span class="string">&quot;okay&quot;</span>;</span><br><span class="line">    &#125;;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    amp_pwr:v_pwr &#123;</span><br><span class="line">        compatible = <span class="string">&quot;regulator-fixed&quot;</span>;</span><br><span class="line">        regulator-name = <span class="string">&quot;amp_power&quot;</span>;</span><br><span class="line">        regulator-min-microvolt = &lt;<span class="number">12000000</span>&gt;;</span><br><span class="line">        regulator-max-microvolt = &lt;<span class="number">12000000</span>&gt;;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//gpio = &lt;&amp;pio 4 6 GPIO_ACTIVE_HIGH&gt;;</span></span><br><span class="line">        <span class="comment">//startup-delay-us = &lt;70000&gt;;</span></span><br><span class="line">        <span class="comment">//enable-active-high;</span></span><br><span class="line">        <span class="comment">//regulator-boot-on;</span></span><br><span class="line">        status = <span class="string">&quot;disabled&quot;</span>;</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">&amp;i2s0 &#123;</span><br><span class="line">    pinctrl<span class="number">-0</span> = &lt;&amp;i2s_pd_pins&gt;;</span><br><span class="line">    pinctrl-names = <span class="string">&quot;default&quot;</span>;</span><br><span class="line">    power-supply = &lt;&amp;reg_vcc3v3&gt;;</span><br><span class="line">    sound-dai = &lt;&amp;pcm5102a&gt;;</span><br><span class="line">    status = <span class="string">&quot;okay&quot;</span>;</span><br><span class="line">&#125;;	</span><br><span class="line">&amp;pwm &#123;</span><br><span class="line">    pinctrl-names = <span class="string">&quot;default&quot;</span>;</span><br><span class="line">    pinctrl<span class="number">-0</span> = &lt;&amp;pwm1_pe_pins&gt;;</span><br><span class="line">    status = <span class="string">&quot;disabled&quot;</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">&amp;i2c0 &#123;</span><br><span class="line">    pinctrl-names = <span class="string">&quot;default&quot;</span>;</span><br><span class="line">    pinctrl<span class="number">-0</span> = &lt;&amp;i2c0_pd_pins&gt;;</span><br><span class="line">    status = <span class="string">&quot;okay&quot;</span>;</span><br><span class="line"></span><br><span class="line">    rtp@<span class="number">48</span> &#123;</span><br><span class="line">        compatible = <span class="string">&quot;ti,tsc2007&quot;</span>;</span><br><span class="line">        reg = &lt;<span class="number">0x48</span>&gt;;</span><br><span class="line">        interrupt-parent = &lt;&amp;pio&gt;;</span><br><span class="line">        interrupts = &lt;<span class="number">4</span> <span class="number">5</span> IRQ_TYPE_EDGE_FALLING&gt;;</span><br><span class="line">        gpios = &lt;&amp;pio <span class="number">4</span> <span class="number">5</span> GPIO_ACTIVE_LOW&gt;;</span><br><span class="line">        pendown-gpio = &lt;&amp;pio <span class="number">4</span> <span class="number">5</span> GPIO_ACTIVE_LOW&gt;;</span><br><span class="line">        ti,x-plate-ohms = &lt;<span class="number">660</span>&gt;;</span><br><span class="line">        wakeup-source;</span><br><span class="line">        status = <span class="string">&quot;disabled&quot;</span>;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    pcm5121: pcm5121@4c &#123;</span></span><br><span class="line"><span class="comment">        compatible = &quot;ti,pcm5121&quot;;</span></span><br><span class="line"><span class="comment">        reg = &lt;0x4c&gt;;</span></span><br><span class="line"><span class="comment">        #sound-dai-cells = &lt;0&gt;;</span></span><br><span class="line"><span class="comment">        AVDD-supply = &lt;&amp;reg_vcc3v3&gt;;</span></span><br><span class="line"><span class="comment">        DVDD-supply = &lt;&amp;reg_vcc3v3&gt;;</span></span><br><span class="line"><span class="comment">        CPVDD-supply = &lt;&amp;reg_vcc3v3&gt;;</span></span><br><span class="line"><span class="comment">        status = &quot;disabled&quot;;</span></span><br><span class="line"><span class="comment">    &#125;;</span></span><br><span class="line"><span class="comment">    </span></span><br><span class="line"><span class="comment">    tas5805m: tas5805m@2c &#123;</span></span><br><span class="line"><span class="comment">        compatible = &quot;ti,tas5805m&quot;;</span></span><br><span class="line"><span class="comment">        reg = &lt;0x2c&gt;;</span></span><br><span class="line"><span class="comment">        #sound-dai-cells = &lt;0&gt;;</span></span><br><span class="line"><span class="comment">        pvdd-supply = &lt;&amp;amp_pwr&gt;;</span></span><br><span class="line"><span class="comment">        pinctrl-names = &quot;default&quot;;</span></span><br><span class="line"><span class="comment">        pdn-gpios = &lt;&amp;pio 3 3 GPIO_ACTIVE_LOW&gt;;</span></span><br><span class="line"><span class="comment">        ti,dsp-config-name = &quot;default_192kHz&quot;;</span></span><br><span class="line"><span class="comment">        status = &quot;okay&quot;;</span></span><br><span class="line"><span class="comment">    &#125;;</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    rtc@<span class="number">51</span> &#123;</span><br><span class="line">        compatible = <span class="string">&quot;nxp,pcf8563&quot;</span>;</span><br><span class="line">        reg = &lt;<span class="number">0x51</span>&gt;;</span><br><span class="line">        status = <span class="string">&quot;okay&quot;</span>;</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">&amp;spi1&#123;</span><br><span class="line">    status = <span class="string">&quot;okay&quot;</span>;</span><br><span class="line">    spidev@<span class="number">0</span>&#123;</span><br><span class="line">        compatible = <span class="string">&quot;rohm,dh2228fv&quot;</span>;</span><br><span class="line">        spi-max-frequency = &lt;<span class="number">50000000</span>&gt;;</span><br><span class="line">        reg = &lt;<span class="number">0</span>&gt;;</span><br><span class="line">        status = <span class="string">&quot;okay&quot;</span>;</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">&amp;spi0 &#123;</span><br><span class="line">    status = <span class="string">&quot;okay&quot;</span>;</span><br><span class="line">    power-supply = &lt;&amp;reg_vcc3v3&gt;;</span><br><span class="line">    spi-nor@<span class="number">0</span> &#123;</span><br><span class="line">        <span class="meta">#address-cells = <span class="string">&lt;1&gt;</span>;</span></span><br><span class="line">        <span class="meta">#size-cells = <span class="string">&lt;1&gt;</span>;</span></span><br><span class="line">        compatible = <span class="string">&quot;winbond,w25q128&quot;</span>, <span class="string">&quot;jedec,spi-nor&quot;</span>;</span><br><span class="line">        reg = &lt;<span class="number">0</span>&gt;;</span><br><span class="line">        spi-max-frequency = &lt;<span class="number">50000000</span>&gt;;</span><br><span class="line">        status = <span class="string">&quot;okay&quot;</span>;</span><br><span class="line"></span><br><span class="line">        partitions &#123;</span><br><span class="line">            compatible = <span class="string">&quot;fixed-partitions&quot;</span>;</span><br><span class="line">            <span class="meta">#address-cells = <span class="string">&lt;1&gt;</span>;</span></span><br><span class="line">            <span class="meta">#size-cells = <span class="string">&lt;1&gt;</span>;</span></span><br><span class="line">            <span class="comment">//512KB</span></span><br><span class="line">            partition@<span class="number">0</span> &#123;</span><br><span class="line">                label = <span class="string">&quot;u-boot&quot;</span>;</span><br><span class="line">                reg = &lt;<span class="number">0x000000</span> <span class="number">0x80000</span>&gt;;</span><br><span class="line">                read-only;</span><br><span class="line">            &#125;;</span><br><span class="line"></span><br><span class="line">            partition@<span class="number">1</span> &#123;</span><br><span class="line">                label = <span class="string">&quot;kernel&quot;</span>;</span><br><span class="line">                reg = &lt;<span class="number">0x80000</span> <span class="number">0x500000</span>&gt;;</span><br><span class="line">                read-only;</span><br><span class="line">            &#125;;</span><br><span class="line">            partition@<span class="number">2</span> &#123;</span><br><span class="line">                label = <span class="string">&quot;rom&quot;</span>;</span><br><span class="line">                reg = &lt;<span class="number">0x580000</span> <span class="number">0xa00000</span>&gt;;</span><br><span class="line">                read-only;</span><br><span class="line">            &#125;;</span><br><span class="line"></span><br><span class="line">            partition@<span class="number">3</span> &#123;</span><br><span class="line">                label = <span class="string">&quot;overlay&quot;</span>;</span><br><span class="line">                reg = &lt;<span class="number">0xe00000</span> <span class="number">0x200000</span>&gt;;</span><br><span class="line">            &#125;;</span><br><span class="line"></span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    spi-nand@<span class="number">0</span> &#123;</span><br><span class="line">        <span class="meta">#address-cells = <span class="string">&lt;1&gt;</span>;</span></span><br><span class="line">        <span class="meta">#size-cells = <span class="string">&lt;1&gt;</span>;</span></span><br><span class="line">        compatible = <span class="string">&quot;spi-nand&quot;</span>;</span><br><span class="line">        reg = &lt;<span class="number">0</span>&gt;;</span><br><span class="line">        spi-max-frequency = &lt;<span class="number">50000000</span>&gt;;</span><br><span class="line">        status = <span class="string">&quot;disabled&quot;</span>;</span><br><span class="line">        partitions &#123;</span><br><span class="line">            compatible = <span class="string">&quot;fixed-partitions&quot;</span>;</span><br><span class="line">            <span class="meta">#address-cells = <span class="string">&lt;1&gt;</span>;</span></span><br><span class="line">            <span class="meta">#size-cells = <span class="string">&lt;1&gt;</span>;</span></span><br><span class="line"></span><br><span class="line">            partition@<span class="number">0</span> &#123;</span><br><span class="line">                label = <span class="string">&quot;u-boot&quot;</span>;</span><br><span class="line">                reg = &lt;<span class="number">0x000000</span> <span class="number">0x100000</span>&gt;;</span><br><span class="line">                read-only;</span><br><span class="line">            &#125;;</span><br><span class="line"></span><br><span class="line">            partition@<span class="number">1</span> &#123;</span><br><span class="line">                label = <span class="string">&quot;kernel&quot;</span>;</span><br><span class="line">                reg = &lt;<span class="number">0x100000</span> <span class="number">0x500000</span>&gt;;</span><br><span class="line">                read-only;</span><br><span class="line">            &#125;;</span><br><span class="line"></span><br><span class="line">            partition@<span class="number">2</span> &#123;</span><br><span class="line">                label = <span class="string">&quot;rom&quot;</span>;</span><br><span class="line">                reg = &lt;<span class="number">0x600000</span> <span class="number">0x2a00000</span>&gt;;</span><br><span class="line">                read-only;</span><br><span class="line">            &#125;;</span><br><span class="line"></span><br><span class="line">            partition@<span class="number">3</span> &#123;</span><br><span class="line">                label = <span class="string">&quot;vendor&quot;</span>;</span><br><span class="line">                reg = &lt;<span class="number">0x3000000</span> <span class="number">0x1000000</span>&gt;;</span><br><span class="line">            &#125;;</span><br><span class="line"></span><br><span class="line">            partition@<span class="number">4</span> &#123;</span><br><span class="line">                label = <span class="string">&quot;overlay&quot;</span>;</span><br><span class="line">                reg = &lt;<span class="number">0x4000000</span> <span class="number">0x3000000</span>&gt;;</span><br><span class="line">            &#125;;</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;cir&#123; </span><br><span class="line"></span><br><span class="line">    pinctrl-names = <span class="string">&quot;default&quot;</span>;</span><br><span class="line">    pinctrl<span class="number">-0</span> = &lt;&amp;cir_pins_a&gt;;</span><br><span class="line">    linux,rc-<span class="built_in">map</span>-name = <span class="string">&quot;rc-nec-remote&quot;</span>;</span><br><span class="line">    status = <span class="string">&quot;disabled&quot;</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;uart0 &#123;</span><br><span class="line">    pinctrl-names = <span class="string">&quot;default&quot;</span>;</span><br><span class="line">    pinctrl<span class="number">-0</span> = &lt;&amp;uart0_pe_pins&gt;;</span><br><span class="line">    status = <span class="string">&quot;okay&quot;</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">&amp;uart1 &#123;</span><br><span class="line">    pinctrl-names = <span class="string">&quot;default&quot;</span>;</span><br><span class="line">    pinctrl<span class="number">-0</span> = &lt;&amp;uart1_pa_pins&gt;;</span><br><span class="line">    status = <span class="string">&quot;okay&quot;</span>;</span><br><span class="line">&#125;;</span><br><span class="line">&amp;mmc0 &#123;</span><br><span class="line">    power-supply = &lt;&amp;reg_vcc3v3&gt;;</span><br><span class="line">    status = <span class="string">&quot;okay&quot;</span>;</span><br><span class="line">    broken-cd;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">&amp;otg_sram &#123;</span><br><span class="line">    status = <span class="string">&quot;okay&quot;</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">&amp;usb_otg &#123;</span><br><span class="line">    dr_mode = <span class="string">&quot;otg&quot;</span>;<span class="comment">/* 三个可选项: otg / host / peripheral  我在这里指定为host模式*/</span></span><br><span class="line">    status = <span class="string">&quot;okay&quot;</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">&amp;usbphy &#123;</span><br><span class="line">    usb0_id_det = &lt;&amp;pio <span class="number">4</span> <span class="number">2</span> GPIO_ACTIVE_HIGH&gt;; <span class="comment">/* PE2 */</span></span><br><span class="line">    status = <span class="string">&quot;okay&quot;</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">&amp;cedar_ve &#123;</span><br><span class="line">    status = <span class="string">&quot;disabled&quot;</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">&amp;ion &#123;</span><br><span class="line">    status = <span class="string">&quot;disabled&quot;</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">&amp;de &#123;</span><br><span class="line">    status = <span class="string">&quot;disabled&quot;</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">&amp;fe0 &#123;</span><br><span class="line">    status = <span class="string">&quot;disabled&quot;</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">&amp;be0 &#123;</span><br><span class="line">    status = <span class="string">&quot;disabled&quot;</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">&amp;tve0 &#123;</span><br><span class="line">    status = <span class="string">&quot;disabled&quot;</span>;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">&amp;tcon0 &#123;</span></span><br><span class="line"><span class="comment">    pinctrl-names = &quot;default&quot;;</span></span><br><span class="line"><span class="comment">    pinctrl-0 = &lt;&amp;lcd_rgb565_pins&gt;;</span></span><br><span class="line"><span class="comment">    status = &quot;disabled&quot;;</span></span><br><span class="line"><span class="comment">&#125;;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">&amp;tcon0_out &#123;</span></span><br><span class="line"><span class="comment">    tcon0_out_lcd: endpoint@0 &#123;</span></span><br><span class="line"><span class="comment">        reg = &lt;0&gt;;</span></span><br><span class="line"><span class="comment">        remote-endpoint = &lt;&amp;panel_input&gt;;</span></span><br><span class="line"><span class="comment">    &#125;;</span></span><br><span class="line"><span class="comment">&#125;;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">&amp;codec &#123;</span><br><span class="line">    allwinner,audio-routing =</span><br><span class="line">        <span class="string">&quot;Headphone&quot;</span>, <span class="string">&quot;HP&quot;</span>,</span><br><span class="line">        <span class="string">&quot;Headphone&quot;</span>, <span class="string">&quot;HPCOM&quot;</span>,</span><br><span class="line">        <span class="string">&quot;LINEIN&quot;</span>, <span class="string">&quot;Line In&quot;</span>,</span><br><span class="line">        <span class="string">&quot;FMINL&quot;</span>, <span class="string">&quot;Left FM In&quot;</span>,</span><br><span class="line">        <span class="string">&quot;FMINR&quot;</span>, <span class="string">&quot;Right FM In&quot;</span>,</span><br><span class="line">        <span class="string">&quot;MIC&quot;</span>, <span class="string">&quot;Mic&quot;</span>;</span><br><span class="line">    status = <span class="string">&quot;okay&quot;</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;lradc &#123;</span><br><span class="line">    vref-supply = &lt;&amp;reg_vcc3v0&gt;;</span><br><span class="line">    status = <span class="string">&quot;disabled&quot;</span>;</span><br><span class="line"></span><br><span class="line">    button<span class="number">-200</span> &#123;</span><br><span class="line">        label = <span class="string">&quot;PageDown&quot;</span>;</span><br><span class="line">        linux,code = &lt;KEY_PAGEDOWN&gt;;</span><br><span class="line">        channel = &lt;<span class="number">0</span>&gt;;</span><br><span class="line">        voltage = &lt;<span class="number">200000</span>&gt;;</span><br><span class="line">    &#125;;</span><br><span class="line">    button<span class="number">-400</span> &#123;</span><br><span class="line">        label = <span class="string">&quot;Right&quot;</span>;</span><br><span class="line">        linux,code = &lt;KEY_RIGHT&gt;;</span><br><span class="line">        channel = &lt;<span class="number">0</span>&gt;;</span><br><span class="line">        voltage = &lt;<span class="number">400000</span>&gt;;</span><br><span class="line">    &#125;;</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    button<span class="number">-600</span> &#123;</span><br><span class="line">        label = <span class="string">&quot;Enter&quot;</span>;</span><br><span class="line">        linux,code = &lt;KEY_ENTER&gt;;</span><br><span class="line">        channel = &lt;<span class="number">0</span>&gt;;</span><br><span class="line">        voltage = &lt;<span class="number">600000</span>&gt;;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    button<span class="number">-800</span> &#123;</span><br><span class="line">        label = <span class="string">&quot;Left&quot;</span>;</span><br><span class="line">        linux,code = &lt;KEY_LEFT&gt;;</span><br><span class="line">        channel = &lt;<span class="number">0</span>&gt;;</span><br><span class="line">        voltage = &lt;<span class="number">800000</span>&gt;;</span><br><span class="line">    &#125;;</span><br><span class="line">    button<span class="number">-1000</span> &#123;</span><br><span class="line">        label = <span class="string">&quot;PageUp&quot;</span>;</span><br><span class="line">        linux,code = &lt;KEY_PAGEUP&gt;;</span><br><span class="line">        channel = &lt;<span class="number">0</span>&gt;;</span><br><span class="line">        voltage = &lt;<span class="number">1000000</span>&gt;;</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="软件编写"><a href="#软件编写" class="headerlink" title="软件编写"></a>软件编写</h2><h3 id="使用-dev-ttyS1与BM64模块通信"><a href="#使用-dev-ttyS1与BM64模块通信" class="headerlink" title="使用&#x2F;dev&#x2F;ttyS1与BM64模块通信"></a>使用&#x2F;dev&#x2F;ttyS1与BM64模块通信</h3><h3 id="使用-dev-spidev1-0与RGB灯通信"><a href="#使用-dev-spidev1-0与RGB灯通信" class="headerlink" title="使用&#x2F;dev&#x2F;spidev1.0与RGB灯通信"></a>使用&#x2F;dev&#x2F;spidev1.0与RGB灯通信</h3><h3 id="使用GPIOD操作GPIO来检测按键及编码器"><a href="#使用GPIOD操作GPIO来检测按键及编码器" class="headerlink" title="使用GPIOD操作GPIO来检测按键及编码器"></a>使用GPIOD操作GPIO来检测按键及编码器</h3><h3 id="使用-dev-i2c-0与TAS5805M-PCF8563通信"><a href="#使用-dev-i2c-0与TAS5805M-PCF8563通信" class="headerlink" title="使用&#x2F;dev&#x2F;i2c-0与TAS5805M,PCF8563通信"></a>使用&#x2F;dev&#x2F;i2c-0与TAS5805M,PCF8563通信</h3><h3 id="I2S-16BIT-44-1K-192K-信号与BM64-24BIT-48K-信号进入TAS5805M功放"><a href="#I2S-16BIT-44-1K-192K-信号与BM64-24BIT-48K-信号进入TAS5805M功放" class="headerlink" title="I2S(16BIT 44.1K-192K)信号与BM64(24BIT 48K)信号进入TAS5805M功放"></a>I2S(16BIT 44.1K-192K)信号与BM64(24BIT 48K)信号进入TAS5805M功放</h3><h2 id="整机组装调试"><a href="#整机组装调试" class="headerlink" title="整机组装调试"></a>整机组装调试</h2>]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>F1C100S</tag>
        <tag>F1C200S</tag>
        <tag>ARM9</tag>
        <tag>I2S</tag>
        <tag>PCM5102</tag>
        <tag>TAS5805M</tag>
      </tags>
  </entry>
  <entry>
    <title>在V3S上使用红外接收头</title>
    <url>/pages/16a7/</url>
    <content><![CDATA[<ol>
<li><p>确定要使用的GPIO,这里需要使用带外部中断的引脚,否则驱动注册失败 request:-22 </p>
<p> 这是我的设备树配置<br> ir_gpio {<br> compatible  &#x3D; “gpio-ir-receiver”;<br> gpios &#x3D; &lt;&amp;pio 1 5 GPIO_ACTIVE_LOW&gt;; &#x2F;* PB5 *&#x2F;<br> &#x2F;<em>active_low &#x3D; &lt;1&gt;;</em>&#x2F;<br> linux,rc-map-name &#x3D; “rc-tevii-nec”;<br> status &#x3D; “okay”;<br> };</p>
</li>
<li><p>内核里修改 </p>
<blockquote>
<p>Device Drivers &gt; Remote Controller support &gt;<br>     [<em>]   LIRC user interface<br>     [</em>]   Remote controller decoders  —&gt;<br>     [*]   Remote Controller devices  —&gt;<br>           &lt;*&gt;   GPIO IR remote control </p>
</blockquote>
</li>
<li><p>驱动成功加载会有如下输出</p>
<p> [    1.223257] IR NEC protocol handler initialized<br> [    1.227806] IR RC5(x&#x2F;sz) protocol handler initialized<br> [    1.232985] IR RC6 protocol handler initialized<br> [    1.237517] IR JVC protocol handler initialized<br> [    1.242080] IR Sony protocol handler initialized<br> [    1.246693] IR SANYO protocol handler initialized<br> [    1.251406] IR Sharp protocol handler initialized<br> [    1.256104] IR RCMM protocol handler initialized<br> [    1.261050] Registered IR keymap rc-tevii-nec<br> [    1.265477] rc rc0: gpio_ir_recv as &#x2F;devices&#x2F;platform&#x2F;ir_gpio&#x2F;rc&#x2F;rc0<br> [    1.272194] rc rc0: lirc_dev: driver gpio_ir_recv registered at minor &#x3D; 0, raw IR receiver, no transmitter<br> [    1.282144] input: gpio_ir_recv as &#x2F;devices&#x2F;platform&#x2F;ir_gpio&#x2F;rc&#x2F;rc0&#x2F;input3</p>
</li>
<li><p>此时查看&#x2F;dev&#x2F;input目录下,会有如下显示：</p>
<pre><code> # evtest 
 No device specified, trying to scan all of /dev/input/event*
 Available devices:
 /dev/input/event0:      1c22800.lradc
 /dev/input/event1:      rotary@0
 /dev/input/event2:      ns2009_ts
 /dev/input/event3:      gpio_ir_recv
</code></pre>
<p> 此时如果用evtest测试按键是没有任何反应的，拿示波器测试信号是正常的<br> 没有问题，可就是evtest 没有任何反应,需要修改对应的驱动，此问题先留在这里<br> 不影响后续操作</p>
</li>
<li><p>后来查资料，发现可以用lirc里的工具去测试硬件是否OK,测试之前要先修改默认配置文件，不修改的话，同样没反应</p>
<pre><code> # vi /etc/lirc/lirc_options.conf 
 driver          = default
 device          = /dev/lric0
 修改这2行就可以，里边driver默认是uinput,device默认是auto
 再次测试就有反应了
 # mode2 -m -d /dev/lirc0
 Using driver default on device /dev/lirc0
 Trying device: /dev/lirc0
 Using device: /dev/lirc0
 Warning: Running as root.
    9043     4402      626      497      656      499
     624      499      656      499      624      499
     656      499      624      499      624      531
     624     1630      619     1624      655     1624
     624     1624      624     1634      646     1624
     624     1624      655     1624      593     1656
     624      501      654     1624      593      534
     652     1624      624      499      625     1624
     656      504      619      499      655     1625
     624      499      656     1625      593      531
     624     1633      648      498      624     1624
     624    40035  
    9060     2184      624   143451-pulse   483450-space
</code></pre>
<p> 从这结果上可以明显的看出这些数值代表脉冲宽度，单位是us </p>
</li>
<li><p>使用irrecod -f -d &#x2F;dev&#x2F;lirc0 –disable-namespace来录制配置文件<br> 录制完成后放到 &#x2F;etc&#x2F;lric&#x2F;liricd.conf.d&#x2F;下边<br> !注意，这里录制的结果不准确，需要借助上边的命令来获取每一个按键的值,这里只是借用一下配置文件的格式,里边的数字是右对齐<br> 示例：</p>
<pre><code> # Please take the time to finish this file as described in
 # https://sourceforge.net/p/lirc-remotes/wiki/Checklist/
 # and make it available to others by sending it to
 # &lt;lirc@bartelmus.de&gt;
 #
 # This config file was automatically generated
 # using lirc-0.10.1(default) on Thu Jan  1 01:37:06 1970
 # Command line used: -f -d /dev/lirc0 --disable-namespace
 # Kernel version (uname -r): 5.10.19
 #
 # Remote name (as of config file): elac
 # Brand of remote device, the thing you hold in your hand:
 # Remote device model nr:
 # Remote device info url:
 # Does remote device has a bundled capture device e. g., a
 #     usb dongle? :
 # For bundled USB devices: usb vendor id, product id
 #     and device string (use dmesg or lsusb):
 # Type of device controlled
 #     (TV, VCR, Audio, DVD, Satellite, Cable, HTPC, ...) :
 # Device(s) controlled by this remote:

 begin remote

 name  elac
 flags RAW_CODES|CONST_LENGTH
 eps            30
 aeps          100

 gap          108533

     begin raw_codes

         name Power
        9043     4403      623      531      593      531
         624      531      593      531      624      531
         593      531      624      531      593      536
         594     1680      592     1656      593     1656
         625     1655      593     1666      582     1656
         624     1656      593     1655      625      530
         593      534      621      530      593     1656
         624     1624      624      531      593      530
         624      531      595     1655      623     1655
         593     1656      593      530      624      531
         593     1664      616     1656      593     1656
         593

         name BT
        9041     4407      622      531      593      531
         593      562      593      531      593      531
         625      533      596      525      624      530
         593     1656      624     1656      593     1655
         593     1664      616     1655      593     1656
         593     1656      624     1658      591      530
         624     1656      593      531      624      531
         593      531      593      531      624     1661
         587      530      624     1656      593      531
         593     1687      593     1656      601     1648
         624     1656      593      531      593     1656
         624

     name Vol+
        9013     4437      592      530      593      562
         593      531      624      531      593      531
         594      565      589      530      593      531
         624     1656      593     1656      624     1665
         590     1651      591     1656      624     1655
         593     1656      593     1667      613      531
         593     1656      624     1656      593      531
         593      562      595      528      593     1656
         624      531      593     1656      624      531
         593      530      593     1659      621     1655
         593     1656      593      562      593     1656
         593
         
     name Vol-
        9044     4436      592      531      624      531
         593      533      622      530      593      531
         593      531      624      531      593      530
         624     1656      593     1661      595     1679
         593     1655      593     1656      624     1656
         593     1667      582     1659      620      530
         593     1656      624     1656      600      524
         624     1656      593      531      593      531
         624      531      593     1656      624      531
         598      530      620     1654      593      531
         624     1625      624     1656      593     1666
         614

     name Pre
        9048     4403      592      562      593      530
         593      562      593      530      593      531
         624      531      593      531      624      531
         593     1661      593     1680      592     1656
         593     1656      624     1656      603     1650
         588     1656      623     1656      593     1656
         624     1662      587     1655      593      531
         624      531      593      531      624     1656
         593      531      631      524      593      530
         593      562      593     1656      593     1656
         624     1663      586      530      624     1624
         624
         
     name Next
        9022     4425      593      530      624      531
         593      531      624      531      597      527
         623      531      593      531      593      562
         593     1656      593     1656      624     1663
         585     1655      624     1656      593     1656
         593     1656      633     1646      593     1656
         593      562      593     1656      593      530
         624     1658      591      531      593      562
         593      531      624      531      593     1656
         624      499      624     1659      591      530
         624     1656      593     1656      593     1687
         601
         
     name Play
        9027     4431      592      531      624      531
         593      531      624      531      593      531
         593      562      593      531      624      531
         598     1652      592     1655      624     1656
         593     1656      624     1633      616     1656
         593     1656      624     1624      624     1656
         595      529      624     1656      593      531
         593     1687      593      531      593     1665
         620      526      592      530      624     1656
         593      531      594     1655      624      531
         593     1665      615      531      593     1656
         624
         
     name Ana1
        9044     4408      621      530      593      530
         624      531      593      531      593      562
         593      531      593      562      593      531
         593     1655      624     1656      593     1655
         597     1654      621     1655      593     1655
         624     1624      624     1665      584      530
         625      530      593     1656      593      562
         593      531      624      499      624      531
         599      525      624     1655      593     1656
         593      562      593     1656      593     1659
         621     1655      593     1656      593     1656
         624
         
     name Ana2
        9040     4402      656      500      624      499
         656      499      624      499      624      531
         624      499      624      531      624      499
         624     1632      655     1628      589     1650
         593     1655      624     1655      593     1670
         610     1656      593     1656      593      531
         624     1656      596     1655      590      562
         593      531      624      500      624      531
         593      531      624     1656      599      529
         620      530      593     1656      624     1625
         624     1656      593     1662      619     1656
         593
         
     name Opt1
        9016     4435      624      530      593      531
         624      533      591      531      624      531
         593      531      593      562      593      531
         593     1656      624     1685      564     1655
         624     1624      624     1656      593     1656
         637     1643      593     1656      593      531
         624      531      593     1656      624      531
         596     1653      624      531      593      531
         593      562      593     1656      593     1656
         630      526      591     1656      624      531
         593     1656      593     1656      624     1664
         585
         
     name Opt2
        9043     4403      655      499      624      499
         656      499      627      497      656      499
         624      499      625      530      624      502
         628     1618      655     1654      601     1619
         623     1624      656     1624      624     1624
         656     1636      613     1625      624      499
         656      499      624      499      656      499
         624     1626      622      531      624      499
         624      531      624     1624      624     1624
         624     1662      618     1624      624      499
         656     1624      624     1624      624     1665
         615
         
     name Coax
        9015     4439      591      531      624      531
         593      530      624      531      593      531
         593      562      593      531      593      531
         624     1656      593     1656      624     1656
         611     1642      589     1655      624     1656
         593     1656      593     1668      613     1655
         593     1656      593     1656      624      531
         593     1658      622      531      593      530
         593      562      593      531      624      531
         656      468      593     1656      630      525
         592     1655      593     1687      593     1656
         593
     name USB
        9050     4433      593      531      594      561
         593      531      593      531      624      531
         593      531      624      530      593      531
         624     1656      603     1645      593     1656
         624     1656      593     1655      624     1659
         590     1655      593     1656      624      531
         593      531      624      531      593      537
         618      530      593      531      624     1656
         593      531      624     1624      624     1662
         587     1655      624     1655      593     1656
         593     1656      632      523      593     1656
         624
     
     end raw_codes

 end remote
</code></pre>
</li>
<li><p>接下来使用irw来验证刚才录制的是否正确<br> # irw<br> lircd-0.10.1[432]: Notice: accepted new client on &#x2F;var&#x2F;run&#x2F;lirc&#x2F;lircd<br> lircd-0.10.1[432]: Info: [lirc] protocol is enabled<br> 0000000000000001 00 Power elac<br> 0000000000000002 00 BT elac<br> 0000000000000003 00 Vol+ elac<br> 0000000000000004 00 Vol- elac<br> 0000000000000008 00 Ana1 elac<br> 000000000000000a 00 Opt1 elac<br> 000000000000000b 00 Opt2 elac</p>
</li>
<li><p>然后在&#x2F;etc&#x2F;lirc&#x2F;目录下创建lircrc配置文件或~&#x2F;.lircrc<br> 格式如下<br> begin<br>         prog &#x3D; irexec<br>         button &#x3D; Power<br>         repeat &#x3D; 0<br>         config &#x3D; echo “power”<br> end<br> begin<br>         prog &#x3D; irexec<br>         button &#x3D; Vol+<br>         repeat &#x3D; 1<br>         config &#x3D; amixer -M -c 0 sset ‘Headphone’,0 1%+ &gt; &#x2F;dev&#x2F;null<br> end<br> begin<br>         prog &#x3D; irexec<br>         button &#x3D; Vol-<br>         repeat &#x3D; 1<br>         config &#x3D; amixer -M -c 0 sset ‘Headphone’,0 1%- &gt; &#x2F;dev&#x2F;null<br> end<br> 保存</p>
</li>
<li><p>最后就是使用irexec来进行各种操作了,无需编程，到这里可以自由发挥了，想要集成到代码里也很简单，看下图</p>
<pre><code> # irexec 
 lircd-0.10.1[448]: Notice: accepted new client on /var/run/lirc/lircd
 lircd-0.10.1[448]: Info: [lirc] protocol is enabled
 power
 Simple mixer control &#39;Headphone&#39;,0
 Capabilities: pvolume pvolume-joined pswitch
 Playback channels: Front Left - Front Right
 Limits: Playback 0 - 63
 Mono:
 Front Left: Playback 47 [54%] [-16.00dB] [on]
 Front Right: Playback 47 [54%] [-16.00dB] [on]
 Simple mixer control &#39;Headphone&#39;,0
 Capabilities: pvolume pvolume-joined pswitch
 Playback channels: Front Left - Front Right
 Limits: Playback 0 - 63
 Mono:
 Front Left: Playback 45 [50%] [-18.00dB] [on]
 Front Right: Playback 45 [50%] [-18.00dB] [on]
 power
</code></pre>
</li>
<li><p>LIRC处理流程<br>        +——–+         +————-+                     +——–+<br>        |        |         | Linux input |                     | Appli- |<br> —&gt;—| kernel |—-&gt;—-| layer       |———-&gt;———-| cation |<br>        |        |         |             |  &#x2F;dev&#x2F;input&#x2F;eventX  |        |<br>        +——–+         +————-+                     +——–+<br><br>        +——–+         +————-+<br>        |        |         | Linux input |<br> —&gt;—| kernel |—-&gt;—-| layer       |<br>        |        |         |             |<br>        +——–+         +————-+<br>                                    |<br>                                    v<br>                                    |<br>                                    |                           +——–+<br>                            +————-+                     | Appli- |<br>                            |    lirc     |———-&gt;———-| cation |-+<br>                            |             |     lirc socket     |        | |<br>                            +————-+                     +——–+ |-+<br>                                                                    |        | |<br>                                                                    +——–+ |<br>                                                                    |        |<br>                                                                    +——–+<br><br>        +——–+         +————-+                     +——–+<br>        |        |         |             |                     | Appli- |<br> —&gt;—| kernel |—-&gt;—-|    lirc     |———-&gt;———-| cation |-+<br>        |        |         |             |     lirc socket     |        | |<br>        +——–+         +————-+                     +——–+ |-+<br>                                                                    |        | |<br>                                                                    +——–+ |<br>                                                                    |        |<br>                                                                    +——–+</p>
</li>
<li><p>通过socket使用lirc,不需要引入任何文件，可以方便的集成到代码里，就是上述第三种方式<br>struct sigaction act;<br>char buf[128];<br>struct sockaddr_un addr;<br>typedef struct<br>{<br>    char addr[32];<br>    char code[8];<br>    char type[16];<br>    char name[16];<br>} IRW_DATA;<br>IRW_DATA irw_data;<br>act.sa_handler &#x3D; sigusr1;<br>sigfillset(&amp;act.sa_mask);<br>act.sa_flags &#x3D; SA_RESTART; &#x2F;* don’t fiddle with EINTR *&#x2F;<br>sigaction(SIGUSR1, &amp;act, NULL);<br>addr.sun_family &#x3D; AF_UNIX;<br>strcpy(addr.sun_path, “&#x2F;var&#x2F;run&#x2F;lirc&#x2F;lircd”);<br>fd_lircd &#x3D; socket(AF_UNIX, SOCK_STREAM | SOCK_NONBLOCK, 0);<br>if (fd_lircd &#x3D;&#x3D; -1)<br>{<br>    printf(“Create socket failed\n”);<br>}<br>if (connect(fd_lircd, (struct sockaddr *)&amp;addr, sizeof(addr)) &#x3D;&#x3D; -1)<br>{<br>    printf(“Cannot connect to socket %s\n”, addr.sun_path);<br>}<br>while (1)<br>{<br>    &#x2F;&#x2F; lircd<br>    if (read(fd_lircd, buf, 128) &gt; 0)<br>    {<br>        LOG_D(“%s\n”, buf);<br>        char *p &#x3D; strtok(buf, “ “);<br>        int i &#x3D; 0;<br>        while (p)<br>        {<br>            &#x2F;&#x2F; LOG_D(“%s\n”, p);<br>            if (i &#x3D;&#x3D; 0)<br>                strcpy(irw_data.addr, p);<br>            else if (i &#x3D;&#x3D; 1)<br>                strcpy(irw_data.code, p);<br>            else if (i &#x3D;&#x3D; 2)<br>                strcpy(irw_data.type, p);<br>            else if (i &#x3D;&#x3D; 3)<br>                strcpy(irw_data.name, p);<br>            p &#x3D; strtok(NULL, “ “);<br>            i++;<br>        }<br>        LOG_D(“%s\n”, irw_data.type);<br>        switch ((uint8_t)strtol(irw_data.addr, NULL, 10))<br>        {<br>        case Vol_up:<br>            rotary_encoder_handler(&amp;u8g2, -1);<br>            break;<br>        case Vol_down:<br>            rotary_encoder_handler(&amp;u8g2, 1);<br>            break;<br>        case Play:<br>            rotary_encoder_button_handler(&amp;u8g2);<br>            break;<br>        case Bt:<br>            printf(“BT button\n”);<br>            break;<br>        }<br>    }<br>}</p>
</li>
</ol>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>V3S</tag>
        <tag>LIRIC</tag>
        <tag>红外遥控</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows上位机使用iTextSharp生成pdf文档</title>
    <url>/pages/51ce/</url>
    <content><![CDATA[<h3 id="iTextSharp"><a href="#iTextSharp" class="headerlink" title="iTextSharp"></a>iTextSharp</h3><p><a href="http://sourceforge.net/projects/itextsharp/files/itextsharp/">http://sourceforge.net/projects/itextsharp/files/itextsharp/</a></p>
<h3 id="导出样式如下"><a href="#导出样式如下" class="headerlink" title="导出样式如下"></a>导出样式如下</h3><img src="/pages/51ce/2023-12-22_092833.png" class="" title="界面">
<p><a href="test2.pdf">生成文档样式</a></p>
<h3 id="下边是生成所示文档的代码"><a href="#下边是生成所示文档的代码" class="headerlink" title="下边是生成所示文档的代码"></a>下边是生成所示文档的代码</h3><pre><code><figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Export_Pdf</span>(<span class="params"><span class="built_in">string</span> amp_name, <span class="built_in">string</span> barcode, <span class="built_in">string</span> year_week, List&lt;DataVoltage&gt; dv_list</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">for</span> (Int32 i = <span class="number">0</span>; i &lt; uIData.SampleNum; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        DataVoltage dv = <span class="keyword">new</span> DataVoltage();</span><br><span class="line">        dv.V1 = <span class="number">65.23</span>;</span><br><span class="line">        dv.V2 = <span class="number">64.23</span>;</span><br><span class="line">        dv.V3 = <span class="number">65.36</span>;</span><br><span class="line">        dv.V4 = <span class="number">66.67</span>;</span><br><span class="line">        dv.Time = <span class="string">&quot;12:45:58&quot;</span>;</span><br><span class="line">        dv.result = <span class="string">&quot;OK&quot;</span>;</span><br><span class="line">        dv_list.Add(dv);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//设置纸张大小，自定义大小</span></span><br><span class="line">    <span class="comment">//iTextSharp.text.Rectangle pageSize = new iTextSharp.text.Rectangle(216f, 716f);</span></span><br><span class="line">    <span class="comment">//pageSize.BackgroundColor = new iTextSharp.text.BaseColor(0xFF, 0xFF, 0xDE);</span></span><br><span class="line">    <span class="comment">//new Document(pageSize, 36f, 72f, 108f, 180f))</span></span><br><span class="line">    <span class="comment">//边距单位：mm</span></span><br><span class="line">    <span class="keyword">using</span> (Document document = <span class="keyword">new</span> Document(iTextSharp.text.PageSize.A4))</span><br><span class="line">    &#123;</span><br><span class="line">        PdfWriter writer = PdfWriter.GetInstance(document, <span class="keyword">new</span> FileStream(<span class="string">&quot;test2.pdf&quot;</span>, FileMode.Create));</span><br><span class="line">        document.Open();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 添加文档信息</span></span><br><span class="line">        document.AddTitle(<span class="string">&quot;ATLAS振动台电压记录表&quot;</span>);</span><br><span class="line">        document.AddSubject(<span class="string">&quot;振动过程中电压检测&quot;</span>);</span><br><span class="line">        document.AddKeywords(<span class="string">&quot;ATLAS 振动 电压 记录&quot;</span>);</span><br><span class="line">        document.AddCreator(<span class="string">&quot;SONAVOX&quot;</span>);</span><br><span class="line">        document.AddAuthor(<span class="string">&quot;87000013&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 新宋体字，后面的1是索引，索引从0开始，索引的可选项： 0， 1 ；不可省略，因宋体字有两种，宋体，新宋</span></span><br><span class="line">        <span class="built_in">string</span> fontFile = <span class="string">@&quot;C:\Windows\Fonts\SIMSUN.TTC,1&quot;</span>;</span><br><span class="line">        <span class="comment">// 字体</span></span><br><span class="line">        BaseFont bFont = BaseFont.CreateFont(fontFile, BaseFont.IDENTITY_H, BaseFont.NOT_EMBEDDED);</span><br><span class="line">        iTextSharp.text.Font font = <span class="keyword">new</span> iTextSharp.text.Font(bFont, <span class="number">18.0f</span>, Font.BOLD);</span><br><span class="line">        </span><br><span class="line">        PdfPTable table = <span class="keyword">new</span> PdfPTable(<span class="number">7</span>);</span><br><span class="line">        <span class="comment">// 使用chuck 可有效的输出文字</span></span><br><span class="line">        <span class="comment">// 也可使用 document.Add(new iTextSharp.text.Paragraph(&quot;Hello World&quot;));</span></span><br><span class="line">        Chunk chuck1 = <span class="keyword">new</span> iTextSharp.text.Chunk(<span class="string">&quot;ATLAS振动台电压记录表\r\n&quot;</span> + amp_name);</span><br><span class="line">        <span class="comment">// 文字字体</span></span><br><span class="line">        chuck1.Font = font;</span><br><span class="line">        PdfPCell cell = <span class="keyword">new</span> PdfPCell(<span class="keyword">new</span> Phrase(chuck1));</span><br><span class="line">        <span class="comment">// 表头单元格占的列数，7列</span></span><br><span class="line">        cell.Colspan = <span class="number">7</span>;</span><br><span class="line">        <span class="comment">// 单元格占的行数，3行</span></span><br><span class="line">        cell.Rowspan = <span class="number">1</span>;</span><br><span class="line">        <span class="comment">// 边框</span></span><br><span class="line">        cell.BorderWidth = <span class="number">0.2f</span>;</span><br><span class="line">        <span class="comment">// 边框颜色</span></span><br><span class="line">        cell.BorderColor = BaseColor.BLACK;</span><br><span class="line">        <span class="comment">//背景姿色</span></span><br><span class="line">        <span class="comment">//cell.BackgroundColor = new BaseColor(252, 213, 180);</span></span><br><span class="line">        <span class="comment">// 水平对齐方式，剧中</span></span><br><span class="line">        cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;</span><br><span class="line">        <span class="comment">// 垂直对齐方式： 剧中</span></span><br><span class="line">        cell.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;</span><br><span class="line">        <span class="comment">// 添加单元格</span></span><br><span class="line">        table.AddCell(cell);</span><br><span class="line">        <span class="built_in">string</span>[] header = <span class="keyword">new</span> <span class="built_in">string</span>[] &#123; <span class="comment">//注意是6列，最后2列合并</span></span><br><span class="line">            <span class="string">&quot;开始时间：&quot;</span>, <span class="string">&quot;12:12:23&quot;</span>, <span class="string">&quot;结束时间：&quot;</span>, <span class="string">&quot;12:13:50&quot;</span>, <span class="string">&quot;仪器型号&quot;</span>, <span class="string">&quot;GW.Inc,GDM-8246,FW2.02&quot;</span>,</span><br><span class="line">            <span class="string">&quot;桥接输出：&quot;</span>, <span class="string">&quot;YES&quot;</span>, <span class="string">&quot;生产周期：&quot;</span>,<span class="string">&quot; 23 年,49 周&quot;</span>,<span class="string">&quot;产品条码：&quot;</span>, <span class="string">&quot;AA1006080234900008&quot;</span>,</span><br><span class="line">            <span class="string">&quot;上限电压：&quot;</span>, <span class="string">&quot;50V&quot;</span>, <span class="string">&quot;下限电压：&quot;</span>, <span class="string">&quot;30V&quot;</span>, <span class="string">&quot;记录周期：&quot;</span>, <span class="string">&quot;1秒/点&quot;</span>,</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        header[<span class="number">1</span>] = startTime; <span class="comment">//开始时间</span></span><br><span class="line">        header[<span class="number">3</span>] = DateTime.Now.ToLongTimeString();   <span class="comment">//结束时间</span></span><br><span class="line">        header[<span class="number">5</span>] = uIData.Device.Length &gt; <span class="number">3</span> ? uIData.Device.Substring(<span class="number">3</span>) : <span class="string">&quot;N/A&quot;</span>;  <span class="comment">//仪器型号</span></span><br><span class="line">        header[<span class="number">7</span>] = uIData.IsBridgeOut ? <span class="string">&quot;YES&quot;</span> : <span class="string">&quot;NO&quot;</span>;  <span class="comment">//是否桥接输出</span></span><br><span class="line">        header[<span class="number">9</span>] = year_week;   <span class="comment">//生产周期</span></span><br><span class="line">        header[<span class="number">11</span>] = barcode;   <span class="comment">//条码</span></span><br><span class="line">        header[<span class="number">13</span>] = uIData.LimitUp + <span class="string">&quot;V&quot;</span>;  <span class="comment">//上限</span></span><br><span class="line">        header[<span class="number">15</span>] = uIData.LimitDown + <span class="string">&quot;V&quot;</span>;  <span class="comment">//下限</span></span><br><span class="line">        header[<span class="number">17</span>] = uIData.SampleFreq + <span class="string">&quot;点/秒&quot;</span>;  <span class="comment">//记录周期</span></span><br><span class="line">        iTextSharp.text.Font font2 = <span class="keyword">new</span> iTextSharp.text.Font(bFont, <span class="number">10.0f</span>);</span><br><span class="line">        <span class="comment">//添加3行表头</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="built_in">int</span> j = <span class="number">0</span>; j &lt; <span class="number">3</span>; j++)  <span class="comment">//列数确定后，多的单元格是添加不进去的</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; <span class="number">6</span>; i++)  <span class="comment">//列数确定后，多的单元格是添加不进去的</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">// 使用chuck 可有效的输出文字</span></span><br><span class="line">                <span class="comment">// 也可使用 document.Add(new iTextSharp.text.Paragraph(&quot;Hello World&quot;));</span></span><br><span class="line">                Chunk chuck = <span class="keyword">new</span> iTextSharp.text.Chunk(header[i + j * <span class="number">6</span>]);</span><br><span class="line">                <span class="comment">// 文字字体</span></span><br><span class="line">                chuck.Font = font2;</span><br><span class="line">                <span class="comment">//var paragraph = new iTextSharp.text.Paragraph(chuck);</span></span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (i &lt; <span class="number">5</span>)</span><br><span class="line">                &#123;</span><br><span class="line"></span><br><span class="line">                    <span class="comment">// 对齐方式，剧中对齐</span></span><br><span class="line">                    cell = <span class="keyword">new</span> PdfPCell(<span class="keyword">new</span> Phrase(chuck));</span><br><span class="line">                    <span class="comment">// 单元格占的列数，1列</span></span><br><span class="line">                    cell.Colspan = <span class="number">1</span>;</span><br><span class="line">                    <span class="comment">// 单元格占的行数，1行</span></span><br><span class="line">                    cell.Rowspan = <span class="number">1</span>;</span><br><span class="line">                    <span class="comment">// 边框</span></span><br><span class="line">                    cell.BorderWidth = <span class="number">0.2f</span>;</span><br><span class="line">                    <span class="comment">// 边框颜色</span></span><br><span class="line">                    cell.BorderColor = BaseColor.BLACK;</span><br><span class="line">                    <span class="comment">//背景色</span></span><br><span class="line">                    cell.BackgroundColor = <span class="keyword">new</span> BaseColor(<span class="number">252</span>, <span class="number">213</span>, <span class="number">180</span>);</span><br><span class="line">                    <span class="comment">// 水平对齐方式，剧中</span></span><br><span class="line">                    cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;</span><br><span class="line">                    <span class="comment">// 垂直对齐方式： 剧中</span></span><br><span class="line">                    cell.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;</span><br><span class="line">                    <span class="comment">// 添加单元格</span></span><br><span class="line">                    table.AddCell(cell);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    cell = <span class="keyword">new</span> PdfPCell(<span class="keyword">new</span> Phrase(chuck));</span><br><span class="line">                    <span class="comment">// 单元格占的列数，2列   会自动添加另外1列</span></span><br><span class="line">                    cell.Colspan = <span class="number">2</span>;</span><br><span class="line">                    <span class="comment">// 单元格占的行数，1行</span></span><br><span class="line">                    cell.Rowspan = <span class="number">1</span>;</span><br><span class="line">                    <span class="comment">// 边框</span></span><br><span class="line">                    cell.BorderWidth = <span class="number">0.2f</span>;</span><br><span class="line">                    <span class="comment">//背景色</span></span><br><span class="line">                    cell.BackgroundColor = <span class="keyword">new</span> BaseColor(<span class="number">252</span>, <span class="number">213</span>, <span class="number">180</span>);</span><br><span class="line">                    <span class="comment">// 边框颜色</span></span><br><span class="line">                    cell.BorderColor = BaseColor.BLACK;</span><br><span class="line">                    <span class="comment">// 水平对齐方式，剧中</span></span><br><span class="line">                    cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;</span><br><span class="line">                    <span class="comment">// 垂直对齐方式： 剧中</span></span><br><span class="line">                    cell.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;</span><br><span class="line">                    <span class="comment">// 添加单元格</span></span><br><span class="line">                    table.AddCell(cell);</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">string</span>[] header1 = <span class="keyword">new</span> <span class="built_in">string</span>[] &#123; <span class="comment">//注意是6列，最后2列合并</span></span><br><span class="line">              <span class="string">&quot;序号&quot;</span>,<span class="string">&quot;CH1（V）&quot;</span>, <span class="string">&quot;CH2（V）&quot;</span>,<span class="string">&quot; CH3（V）&quot;</span>,<span class="string">&quot; CH4（V）&quot;</span>,<span class="string">&quot;测试时间&quot;</span>,<span class="string">&quot;测试结果&quot;</span></span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; <span class="number">7</span>; i++)  <span class="comment">//列数确定后，多的单元格是添加不进去的</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// 使用chuck 可有效的输出文字</span></span><br><span class="line">            <span class="comment">// 也可使用 document.Add(new iTextSharp.text.Paragraph(&quot;Hello World&quot;));</span></span><br><span class="line">            Chunk chuck = <span class="keyword">new</span> iTextSharp.text.Chunk(header1[i]);</span><br><span class="line">            <span class="comment">// 文字字体</span></span><br><span class="line">            chuck.Font = font2;</span><br><span class="line">            <span class="comment">//var paragraph = new iTextSharp.text.Paragraph(chuck);</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">// 对齐方式，剧中对齐</span></span><br><span class="line">            cell = <span class="keyword">new</span> PdfPCell(<span class="keyword">new</span> Phrase(chuck));</span><br><span class="line">            <span class="comment">// 单元格占的列数，1列</span></span><br><span class="line">            cell.Colspan = <span class="number">1</span>;</span><br><span class="line">            <span class="comment">// 单元格占的行数，1行</span></span><br><span class="line">            cell.Rowspan = <span class="number">1</span>;</span><br><span class="line">            <span class="comment">// 边框</span></span><br><span class="line">            cell.BorderWidth = <span class="number">0.2f</span>;</span><br><span class="line">            <span class="comment">// 边框颜色</span></span><br><span class="line">            cell.BorderColor = BaseColor.BLACK;</span><br><span class="line">            <span class="comment">//背景色</span></span><br><span class="line">            cell.BackgroundColor = <span class="keyword">new</span> BaseColor(<span class="number">146</span>, <span class="number">205</span>, <span class="number">220</span>);</span><br><span class="line">            <span class="comment">// 水平对齐方式，剧中</span></span><br><span class="line">            cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;</span><br><span class="line">            <span class="comment">// 垂直对齐方式： 剧中</span></span><br><span class="line">            cell.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;</span><br><span class="line">            <span class="comment">// 添加单元格</span></span><br><span class="line">            table.AddCell(cell);</span><br><span class="line">        &#125;</span><br><span class="line">        DataVoltage dv;</span><br><span class="line">        <span class="keyword">for</span> (Int32 i = <span class="number">0</span>; i &lt; uIData.SampleNum; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            dv = dv_list[i];</span><br><span class="line">            <span class="comment">//以下是内容</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">// 使用chuck 可有效的输出文字</span></span><br><span class="line">            <span class="comment">// 也可使用 document.Add(new iTextSharp.text.Paragraph(&quot;Hello World&quot;));</span></span><br><span class="line">            Chunk chuck = <span class="keyword">new</span> iTextSharp.text.Chunk((i + <span class="number">1</span>).ToString());</span><br><span class="line">            <span class="comment">// 文字字体</span></span><br><span class="line">            chuck.Font = font2;</span><br><span class="line">            <span class="comment">//var paragraph = new iTextSharp.text.Paragraph(chuck);</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">// 对齐方式，剧中对齐</span></span><br><span class="line">            cell = <span class="keyword">new</span> PdfPCell(<span class="keyword">new</span> Phrase(chuck));</span><br><span class="line">            <span class="comment">// 单元格占的列数，1列</span></span><br><span class="line">            cell.Colspan = <span class="number">1</span>;</span><br><span class="line">            <span class="comment">// 单元格占的行数，1行</span></span><br><span class="line">            cell.Rowspan = <span class="number">1</span>;</span><br><span class="line">            <span class="comment">// 边框</span></span><br><span class="line">            cell.BorderWidth = <span class="number">0.2f</span>;</span><br><span class="line">            <span class="comment">// 边框颜色</span></span><br><span class="line">            cell.BorderColor = BaseColor.BLACK;</span><br><span class="line">            <span class="comment">//背景色</span></span><br><span class="line">            <span class="comment">//cell.BackgroundColor = new BaseColor(146, 205, 220);</span></span><br><span class="line">            <span class="comment">// 水平对齐方式，剧中</span></span><br><span class="line">            cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;</span><br><span class="line">            <span class="comment">// 垂直对齐方式： 剧中</span></span><br><span class="line">            cell.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;</span><br><span class="line">            <span class="comment">// 添加单元格</span></span><br><span class="line">            table.AddCell(cell);</span><br><span class="line"></span><br><span class="line">            chuck = <span class="keyword">new</span> iTextSharp.text.Chunk(dv.V1.ToString());</span><br><span class="line">            <span class="comment">// 文字字体</span></span><br><span class="line">            chuck.Font = font2;</span><br><span class="line">            <span class="comment">//var paragraph = new iTextSharp.text.Paragraph(chuck);</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">// 对齐方式，剧中对齐</span></span><br><span class="line">            cell = <span class="keyword">new</span> PdfPCell(<span class="keyword">new</span> Phrase(chuck));</span><br><span class="line">            <span class="comment">// 水平对齐方式，剧中</span></span><br><span class="line">            cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;</span><br><span class="line">            <span class="comment">// 垂直对齐方式： 剧中</span></span><br><span class="line">            cell.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;</span><br><span class="line">            table.AddCell(cell);</span><br><span class="line">            chuck = <span class="keyword">new</span> iTextSharp.text.Chunk(dv.V2.ToString());</span><br><span class="line">            <span class="comment">// 文字字体</span></span><br><span class="line">            chuck.Font = font2;</span><br><span class="line">            <span class="comment">//var paragraph = new iTextSharp.text.Paragraph(chuck);</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">// 对齐方式，剧中对齐</span></span><br><span class="line">            cell = <span class="keyword">new</span> PdfPCell(<span class="keyword">new</span> Phrase(chuck));</span><br><span class="line">            <span class="comment">// 水平对齐方式，剧中</span></span><br><span class="line">            cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;</span><br><span class="line">            <span class="comment">// 垂直对齐方式： 剧中</span></span><br><span class="line">            cell.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;</span><br><span class="line">            table.AddCell(cell);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (!uIData.IsBridgeOut)</span><br><span class="line">            &#123;</span><br><span class="line"></span><br><span class="line">                chuck = <span class="keyword">new</span> iTextSharp.text.Chunk(dv.V3.ToString());</span><br><span class="line">                <span class="comment">// 文字字体</span></span><br><span class="line">                chuck.Font = font2;</span><br><span class="line">                <span class="comment">//var paragraph = new iTextSharp.text.Paragraph(chuck);</span></span><br><span class="line"></span><br><span class="line">                <span class="comment">// 对齐方式，剧中对齐</span></span><br><span class="line">                cell = <span class="keyword">new</span> PdfPCell(<span class="keyword">new</span> Phrase(chuck));</span><br><span class="line">                <span class="comment">// 水平对齐方式，剧中</span></span><br><span class="line">                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;</span><br><span class="line">                <span class="comment">// 垂直对齐方式： 剧中</span></span><br><span class="line">                cell.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;</span><br><span class="line">                table.AddCell(cell);</span><br><span class="line">                chuck = <span class="keyword">new</span> iTextSharp.text.Chunk(dv.V4.ToString());</span><br><span class="line">                <span class="comment">// 文字字体</span></span><br><span class="line">                chuck.Font = font2;</span><br><span class="line">                <span class="comment">//var paragraph = new iTextSharp.text.Paragraph(chuck);</span></span><br><span class="line"></span><br><span class="line">                <span class="comment">// 对齐方式，剧中对齐</span></span><br><span class="line">                cell = <span class="keyword">new</span> PdfPCell(<span class="keyword">new</span> Phrase(chuck));</span><br><span class="line">                <span class="comment">// 水平对齐方式，剧中</span></span><br><span class="line">                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;</span><br><span class="line">                <span class="comment">// 垂直对齐方式： 剧中</span></span><br><span class="line">                cell.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;</span><br><span class="line">                table.AddCell(cell);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                chuck = <span class="keyword">new</span> iTextSharp.text.Chunk(<span class="string">&quot;N/A&quot;</span>);</span><br><span class="line">                <span class="comment">// 文字字体</span></span><br><span class="line">                chuck.Font = font2;</span><br><span class="line">                <span class="comment">//var paragraph = new iTextSharp.text.Paragraph(chuck);</span></span><br><span class="line"></span><br><span class="line">                <span class="comment">// 对齐方式，剧中对齐</span></span><br><span class="line">                cell = <span class="keyword">new</span> PdfPCell(<span class="keyword">new</span> Phrase(chuck));</span><br><span class="line">                <span class="comment">// 水平对齐方式，剧中</span></span><br><span class="line">                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;</span><br><span class="line">                <span class="comment">// 垂直对齐方式： 剧中</span></span><br><span class="line">                cell.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;</span><br><span class="line">                table.AddCell(cell);</span><br><span class="line">                chuck = <span class="keyword">new</span> iTextSharp.text.Chunk(<span class="string">&quot;N/A&quot;</span>);</span><br><span class="line">                <span class="comment">// 文字字体</span></span><br><span class="line">                chuck.Font = font2;</span><br><span class="line">                <span class="comment">//var paragraph = new iTextSharp.text.Paragraph(chuck);</span></span><br><span class="line"></span><br><span class="line">                <span class="comment">// 对齐方式，剧中对齐</span></span><br><span class="line">                cell = <span class="keyword">new</span> PdfPCell(<span class="keyword">new</span> Phrase(chuck));</span><br><span class="line">                <span class="comment">// 水平对齐方式，剧中</span></span><br><span class="line">                cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;</span><br><span class="line">                <span class="comment">// 垂直对齐方式： 剧中</span></span><br><span class="line">                cell.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;</span><br><span class="line">                table.AddCell(cell);</span><br><span class="line">            &#125;</span><br><span class="line">            chuck = <span class="keyword">new</span> iTextSharp.text.Chunk(dv.Time);</span><br><span class="line">            <span class="comment">// 文字字体</span></span><br><span class="line">            chuck.Font = font2;</span><br><span class="line">            <span class="comment">//var paragraph = new iTextSharp.text.Paragraph(chuck);</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">// 对齐方式，剧中对齐</span></span><br><span class="line">            cell = <span class="keyword">new</span> PdfPCell(<span class="keyword">new</span> Phrase(chuck));</span><br><span class="line">            <span class="comment">// 水平对齐方式，剧中</span></span><br><span class="line">            cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;</span><br><span class="line">            <span class="comment">// 垂直对齐方式： 剧中</span></span><br><span class="line">            cell.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;</span><br><span class="line">            table.AddCell(cell);</span><br><span class="line">            chuck = <span class="keyword">new</span> iTextSharp.text.Chunk(dv.result);</span><br><span class="line">            <span class="comment">// 文字字体</span></span><br><span class="line">            chuck.Font = font2;</span><br><span class="line">            <span class="comment">//var paragraph = new iTextSharp.text.Paragraph(chuck);</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">// 对齐方式，剧中对齐</span></span><br><span class="line">            cell = <span class="keyword">new</span> PdfPCell(<span class="keyword">new</span> Phrase(chuck));</span><br><span class="line">            <span class="comment">// 水平对齐方式，剧中</span></span><br><span class="line">            cell.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;</span><br><span class="line">            <span class="comment">// 垂直对齐方式： 剧中</span></span><br><span class="line">            cell.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;</span><br><span class="line">            table.AddCell(cell);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="doctag">///</span>/临时文件路径</span></span><br><span class="line">        <span class="comment">//string imagePath = AppDomain.CurrentDomain.BaseDirectory + @&quot;1.png&quot;;</span></span><br><span class="line">        <span class="comment">//iTextSharp.text.Image img = iTextSharp.text.Image.GetInstance(imagePath);</span></span><br><span class="line">        <span class="comment">//img.ScalePercent(50);</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span>/ 图片位置</span></span><br><span class="line">        <span class="comment">//img.SetAbsolutePosition((iTextSharp.text.PageSize.A4.Width - img.ScaledWidth) / 2, (iTextSharp.text.PageSize.A4.Height - img.ScaledHeight) / 2);</span></span><br><span class="line">        <span class="comment">//writer.DirectContent.AddImage(img);</span></span><br><span class="line">        document.Add(table);</span><br><span class="line">        writer.PageEvent = <span class="keyword">new</span> IsHandF();</span><br><span class="line">        writer.Flush();</span><br><span class="line">        document.Close();</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">// 参考网上的代码 添加页脚页眉和水印</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">IsHandF</span> : <span class="title">PdfPageEventHelper</span>, <span class="title">IPdfPageEvent</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 创建页面完成时发生 </span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">OnEndPage</span>(<span class="params">PdfWriter writer, Document document</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">base</span>.OnEndPage(writer, document);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//页眉页脚使用字体</span></span><br><span class="line">        BaseFont bsFont = BaseFont.CreateFont(<span class="string">@&quot;C:\Windows\Fonts\SIMSUN.TTC,1&quot;</span>, BaseFont.IDENTITY_H, BaseFont.EMBEDDED);</span><br><span class="line">        iTextSharp.text.Font fontheader = <span class="keyword">new</span> iTextSharp.text.Font(bsFont, <span class="number">10</span>, iTextSharp.text.Font.NORMAL);</span><br><span class="line">        iTextSharp.text.Font fontfooter = <span class="keyword">new</span> iTextSharp.text.Font(bsFont, <span class="number">10</span>, iTextSharp.text.Font.NORMAL);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//获取文件流</span></span><br><span class="line">        PdfContentByte cbs = writer.DirectContent;</span><br><span class="line">        cbs.SetCharacterSpacing(<span class="number">1.0f</span>); <span class="comment">//设置文字显示时的字间距</span></span><br><span class="line">        <span class="comment">//Phrase header = new Phrase(&quot;页眉&quot;, fontheader);</span></span><br><span class="line">        Phrase footer_r = <span class="keyword">new</span> Phrase(writer.PageNumber.ToString() + <span class="string">&quot; of &quot;</span> + <span class="number">1</span>, fontfooter); <span class="comment">//writer.PageNumber.ToString()为页码。</span></span><br><span class="line">        Phrase footer_l = <span class="keyword">new</span> Phrase(DateTime.Now.ToLongDateString(), fontfooter); <span class="comment">//writer.PageNumber.ToString()为页码。</span></span><br><span class="line">        <span class="comment">//页眉显示的位置                                                                        //页眉显示的位置 </span></span><br><span class="line">        <span class="comment">//ColumnText.ShowTextAligned(cbs, iTextSharp.text.Element.ALIGN_CENTER, header,</span></span><br><span class="line">        <span class="comment">//           document.Right / 2, document.Top, 0);</span></span><br><span class="line">        <span class="comment">//页脚显示的位置 </span></span><br><span class="line">        ColumnText.ShowTextAligned(cbs, iTextSharp.text.Element.ALIGN_CENTER, footer_l,</span><br><span class="line">                   document.Left + <span class="number">20</span>, document.Bottom, <span class="number">0</span>);</span><br><span class="line">        ColumnText.ShowTextAligned(cbs, iTextSharp.text.Element.ALIGN_CENTER, footer_r,</span><br><span class="line">                   document.Right - <span class="number">20</span>, document.Bottom, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//添加背景色及水印，在内容下方添加</span></span><br><span class="line">        PdfContentByte cba = writer.DirectContentUnder;</span><br><span class="line">        <span class="comment"><span class="doctag">///</span>/背景色</span></span><br><span class="line">        <span class="comment">//Bitmap bmp = new Bitmap(1263, 893);</span></span><br><span class="line">        <span class="comment">//Graphics g = Graphics.FromImage(bmp);</span></span><br><span class="line">        <span class="comment">//Color c = Color.FromArgb(0x33ff33);</span></span><br><span class="line">        <span class="comment">//SolidBrush b = new SolidBrush(c);//这里修改颜色</span></span><br><span class="line">        <span class="comment">//g.FillRectangle(b, 0, 0, 1263, 893);</span></span><br><span class="line">        <span class="comment">//System.Drawing.Image ig = bmp;</span></span><br><span class="line">        <span class="comment">//iTextSharp.text.Image img = iTextSharp.text.Image.GetInstance(ig, new BaseColor(0xFF, 0xFF, 0xFF));</span></span><br><span class="line">        <span class="comment">//img.SetAbsolutePosition(0, 0);</span></span><br><span class="line">        <span class="comment">//cba.AddImage(img);</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//水印</span></span><br><span class="line">        iTextSharp.text.Image image = iTextSharp.text.Image.GetInstance(<span class="string">@&quot;2.png&quot;</span>);</span><br><span class="line">        image.RotationDegrees = <span class="number">30</span>;<span class="comment">//旋转角度</span></span><br><span class="line"></span><br><span class="line">        PdfGState gs = <span class="keyword">new</span> PdfGState();</span><br><span class="line">        gs.FillOpacity = <span class="number">0.1f</span>;<span class="comment">//透明度</span></span><br><span class="line">        cba.SetGState(gs);</span><br><span class="line"></span><br><span class="line">        <span class="built_in">int</span> x = <span class="number">-1000</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="built_in">int</span> j = <span class="number">0</span>; j &lt; <span class="number">15</span>; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            x = x + <span class="number">180</span>;</span><br><span class="line">            <span class="built_in">int</span> a = x;</span><br><span class="line">            <span class="built_in">int</span> y = <span class="number">-170</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                a = a + <span class="number">180</span>;</span><br><span class="line">                y = y + <span class="number">180</span>;</span><br><span class="line">                image.SetAbsolutePosition(a, y);</span><br><span class="line">                cba.AddImage(image);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</code></pre>
]]></content>
      <categories>
        <category>Windows</category>
      </categories>
      <tags>
        <tag>wpf</tag>
        <tag>c#</tag>
        <tag>Window</tag>
        <tag>pdf</tag>
        <tag>iTextSharp</tag>
      </tags>
  </entry>
  <entry>
    <title>全志V3S上通过蓝牙播放音乐</title>
    <url>/pages/d436/</url>
    <content><![CDATA[<p><code>我使用的是RTL8723DS模块，引脚与BS是兼容的，内核使用的是5.10, Bluez使用的是5.55 终端是UART0，蓝牙串口使用的是UART2，板子是参照licheepi 自己画的</code></p>
<p><a href="https://gitee.com/yocop/drv_bt_rtl8723ds">参考链接</a><br><a href="https://github.com/Poco-Ye/rtl8723DS-BT-uart-driver">BT参考链接</a><br><a href="https://github.com/lwfinger/rtl8723ds">WIFI参考链接</a></p>
<img src="/pages/d436/2021-07-28_T.png" class="" title="top">
<img src="/pages/d436/2021-07-28_B.png" class="" title="top">
<ol>
<li>首先在buildroot里勾选上bluez5-utils,bluez-tools及blue-alsa</li>
<li>在内核里勾选<br> [<em>]UART(H4) protocol support<br> [</em>]Realtek Three-wireUART(H5) protocol support<br> 系统启动时会显示如下信息：<br> Starting kernel …<br><br> [    0.000000] Booting Linux on physical CPU 0x0<br> [    0.000000] Linux version 5.10.19 (xfdr@virtualbox) (arm-linux-gnueabihf-gcc (Linaro GCC 7.5-2019.12) 7.5.0, GNU ld (Linaro_Binutils-2019.12) 2.28.2.20170706) #13 SMP Fri Jul 23 12:00:59 CST 2021<br> [    0.000000] CPU: ARMv7 Processor [410fc075] revision 5 (ARMv7), cr&#x3D;10c5387d<br> [    0.000000] CPU: div instructions available: patching division code<br> [    0.000000] CPU: PIPT &#x2F; VIPT nonaliasing data cache, VIPT aliasing instruction cache<br> [    0.000000] OF: fdt: Machine model: Lichee Pi Zero with Dock<br> [    0.000000] Memory policy: Data cache writealloc<br> [    0.000000] cma: Reserved 16 MiB at 0x41c00000<br> [    0.000000] Zone ranges:<br> [    0.000000]   Normal   [mem 0x0000000040000000-0x0000000043ffffff]<br> [    0.000000]   HighMem  empty<br> [    0.000000] Movable zone start for each node<br> [    0.000000] Early memory node ranges<br> [    0.000000]   node   0: [mem 0x0000000040000000-0x0000000043ffffff]<br> [    0.000000] Initmem setup node 0 [mem 0x0000000040000000-0x0000000043ffffff]<br> [    0.000000] psci: probing for conduit method from DT.<br> [    0.000000] psci: Using PSCI v0.1 Function IDs from DT<br> [    0.000000] percpu: Embedded 15 pages&#x2F;cpu s31052 r8192 d22196 u61440<br> [    0.000000] Built 1 zonelists, mobility grouping on.  Total pages: 16256<br> [    0.000000] Kernel command line: console&#x3D;ttyS0,115200 panic&#x3D;5 console&#x3D;ttyS0 rootwait vt.global_cursor_default&#x3D;0 root&#x3D;&#x2F;dev&#x2F;mmcblk0p2 earlyprintk rw<br> [    0.000000] Dentry cache hash table entries: 8192 (order: 3, 32768 bytes, linear)<br> [    0.000000] Inode-cache hash table entries: 4096 (order: 2, 16384 bytes, linear)<br> [    0.000000] mem auto-init: stack:off, heap alloc:off, heap free:off<br> [    0.000000] Memory: 34900K&#x2F;65536K available (8192K kernel code, 918K rwdata, 2244K rodata, 1024K init, 284K bss, 14252K reserved, 16384K cma-reserved, 0K highmem)<br> [    0.000000] SLUB: HWalign&#x3D;64, Order&#x3D;0-3, MinObjects&#x3D;0, CPUs&#x3D;1, Nodes&#x3D;1<br> [    0.000000] rcu: Hierarchical RCU implementation.<br> [    0.000000] rcu:     RCU restricting CPUs from NR_CPUS&#x3D;8 to nr_cpu_ids&#x3D;1.<br> [    0.000000] rcu: RCU calculated value of scheduler-enlistment delay is 10 jiffies.<br> [    0.000000] rcu: Adjusting geometry for rcu_fanout_leaf&#x3D;16, nr_cpu_ids&#x3D;1<br> [    0.000000] NR_IRQS: 16, nr_irqs: 16, preallocated irqs: 16<br> [    0.000000] GIC: Using split EOI&#x2F;Deactivate mode<br> [    0.000000] random: get_random_bytes called from start_kernel+0x328&#x2F;0x4c0 with crng_init&#x3D;0<br> [    0.000000] arch_timer: cp15 timer(s) running at 24.00MHz (phys).<br> [    0.000000] clocksource: arch_sys_counter: mask: 0xffffffffffffff max_cycles: 0x588fe9dc0, max_idle_ns: 440795202592 ns<br> [    0.000008] sched_clock: 56 bits at 24MHz, resolution 41ns, wraps every 4398046511097ns<br> [    0.000022] Switching to timer-based delay loop, resolution 41ns<br> [    0.000278] clocksource: timer: mask: 0xffffffff max_cycles: 0xffffffff, max_idle_ns: 79635851949 ns<br> [    0.000593] Console: colour dummy device 80x30<br> [    0.000661] Calibrating delay loop (skipped), value calculated using timer frequency.. 48.00 BogoMIPS (lpj&#x3D;240000)<br> [    0.000684] pid_max: default: 32768 minimum: 301<br> [    0.000852] Mount-cache hash table entries: 1024 (order: 0, 4096 bytes, linear)<br> [    0.000873] Mountpoint-cache hash table entries: 1024 (order: 0, 4096 bytes, linear)<br> [    0.001748] CPU: Testing write buffer coherency: ok<br> [    0.002186] &#x2F;cpus&#x2F;cpu@0 missing clock-frequency property<br> [    0.002218] CPU0: thread -1, cpu 0, socket 0, mpidr 80000000<br> [    0.002989] Setting up static identity map for 0x40100000 - 0x40100060<br> [    0.003218] rcu: Hierarchical SRCU implementation.<br> [    0.003764] smp: Bringing up secondary CPUs …<br> [    0.003792] smp: Brought up 1 node, 1 CPU<br> [    0.003802] SMP: Total of 1 processors activated (48.00 BogoMIPS).<br> [    0.003811] CPU: All CPU(s) started in HYP mode.<br> [    0.003818] CPU: Virtualization extensions available.<br> [    0.004452] devtmpfs: initialized<br> [    0.008373] VFP support v0.3: implementor 41 architecture 2 part 30 variant 7 rev 5<br> [    0.008733] clocksource: jiffies: mask: 0xffffffff max_cycles: 0xffffffff, max_idle_ns: 19112604462750000 ns<br> [    0.008771] futex hash table entries: 256 (order: 2, 16384 bytes, linear)<br> [    0.009561] pinctrl core: initialized pinctrl subsystem<br> [    0.011091] NET: Registered protocol family 16<br> [    0.012326] DMA: preallocated 256 KiB pool for atomic coherent allocations<br> [    0.013612] thermal_sys: Registered thermal governor ‘step_wise’<br> [    0.014006] hw-breakpoint: found 5 (+1 reserved) breakpoint and 4 watchpoint registers.<br> [    0.014032] hw-breakpoint: maximum watchpoint size is 8 bytes.<br> [    0.036802] SCSI subsystem initialized<br> [    0.037553] usbcore: registered new interface driver usbfs<br> [    0.037622] usbcore: registered new interface driver hub<br> [    0.037689] usbcore: registered new device driver usb<br> [    0.037967] mc: Linux media interface: v0.10<br> [    0.038015] videodev: Linux video capture interface: v2.00<br> [    0.038161] pps_core: LinuxPPS API ver. 1 registered<br> [    0.038174] pps_core: Software ver. 5.3.6 - Copyright 2005-2007 Rodolfo Giometti <a href="mailto:&#103;&#x69;&#111;&#x6d;&#101;&#116;&#x74;&#x69;&#x40;&#x6c;&#105;&#110;&#117;&#120;&#x2e;&#105;&#x74;">&#103;&#x69;&#111;&#x6d;&#101;&#116;&#x74;&#x69;&#x40;&#x6c;&#105;&#110;&#117;&#120;&#x2e;&#105;&#x74;</a><br> [    0.038198] PTP clock support registered<br> [    0.038880] Advanced Linux Sound Architecture Driver Initialized.<br> [    0.039575] Bluetooth: Core ver 2.22<br> [    0.039667] NET: Registered protocol family 31<br> [    0.039679] Bluetooth: HCI device and connection manager initialized<br> [    0.039703] Bluetooth: HCI socket layer initialized<br> [    0.039717] Bluetooth: L2CAP socket layer initialized<br> [    0.039750] Bluetooth: SCO socket layer initialized<br> [    0.040956] clocksource: Switched to clocksource arch_sys_counter<br> [    0.052288] NET: Registered protocol family 2<br> [    0.053034] tcp_listen_portaddr_hash hash table entries: 512 (order: 0, 6144 bytes, linear)<br> [    0.053084] TCP established hash table entries: 1024 (order: 0, 4096 bytes, linear)<br> [    0.053112] TCP bind hash table entries: 1024 (order: 1, 8192 bytes, linear)<br> [    0.053136] TCP: Hash tables configured (established 1024 bind 1024)<br> [    0.053298] UDP hash table entries: 256 (order: 1, 8192 bytes, linear)<br> [    0.053357] UDP-Lite hash table entries: 256 (order: 1, 8192 bytes, linear)<br> [    0.053602] NET: Registered protocol family 1<br> [    0.054648] RPC: Registered named UNIX socket transport module.<br> [    0.054681] RPC: Registered udp transport module.<br> [    0.054690] RPC: Registered tcp transport module.<br> [    0.054698] RPC: Registered tcp NFSv4.1 backchannel transport module.<br> [    0.056301] Initialise system trusted keyrings<br> [    0.056732] workingset: timestamp_bits&#x3D;30 max_order&#x3D;14 bucket_order&#x3D;0<br> [    0.063874] NFS: Registering the id_resolver key type<br> [    0.063951] Key type id_resolver registered<br> [    0.063960] Key type id_legacy registered<br> [    0.064015] ntfs: driver 2.1.32 [Flags: R&#x2F;W].<br> [    0.163771] Key type asymmetric registered<br> [    0.163804] Asymmetric key parser ‘x509’ registered<br> [    0.163906] Block layer SCSI generic (bsg) driver version 0.4 loaded (major 246)<br> [    0.163922] io scheduler mq-deadline registered<br> [    0.163931] io scheduler kyber registered<br> [    0.168836] sun8i-v3s-pinctrl 1c20800.pinctrl: initialized sunXi PIO driver<br> [    0.169687] sun8i-v3s-pinctrl 1c20800.pinctrl: supply vcc-pb not found, using dummy regulator<br> [    0.170628] pwm-backlight backlight: supply power not found, using dummy regulator<br> [    0.171287] pwm-backlight backlight: invalid default brightness level: 100, using 6<br> [    0.239906] Serial: 8250&#x2F;16550 driver, 8 ports, IRQ sharing disabled<br> [    0.244637] printk: console [ttyS0] disabled<br> [    0.264964] 1c28000.serial: ttyS0 at MMIO 0x1c28000 (irq &#x3D; 45, base_baud &#x3D; 1500000) is a U6_16550A<br> [    0.932953] printk: console [ttyS0] enabled<br> [    0.938208] sun8i-v3s-pinctrl 1c20800.pinctrl: supply vcc-pe not found, using dummy regulator<br> [    0.968606] 1c28400.serial: ttyS1 at MMIO 0x1c28400 (irq &#x3D; 46, base_baud &#x3D; 1500000) is a U6_16550A<br> [    0.999932] 1c28800.serial: ttyS2 at MMIO 0x1c28800 (irq &#x3D; 47, base_baud &#x3D; 1500000) is a U6_16550A<br> [    1.014962] panel-simple panel: supply power not found, using dummy regulator<br> [    1.022545] panel-simple panel: Specify missing connector_type<br> [    1.030391] libphy: Fixed MDIO Bus: probed<br> [    1.035212] CAN device driver interface<br> [    1.039657] dwmac-sun8i 1c30000.ethernet: IRQ eth_wake_irq not found<br> [    1.046143] dwmac-sun8i 1c30000.ethernet: IRQ eth_lpi not found<br> [    1.052210] dwmac-sun8i 1c30000.ethernet: No regulator found<br> [    1.057984] dwmac-sun8i 1c30000.ethernet: PTP uses main clock<br> [    1.064221] dwmac-sun8i 1c30000.ethernet: No HW DMA feature register supported<br> [    1.071527] dwmac-sun8i 1c30000.ethernet: RX Checksum Offload Engine supported<br> [    1.078747] dwmac-sun8i 1c30000.ethernet: COE Type 2<br> [    1.083730] dwmac-sun8i 1c30000.ethernet: TX Checksum insertion supported<br> [    1.090514] dwmac-sun8i 1c30000.ethernet: Normal descriptors<br> [    1.096184] dwmac-sun8i 1c30000.ethernet: Chain mode enabled<br> [    1.101867] dwmac-sun8i 1c30000.ethernet: device MAC address d6:56:90:e0:09:09<br> [    1.109732] libphy: stmmac: probed<br> [    1.114430] dwmac-sun8i 1c30000.ethernet: Found internal PHY node<br> [    1.121248] libphy: mdio_mux: probed<br> [    1.124869] dwmac-sun8i 1c30000.ethernet: Switch mux to internal PHY<br> [    1.131286] dwmac-sun8i 1c30000.ethernet: Powering internal PHY<br> [    1.139085] ehci_hcd: USB 2.0 ‘Enhanced’ Host Controller (EHCI) Driver<br> [    1.145759] ehci-platform: EHCI generic platform driver<br> [    1.151239] ohci_hcd: USB 1.1 ‘Open’ Host Controller (OHCI) Driver<br> [    1.157465] ohci-platform: OHCI generic platform driver<br> [    1.164161] input: 1c22800.lradc as &#x2F;devices&#x2F;platform&#x2F;soc&#x2F;1c22800.lradc&#x2F;input&#x2F;input0<br> [    1.173440] rotary-encoder rotary@0: gray<br> [    1.178460] input: rotary@0 as &#x2F;devices&#x2F;platform&#x2F;rotary@0&#x2F;input&#x2F;input1<br> [    1.187134] sun6i-rtc 1c20400.rtc: registered as rtc0<br> [    1.192416] sun6i-rtc 1c20400.rtc: setting system clock to 1970-01-01T01:26:51 UTC (5211)<br> [    1.200591] sun6i-rtc 1c20400.rtc: RTC enabled<br> [    1.205482] i2c &#x2F;dev entries driver<br> [    1.210476] input: ns2009_ts as &#x2F;devices&#x2F;platform&#x2F;soc&#x2F;1c2ac00.i2c&#x2F;i2c-0&#x2F;0-0048&#x2F;input&#x2F;input2<br> [    1.220426] Driver for 1-wire Dallas network protocol.<br> [    1.227208] sunxi-wdt 1c20ca0.watchdog: Watchdog enabled (timeout&#x3D;16 sec, nowayout&#x3D;0)<br> [    1.235342] Bluetooth: HCI UART driver ver 2.3<br> [    1.239793] Bluetooth: HCI UART protocol H4 registered<br> [    1.245041] Bluetooth: HCI UART protocol Three-wire (H5) registered<br> [    1.252426] sun8i-v3s-pinctrl 1c20800.pinctrl: supply vcc-pf not found, using dummy regulator<br> [    1.263407] sun8i-v3s-pinctrl 1c20800.pinctrl: supply vcc-pg not found, using dummy regulator<br> [    1.274623] ledtrig-cpu: registered to indicate activity on CPUs<br> [    1.281222] sun4i-ss 1c15000.crypto: Die ID 7<br> [    1.288761] usbcore: registered new interface driver usbhid<br> [    1.294484] usbhid: USB HID core driver<br> [    1.299370] sunxi-mmc 1c0f000.mmc: initialized, max. request size: 16384 KB<br> [    1.306740] sunxi-mmc 1c10000.mmc: initialized, max. request size: 16384 KB<br> [    1.316119] sun4i-codec 1c22c00.codec: Failed to register our card<br> [    1.324501] NET: Registered protocol family 17<br> [    1.328998] can: controller area network core<br> [    1.333627] NET: Registered protocol family 29<br> [    1.338086] can: raw protocol<br> [    1.341133] can: broadcast manager protocol<br> [    1.345329] can: netlink gateway - max_hops&#x3D;1<br> [    1.350297] Bluetooth: RFCOMM TTY layer initialized<br> [    1.355353] Bluetooth: RFCOMM socket layer initialized<br> [    1.360538] Bluetooth: RFCOMM ver 1.11<br> [    1.364363] Bluetooth: BNEP (Ethernet Emulation) ver 1.3<br> [    1.369672] Bluetooth: BNEP filters: protocol multicast<br> [    1.374928] Bluetooth: BNEP socket layer initialized<br> [    1.379890] Bluetooth: HIDP (Human Interface Emulation) ver 1.2<br> [    1.385825] Bluetooth: HIDP socket layer initialized<br> [    1.391148] Key type dns_resolver registered<br> [    1.395595] Registering SWP&#x2F;SWPB emulation handler<br> [    1.400448] Loading compiled-in X.509 certificates<br> [    1.437437] sun4i-drm display-engine: bound 1100000.mixer (ops 0xc097c610)<br> [    1.445077] sun4i-drm display-engine: bound 1c0c000.lcd-controller (ops 0xc097891c)<br> [    1.453961] [drm] Initialized sun4i-drm 1.0.0 20150629 for display-engine on minor 0<br> [    1.465480] sunxi-mmc 1c10000.mmc: card claims to support voltages below defined range<br> [    1.475874] mmc1: new high speed SDIO card at address 0001<br> [    1.493616] mmc0: host does not support reading read-only switch, assuming write-enable<br> [    1.495706] mmc0: new high speed SDHC card at address 0002<br> [    1.496918] mmcblk0: mmc0:0002 MSD20 3.73 GiB<br> [    1.499651]  mmcblk0: p1 p2 p3<br> [    1.507412] Console: switching to colour frame buffer device 100x30<br> [    1.566756] sun4i-drm display-engine: [drm] fb0: sun4i-drmdrmfb frame buffer device<br> [    1.576864] debugfs: Directory ‘1c22c00.codec’ with parent ‘V3s Audio Codec’ already present!<br> [    1.591054] ALSA device list:<br> [    1.594055]   #0: V3s Audio Codec<br> [    1.612781] EXT4-fs (mmcblk0p2): mounted filesystem with ordered data mode. Opts: (null)<br> [    1.621158] VFS: Mounted root (ext4 filesystem) on device 179:2.<br> [    1.629553] devtmpfs: mounted<br> [    1.633946] Freeing unused kernel memory: 1024K<br> [    1.638711] Run &#x2F;sbin&#x2F;init as init process<br> [    1.690069] random: fast init done<br> [    1.792914] EXT4-fs (mmcblk0p2): re-mounted. Opts: (null)<br> Starting syslogd: OK<br> Starting klogd: OK<br> Running sysctl: OK<br> Starting mdev… OK<br> [    3.206544] cfg80211: Loading compiled-in X.509 certificates for regulatory database<br> [    3.248879] cfg80211: Loaded X.509 cert ‘sforshee: 00b28ddf47aef9cea7’<br> [    3.258062] platform regulatory.0: Direct firmware load for regulatory.db failed with error -2<br> [    3.266896] cfg80211: failed to load regulatory.db<br> [    3.359658] 8723ds: module is from the staging directory, the quality is unknown, you have been warned.<br> Initializing random number generator: OK<br> Saving random seed: [    3.742299] random: dd: uninitialized urandom read (512 bytes read)<br> OK<br> Starting system message bus: [    3.812938] random: dbus-uuidgen: uninitialized urandom read (12 bytes read)<br> [    3.820155] random: dbus-uuidgen: uninitialized urandom read (8 bytes read)<br> done<br> Starting bluetoothd: OK<br> Starting network: OK<br> [    6.200965] random: crng init done<br> [    6.204396] random: 3 urandom warning(s) missed due to ratelimiting<br> Starting sshd: OK<br> Welcome to Buildroot for the LicheePi Zero<br> licheepi-zero login: </li>
<li>UART2默认速率是9600可以使用cat &#x2F;dev&#x2F;ttyS2来测试串口是否正常</li>
<li>使用rtk_hciattach绑定uart端口<br> rtk_hciattach -n -s 115200&#x2F;dev&#x2F;ttyS2 rtk_h5 &amp;</li>
</ol>
<p><code>注意这个过程需要加载固件才行，如果固件不存在、不匹配或者错误就会失败。需要把固件放到提示的位置</code><br>5. 固件及配置文件加载完后<br>        Realtek Bluetooth :Init Process finished<br>        Realtek Bluetooth post process<br>        Device setup complete<br><code>出现这个说明蓝牙模块初始化完成 此时hci0蓝牙端口已经生成,使用hciconfig工具可以查看端口及状态</code><br>6. hciconfig -a<br>        hci0:   Type: Primary  Bus: UART<br>            BD Address: 34:20:03:AA:A3:7E  ACL MTU: 1021:8  SCO MTU: 255:12<br>            UP RUNNING PSCAN ISCAN<br>            RX bytes:165747 acl:159 sco:0 events:1160 errors:0<br>            TX bytes:16622 acl:158 sco:0 commands:225 errors:0<br>            Features: 0xff 0xff 0xff 0xfe 0xdb 0xfd 0x7b 0x87<br>            Packet type: DM1 DM3 DM5 DH1 DH3 DH5 HV1 HV2 HV3<br>            Link policy: RSWITCH HOLD SNIFF PARK<br>            Link mode: SLAVE ACCEPT<br>            Name: ‘Sonavox-BT’<br>            Class: 0x040428<br>            Service Classes: Rendering<br>            Device Class: Audio&#x2F;Video, HiFi Audio Device<br>            HCI Version: 4.1 (0x7)  Revision: 0xaa7a<br>            LMP Version: 4.1 (0x7)  Subversion: 0x8cb2<br>            Manufacturer: Realtek Semiconductor Corporation (93)<br>7. bluealsa -p a2dp-sink &amp;<br>    <code>建立bluez与alsa之前的桥梁，否则无法播放音频，只能连接上</code><br>8. bluetoothd启动需要加载一些配置文件在&#x2F;etc&#x2F;bluetooth&#x2F;main.conf 不加载也可以<br>        #Default adaper name<br>        #Defaults to ‘BlueZ X.YZ’<br>        Name &#x3D; Sonavox-BT</p>
<pre><code>    #Default device class. Only the major and minor device class bits are
    #considered. Defaults to &#39;0x000000&#39;.
    Class = 0x000428

    #How long to stay in discoverable mode before going back to non-discoverable
    #The value is in seconds. Default is 180, i.e. 3 minutes.
    #0 = disable timer, i.e. stay discoverable forever
    DiscoverableTimeout = 0

    #How long to stay in pairable mode before going back to non-discoverable
    #The value is in seconds. Default is 0.
    #0 = disable timer, i.e. stay pairable forever
    PairableTimeout = 0

    #Automatic connection for bonded devices driven by platform/user events.
    #If a platform plugin uses this mechanism, automatic connections will be
    #enabled during the interval defined below. Initially, this feature
    #intends to be used to establish connections to ATT channels. Default is 60.
    AutoConnectTimeout = 60
</code></pre>
<ol start="9">
<li><p>使用蓝牙界的瑞士军刀bluetoothctl来调试蓝牙</p>
</li>
<li><p>下面是可用的命令<br>Available commands:<br>——————-<br>advertise                                         Advertise Options Submenu<br>scan                                              Scan Options Submenu<br>gatt                                              Generic Attribute Submenu<br>list                                              List available controllers<br>show [ctrl]                                       Controller information<br>select <ctrl>                                     Select default controller<br>devices                                           List available devices<br>paired-devices                                    List paired devices<br>system-alias <name>                               Set controller alias<br>reset-alias                                       Reset controller alias<br>power &lt;on&#x2F;off&gt;                                    Set controller power<br>pairable &lt;on&#x2F;off&gt;                                 Set controller pairable mode<br>discoverable &lt;on&#x2F;off&gt;                             Set controller discoverable mode<br>discoverable-timeout [value]                      Set discoverable timeout<br>agent &lt;on&#x2F;off&#x2F;capability&gt;                         Enable&#x2F;disable agent with given capability<br>default-agent                                     Set agent as the default one<br>advertise &lt;on&#x2F;off&#x2F;type&gt;                           Enable&#x2F;disable advertising with given type<br>set-alias <alias>                                 Set device alias<br>scan &lt;on&#x2F;off&gt;                                     Scan for devices<br>info [dev]                                        Device information<br>pair [dev]                                        Pair with device<br>cancel-pairing [dev]                              Cancel pairing with device<br>trust [dev]                                       Trust device<br>untrust [dev]                                     Untrust device<br>block [dev]                                       Block device<br>unblock [dev]                                     Unblock device<br>remove <dev>                                      Remove device<br>connect <dev>                                     Connect device<br>disconnect [dev]                                  Disconnect device<br>menu <name>                                       Select submenu<br>version                                           Display version<br>quit                                              Quit program<br>exit                                              Quit program<br>help                                              Display help about this program<br>export                                            Print environment variables</p>
</li>
<li><p>操作记录如下: trust dev 之后，再连接就不再提示密码了，直接连接上<br>[bluetooth]# discoverable on<br>Changing discoverable on succeeded<br>[bluetooth]# pairable on<br>Changing pairable on succeeded<br>[CHG] Device D8:8F:76:51:A7:87 Connected: yes<br>Request confirmation<br>[agent] Confirm passkey 151930 (yes&#x2F;no): yes<br>Authorize service<br>[agent] Authorize service 0000110d-0000-1000-8000-00805f9b34fb (yes&#x2F;no):<br>[CHG] Device D8:8F:76:51:A7:87 ServicesResolved: yes<br>[agent] Authorize service 0000110d-0000-1000-8000-00805f9b34fb (yes&#x2F;no): yes<br>Authorize service<br>[agent] Authorize service 0000110e-0000-1000-8000-00805f9b34fb (yes&#x2F;no): yes<br>[ 2681.328397] input: iPhone (AVRCP) as &#x2F;devices&#x2F;virtual&#x2F;input&#x2F;#input5<br>[iPhone]# list<br>Controller 34:20:03:AA:A3:7E Sonavox-BT [default]<br>[iPhone]# devices<br>Device D8:8F:76:51:A7:87 iPhone<br>[iPhone]# info<br>Device D8:8F:76:51:A7:87 (public)<br>        Name: iPhone<br>        Alias: iPhone<br>        Class: 0x007a020c<br>        Icon: phone<br>        Paired: yes<br>        Trusted: no<br>        Blocked: no<br>        Connected: yes<br>        LegacyPairing: no<br>        UUID: Vendor specific           (00000000-deca-fade-deca-deafdecacafe)<br>        UUID: Service Discovery Serve.. (00001000-0000-1000-8000-00805f9b34fb)<br>        UUID: Audio Source              (0000110a-0000-1000-8000-00805f9b34fb)<br>        UUID: A&#x2F;V Remote Control Target (0000110c-0000-1000-8000-00805f9b34fb)<br>        UUID: Advanced Audio Distribu.. (0000110d-0000-1000-8000-00805f9b34fb)<br>        UUID: A&#x2F;V Remote Control        (0000110e-0000-1000-8000-00805f9b34fb)<br>        UUID: NAP                       (00001116-0000-1000-8000-00805f9b34fb)<br>        UUID: Handsfree Audio Gateway   (0000111f-0000-1000-8000-00805f9b34fb)<br>        UUID: Phonebook Access Server   (0000112f-0000-1000-8000-00805f9b34fb)<br>        UUID: Message Access Server     (00001132-0000-1000-8000-00805f9b34fb)<br>        UUID: PnP Information           (00001200-0000-1000-8000-00805f9b34fb)<br>        UUID: Generic Access Profile    (00001800-0000-1000-8000-00805f9b34fb)<br>        UUID: Generic Attribute Profile (00001801-0000-1000-8000-00805f9b34fb)<br>        UUID: Current Time Service      (00001805-0000-1000-8000-00805f9b34fb)<br>        UUID: Device Information        (0000180a-0000-1000-8000-00805f9b34fb)<br>        UUID: Battery Service           (0000180f-0000-1000-8000-00805f9b34fb)<br>        UUID: Vendor specific           (02030302-1d19-415f-86f2-22a2106a0a77)<br>        UUID: Vendor specific           (7905f431-b5ce-4e99-a40f-4b1e122d00d0)<br>        UUID: Vendor specific           (89d3502b-0f36-433a-8ef4-c502ad55f8dc)<br>        UUID: Vendor specific           (9fa480e0-4967-4542-9390-d343dc5d04ae)<br>        UUID: Vendor specific           (d0611e78-bbb4-4591-a5f8-487910ae4366)<br>        Modalias: bluetooth:v004Cp710Cd0E70<br>        Battery Percentage: 0x55 (85)<br>[iPhone]# quit<br><br># cat &#x2F;proc&#x2F;bus&#x2F;input&#x2F;devices<br>I: Bus&#x3D;0019 Vendor&#x3D;0001 Product&#x3D;0001 Version&#x3D;0100<br>N: Name&#x3D;”1c22800.lradc”<br>P: Phys&#x3D;sun4i_lradc&#x2F;input0<br>S: Sysfs&#x3D;&#x2F;devices&#x2F;platform&#x2F;soc&#x2F;1c22800.lradc&#x2F;input&#x2F;input0<br>U: Uniq&#x3D;<br>H: Handlers&#x3D;kbd event0<br>B: PROP&#x3D;0<br>B: EV&#x3D;3<br>B: KEY&#x3D;3 0 0 0 0 0 0 0 c0000 0 0 0<br><br>I: Bus&#x3D;0019 Vendor&#x3D;0000 Product&#x3D;0000 Version&#x3D;0000<br>N: Name&#x3D;”rotary@0”<br>P: Phys&#x3D;<br>S: Sysfs&#x3D;&#x2F;devices&#x2F;platform&#x2F;rotary@0&#x2F;input&#x2F;input1<br>U: Uniq&#x3D;<br>H: Handlers&#x3D;event1<br>B: PROP&#x3D;0<br>B: EV&#x3D;5<br>B: REL&#x3D;1<br><br>I: Bus&#x3D;0018 Vendor&#x3D;0000 Product&#x3D;0000 Version&#x3D;0000<br>N: Name&#x3D;”ns2009_ts”<br>P: Phys&#x3D;input&#x2F;ts<br>S: Sysfs&#x3D;&#x2F;devices&#x2F;platform&#x2F;soc&#x2F;1c2ac00.i2c&#x2F;i2c-0&#x2F;0-0048&#x2F;input&#x2F;input2<br>U: Uniq&#x3D;<br>H: Handlers&#x3D;event2<br>B: PROP&#x3D;0<br>B: EV&#x3D;b<br>B: KEY&#x3D;400 0 0 0 0 0 0 0 0 0 0<br>B: ABS&#x3D;3<br><br>I: Bus&#x3D;0005 Vendor&#x3D;004c Product&#x3D;710c Version&#x3D;0e70<br>N: Name&#x3D;”iPhone (AVRCP)”<br>P: Phys&#x3D;34:20:03:aa:a3:7e<br>S: Sysfs&#x3D;&#x2F;devices&#x2F;virtual&#x2F;input&#x2F;input5<br>U: Uniq&#x3D;<br>H: Handlers&#x3D;kbd event3<br>B: PROP&#x3D;0<br>B: EV&#x3D;100007<br>B: KEY&#x3D;2fc800 1452 0 0 0 0 10300 49e8 c00 e1680 f f8100000 10000ffc<br>B: REL&#x3D;0</p>
</li>
<li><p>通过AVRCP来控制手机上一曲，下一曲等 <a href="https://git.kernel.org/pub/scm/bluetooth/bluez.git/tree/doc/media-api.txt">https://git.kernel.org/pub/scm/bluetooth/bluez.git/tree/doc/media-api.txt</a><br><code>注意这里的蓝牙地址是你手机的，不是蓝牙模块的，因为要控制的是你的手机进行一一曲，下一曲的，地址不对会提示错误，就是这个原因</code><br>Error org.freedesktop.DBus.Error.UnknownObject: Method “Previous” with signature “” on interface “org.bluez.MediaControl1” doesn’t exist<br><br># dbus-send –system –print-reply –dest&#x3D;org.bluez &#x2F;org&#x2F;bluez&#x2F;hci0&#x2F;dev_D8_8F_76_51_A7_87 org.bluez.MediaControl1.Pause<br># dbus-send –system –print-reply –dest&#x3D;org.bluez &#x2F;org&#x2F;bluez&#x2F;hci0&#x2F;dev_D8_8F_76_51_A7_87 org.bluez.MediaControl1.Play<br># dbus-send –system –print-reply –dest&#x3D;org.bluez &#x2F;org&#x2F;bluez&#x2F;hci0&#x2F;dev_D8_8F_76_51_A7_87 org.bluez.MediaControl1.Previous<br># dbus-send –system –print-reply –dest&#x3D;org.bluez &#x2F;org&#x2F;bluez&#x2F;hci0&#x2F;dev_D8_8F_76_51_A7_87 org.bluez.MediaControl1.Next<br># dbus-send –system –print-reply –dest&#x3D;org.bluez &#x2F;org&#x2F;bluez&#x2F;hci0&#x2F;dev_D8_8F_76_51_A7_87 org.bluez.MediaControl1.VolumeUp<br># dbus-send –system –print-reply –dest&#x3D;org.bluez &#x2F;org&#x2F;bluez&#x2F;hci0&#x2F;dev_D8_8F_76_51_A7_87 org.bluez.MediaControl1.VolumeDown<br>以下返回结果，可以看到”org.bluez.MediaControl1”已经注册了，但是提示已废弃，新的方法是”org.bluez.MediaPlay1”,但是我这里用不了<br><node><br>    <interface name="org.freedesktop.DBus.Introspectable"><br>        <method name="Introspect"><br>            <arg name="xml" type="s" direction="out"/><br>        </method><br>    </interface><br>    <interface name="org.bluez.Device1"><br>        <method name="Disconnect"></method><br>        <method name="Connect"></method><br>        <method name="ConnectProfile"><br>            <arg name="UUID" type="s" direction="in"/><br>        </method><br>        <method name="DisconnectProfile"><br>            <arg name="UUID" type="s" direction="in"/><br>        </method><br>        <method name="Pair"></method><br>        <method name="CancelPairing"></method><br>        <property name="Address" type="s" access="read"></property><br>        <property name="AddressType" type="s" access="read"></property><br>        <property name="Name" type="s" access="read"></property><br>        <property name="Alias" type="s" access="readwrite"></property><br>        <property name="Class" type="u" access="read"></property><br>        <property name="Appearance" type="q" access="read"></property><br>        <property name="Icon" type="s" access="read"></property><br>        <property name="Paired" type="b" access="read"></property><br>        <property name="Trusted" type="b" access="readwrite"></property><br>        <property name="Blocked" type="b" access="readwrite"></property><br>        <property name="LegacyPairing" type="b" access="read"></property><br>        <property name="RSSI" type="n" access="read"></property><br>        <property name="Connected" type="b" access="read"></property><br>        <property name="UUIDs" type="as" access="read"></property><br>        <property name="Modalias" type="s" access="read"></property><br>        <property name="Adapter" type="o" access="read"></property><br>        <property name="ManufacturerData" type="a{qv}" access="read"></property><br>        <property name="ServiceData" type="a{sv}" access="read"></property><br>        <property name="TxPower" type="n" access="read"></property><br>        <property name="ServicesResolved" type="b" access="read"></property><br>        <property name="WakeAllowed" type="b" access="readwrite"></property><br>    </interface><br>    <interface name="org.freedesktop.DBus.Properties"><br>        <method name="Get"><br>            <arg name="interface" type="s" direction="in"/><br>            <arg name="name" type="s" direction="in"/><br>            <arg name="value" type="v" direction="out"/><br>        </method><br>        <method name="Set"><br>            <arg name="interface" type="s" direction="in"/><br>            <arg name="name" type="s" direction="in"/><br>            <arg name="value" type="v" direction="in"/><br>        </method><br>        <method name="GetAll"><br>            <arg name="interface" type="s" direction="in"/><br>            <arg name="properties" type="a{sv}" direction="out"/><br>        </method><br>        <signal name="PropertiesChanged"><br>            <arg name="interface" type="s"/><br>            <arg name="changed_properties" type="a{sv}"/><br>            <arg name="invalidated_properties" type="as"/><br>        </signal><br>    </interface><br>    <interface name="org.bluez.Network1"><br>        <method name="Connect"><br>            <arg name="uuid" type="s" direction="in"/><br>            <arg name="interface" type="s" direction="out"/><br>        </method><br>        <method name="Disconnect"></method><br>        <property name="Connected" type="b" access="read"></property><br>        <property name="Interface" type="s" access="read"></property><br>        <property name="UUID" type="s" access="read"></property><br>    </interface><br>    <interface name="org.bluez.MediaControl1"><br>        <method name="Play"><br>            <annotation name="org.freedesktop.DBus.Deprecated" value="true"/><br>        </method><br>        <method name="Pause"><br>            <annotation name="org.freedesktop.DBus.Deprecated" value="true"/><br>        </method><br>        <method name="Stop"><br>            <annotation name="org.freedesktop.DBus.Deprecated" value="true"/><br>        </method><br>        <method name="Next"><br>            <annotation name="org.freedesktop.DBus.Deprecated" value="true"/><br>        </method><br>        <method name="Previous"><br>            <annotation name="org.freedesktop.DBus.Deprecated" value="true"/><br>        </method><br>        <method name="VolumeUp"><br>            <annotation name="org.freedesktop.DBus.Deprecated" value="true"/><br>        </method><br>        <method name="VolumeDown"><br>            <annotation name="org.freedesktop.DBus.Deprecated" value="true"/><br>        </method><br>        <method name="FastForward"><br>            <annotation name="org.freedesktop.DBus.Deprecated" value="true"/><br>        </method><br>        <method name="Rewind"><br>            <annotation name="org.freedesktop.DBus.Deprecated" value="true"/><br>        </method><br>        <property name="Connected" type="b" access="read"></property><br>        <property name="Player" type="o" access="read"></property><br>    </interface><br>    <interface name="org.bluez.Battery1"><br>        <property name="Percentage" type="y" access="read"></property><br>    </interface><br>    <node name="fd1"/><br>    <node name="player2"/><br>    <node name="sep1"/><br>    <node name="sep2"/><br>    <node name="sep3"/><br>    <node name="sep4"/><br>    <node name="sep5"/><br>    <node name="sep6"/><br>    <node name="service0006"/><br>    <node name="service000a"/><br>    <node name="service000f"/><br>    <node name="service0014"/><br>    <node name="service0018"/><br>    <node name="service001e"/><br>    <node name="service0023"/><br>    <node name="service002d"/><br></node>“</p>
</li>
<li><p>另外在蓝牙连接成功时会在&#x2F;dev&#x2F;input&#x2F;目录下注册一个event3<br>I: Bus&#x3D;0005 Vendor&#x3D;004c Product&#x3D;710c Version&#x3D;0e70<br>N: Name&#x3D;”iPhone (AVRCP)”<br>P: Phys&#x3D;34:20:03:aa:a3:7e<br>S: Sysfs&#x3D;&#x2F;devices&#x2F;virtual&#x2F;input&#x2F;input5<br>U: Uniq&#x3D;<br>H: Handlers&#x3D;kbd event3<br>B: PROP&#x3D;0<br>B: EV&#x3D;100007<br>B: KEY&#x3D;2fc800 1452 0 0 0 0 10300 49e8 c00 e1680 f f8100000 10000ffc<br>B: REL&#x3D;0<br>我偿试过使用sendevent 去操作&#x2F;dev&#x2F;input&#x2F;event3 但是没有任何反应，不知道能不能这样操作？<br># .&#x2F;sendevent &#x2F;dev&#x2F;input&#x2F;event3 1 116 1<br># .&#x2F;sendevent &#x2F;dev&#x2F;input&#x2F;event3 0 0 0<br># .&#x2F;sendevent &#x2F;dev&#x2F;input&#x2F;event3 1 114 1</p>
</li>
<li><p>至此，蓝牙 DLNA，Airplay可以同时播放音乐了</p>
</li>
</ol>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>V3S</tag>
        <tag>Audio</tag>
        <tag>BT</tag>
      </tags>
  </entry>
</search>
